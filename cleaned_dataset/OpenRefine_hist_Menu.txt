---------------------------------------------------------------------------------------------------------------------
This file contains the operation history for openrefine and JSON that can be applied. 
---------------------------------------------------------------------------------------------------------------------
	
	
---------------------------------------------------------------------------------------------------------------------
OPeration History 
---------------------------------------------------------------------------------------------------------------------

	Text transform on cells in column id using expression value.trim()
	Text transform on cells in column id using expression value.replace(/\s+/,' ')
	Text transform on cells in column id using expression value.toNumber()
	Text transform on cells in column name using expression value.trim()
	Text transform on cells in column name using expression grel:cells["location"].value
	Text transform on cells in column name using expression value.trim()
	Text transform on cells in column name using expression value.replace(/\s+/,' ')
	Mass edit cells in column name
	Text transform on cells in column name using expression grel:value.replace('"','')
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Text transform on cells in column name using expression value.toUppercase()
	Text transform on cells in column name using expression grel:value.replace(/\? /,'')
	Text transform on cells in column name using expression grel:value.replace(/\?/,'')
	Text transform on cells in column name using expression grel:value.replace(/\(\)/,'')
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Text transform on cells in column name using expression grel:value.replace('\\""','').replace('\\','')
	Text transform on cells in column sponsor using expression value.trim()
	Text transform on cells in column sponsor using expression value.replace(/\s+/,' ')
	Text transform on cells in column sponsor using expression value.toUppercase()
	Text transform on cells in column sponsor using expression grel:cells["name"].value
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column name
	Mass edit cells in column sponsor
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Text transform on cells in column sponsor using expression grel:value.replace('?','').replace('\\""','').replace('\\','').replace('"','').replace('?)','')
	Mass edit cells in column sponsor
	Text transform on cells in column sponsor using expression grel:value.split('(')[0].split(')')[0]
	Text transform on cells in column sponsor using expression value.trim()
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Text transform on cells in column sponsor using expression grel:value.split('[')[0].split(']')[0]
	Text transform on cells in column event using expression value.trim()
	Text transform on cells in column event using expression value.replace(/\s+/,' ')
	Text transform on cells in column event using expression value.toUppercase()
	Text transform on cells in column event using expression grel:value.split('[')[0].split(']')[0]
	Text transform on cells in column event using expression grel:value.replace(';','')
	Mass edit cells in column event
	Mass edit cells in column event
	Mass edit cells in column event
	Mass edit cells in column event
	Mass edit cells in column event
	Mass edit cells in column event
Edit single cell on row 8892, column event
Edit single cell on row 262, column event
	Mass edit cells in column event
Edit single cell on row 9646, column event
Edit single cell on row 9549, column event
Edit single cell on row 5511, column event
	Mass edit cells in column name
	Mass edit cells in column sponsor
Edit single cell on row 9201, column sponsor
Edit single cell on row 9753, column sponsor
	Text transform on cells in column event using expression value.trim()
	Text transform on cells in column event using expression value.replace(/\s+/,' ')
	Text transform on cells in column venue using expression value.trim()
	Text transform on cells in column venue using expression value.replace(/\s+/,' ')
	Text transform on cells in column venue using expression value.toUppercase()
	Text transform on cells in column venue using expression grel:value.replace('?','')
	Text transform on cells in column venue using expression grel:value.split('(')[0].split(')')[0]
	Text transform on cells in column venue using expression grel:value.split('(')[0].split(')')[0]
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('COMMERCIAL','COM')
	Text transform on cells in column venue using expression grel:value.replace('COMM','COM')
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('COM','COMMERCIAL')
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('POL','POLITICAL')
	Text transform on cells in column venue using expression grel:value.replace('SOCIAL','SOC')
	Text transform on cells in column venue using expression grel:value.replace('SOC','SOCIAL')
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('RELIG','REL')
	Text transform on cells in column venue using expression grel:value.replace('REL','RELIGIOUS')
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('EDUC','EDUCATIONAL')
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')
	Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Mass edit cells in column venue
	Text transform on cells in column occasion using expression value.trim()
	Text transform on cells in column occasion using expression value.replace(/\s+/,' ')
Edit single cell on row 6121, column occasion
Edit single cell on row 6532, column occasion
Edit single cell on row 6915, column occasion
	Mass edit cells in column occasion
	Mass edit cells in column occasion
Edit single cell on row 4721, column occasion
Edit single cell on row 9745, column occasion
	Mass edit cells in column occasion
	Mass edit cells in column occasion
	Mass edit cells in column occasion
Edit single cell on row 1, column occasion
	Mass edit cells in column occasion
	Text transform on cells in column occasion using expression grel:value.replace(';','')
	Text transform on cells in column call_number using expression value.trim()
	Text transform on cells in column call_number using expression value.replace(/\s+/,' ')
	Text transform on cells in column call_number using expression value.trim()
	Text transform on cells in column date using expression value.trim()
	Text transform on cells in column location using expression value.trim()
	Text transform on cells in column location using expression value.replace(/\s+/,' ')
	Text transform on cells in column location using expression value.replace(/\s+/,' ')
	Text transform on cells in column location using expression value.toUppercase()
	Text transform on cells in column location using expression grel:value.replace('\\""','').replace('\\','').replace('?','').replace('""','').replace('"','')
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column location
	Mass edit cells in column location
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column name
	Mass edit cells in column sponsor
	Mass edit cells in column sponsor
	Mass edit cells in column location
	Mass edit cells in column sponsor
	Mass edit cells in column location
	Text transform on cells in column location using expression grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')
	Text transform on cells in column location using expression grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')
	Text transform on cells in column location using expression grel:value.split('(')[0].split(')')[0]
	Text transform on cells in column location using expression grel:value.split('(')[0].split(')')[0]
	Text transform on cells in column location using expression grel:value.split('[')[0].split(']')[0]
	Mass edit cells in column location
	Text transform on cells in column location using expression value.trim()
	Text transform on cells in column location using expression value.replace(/\s+/,' ')
	Text transform on cells in column location_type using expression value.trim()
	Text transform on cells in column location_type using expression value.replace(/\s+/,' ')
	Text transform on cells in column currency using expression value.trim()
	Text transform on cells in column currency using expression value.replace(/\s+/,' ')
	Text transform on cells in column currency using expression value.toUppercase()
	Mass edit cells in column currency
	Mass edit cells in column currency_symbol
	Mass edit cells in column currency
Edit single cell on row 34, column currency
Edit single cell on row 34, column currency_symbol
	Mass edit cells in column currency
	Mass edit cells in column currency
	Mass edit cells in column currency
	Mass edit cells in column currency_symbol
	Fill down cells in column currency
Edit single cell on row 88, column currency
	Fill down cells in column currency
	Mass edit cells in column currency
	Text transform on cells in column currency using expression grel:value.replace('','SHILLINGS')
	Text transform on cells in column currency using expression grel:cells["notes"].value
	Mass edit cells in column currency
	Mass edit cells in column currency
	Mass edit cells in column currency
	Mass edit cells in column currency
	Text transform on cells in column currency using expression value.trim()
	Text transform on cells in column currency using expression value.replace(/\s+/,' ')
	Text transform on cells in column currency_symbol using expression value.trim()
	Text transform on cells in column currency_symbol using expression value.replace(/\s+/,' ')
	Text transform on cells in column currency_symbol using expression grel:cells["currency"].value
	Mass edit cells in column currency_symbol
	Text transform on cells in column status using expression value.trim()
	Text transform on cells in column status using expression value.replace(/\s+/,' ')
	Text transform on cells in column status using expression value.toUppercase()
	Text transform on cells in column page_count using expression value.toNumber()
	Text transform on cells in column dish_count using expression value.toNumber()
	Text transform on cells in column physical_description using expression value.trim()
	Text transform on cells in column physical_description using expression value.replace(/\s+/,' ')
	Text transform on cells in column physical_description using expression value.trim()
	Text transform on cells in column physical_description using expression value.replace(/\s+/,' ')
	Text transform on cells in column physical_description using expression grel:value.replace(',',';')
	Text transform on cells in column place using expression value.trim()
	Mass edit cells in column place
	Mass edit cells in column place
	Mass edit cells in column place
	Mass edit cells in column place
	Mass edit cells in column place
	Mass edit cells in column place
	Mass edit cells in column place
	Text transform on cells in column place using expression grel:value.replace('"','').replace('?','')
	Text transform on cells in column place using expression grel:value.split('[')[0].split(']')[0]
	Text transform on cells in column place using expression grel:value.split('(')[0].split(')')[0]
	Text transform on cells in column notes using expression grel:value.replace('"','').replace('?','')
	Text transform on cells in column physical_description using expression grel:cells["status"].value
	Text transform on cells in column physical_description using expression value.trim()
	Text transform on cells in column physical_description using expression value.replace(/\s+/,' ')
	Text transform on cells in column physical_description using expression value.toUppercase()
	Mass edit cells in column physical_description
	Mass edit cells in column physical_description
	Mass edit cells in column physical_description
	Text transform on cells in column place using expression value.toUppercase()
	Text transform on cells in column notes using expression value.toUppercase()
	Mass edit cells in column notes
	Mass edit cells in column notes
	Mass edit cells in column notes
	Mass edit cells in column notes
	Mass edit cells in column notes
	Mass edit cells in column currency_symbol
	Text transform on cells in column currency_symbol using expression grel:value.replace('Â','')
	Mass edit cells in column currency_symbol
	Mass edit cells in column currency_symbol
	Mass edit cells in column currency_symbol
	Mass edit cells in column currency_symbol
	Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]
	Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]
	Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]
	Mass edit cells in column physical_description
	Mass edit cells in column status
	Mass edit cells in column physical_description

	
---------------------------------------------------------------------------------------------------------------------
JSON History 
---------------------------------------------------------------------------------------------------------------------

[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column id using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column id using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column id using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:cells[\"location\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": true,
          "selection": [],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "grel:cells[\"location\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "?"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:value.replace('\"','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "\"\"\"",
          "name": "name",
          "type": "text",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "grel:value.replace('\"','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[Restaurant name and/or location not given]",
          "[Restaurant Name And/Or Location Not Given]",
          "Restaurant name and/or location not given]",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "to": "Restaurant name and/or location not given"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd",
          "Norddeutscher Lloyd Bremen;"
        ],
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel (?)",
          "Fifth Avenue Hotel?",
          "(Fifth Avenue Hotel?}"
        ],
        "to": "Fifth Avenue Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "to": "Childs"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker (?)",
          "Knickerbocker Hotel"
        ],
        "to": "Knickerbocker Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "to": "U.S.M.S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "to": "Delmonico's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen"
        ],
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Manhattan",
          "Manhattan Hotel"
        ],
        "to": "Manhattan Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "to": "Healy's Forty-second Street Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Victory",
          "Victory Hotel"
        ],
        "to": "Victory Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Alcazar",
          "Alcazar Hotel"
        ],
        "to": "Alcazar Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[Restaurant And/Or Location Not Given.]",
          "[Restaurant And/Or Location Not Given]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "to": "The Commodore Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "to": "Majestic Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "to": "Astor Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Chamberlin",
          "Chamberlin Hotel"
        ],
        "to": "Chamberlin Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Colonial Hotel",
          "Hotel Colonial"
        ],
        "to": "Colonial Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel St. Regis",
          "St. Regis Hotel"
        ],
        "to": "St. Regis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf Astoria",
          "Waldorf Astoria?"
        ],
        "to": "Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Empire Hotel",
          "Hotel Empire"
        ],
        "to": "Empire Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Royal Palm Hotel",
          "Hotel Royal Palm"
        ],
        "to": "Royal Palm Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic"
        ],
        "to": "R.M.S. Oceanic"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "to": "Savoy Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "to": "Commodore Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. Queen Mary",
          "R.M.S. \\Queen Mary\\\"\""
        ],
        "to": "R.M.S. Queen Mary"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Claremont Hotel",
          "Hotel Claremont"
        ],
        "to": "Claremont Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Champlain",
          "Champlain Hotel"
        ],
        "to": "Champlain Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \\Mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "to": "R.M.S. Mauretania"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Windsor Hotel",
          "Hotel Windsor"
        ],
        "to": "Windsor Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "to": "The Mouquin Restaurant And Wine Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "to": "Marie Antoinette Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Westminster",
          "Westminster Hotel"
        ],
        "to": "Westminster Hotel"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park"
        ],
        "to": "Gramercy Park Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique"
        ],
        "to": "Cie Gle Transatlantique"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central System",
          "[New York Central System]"
        ],
        "to": "New York Central System"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "to": "St. Charles Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Del Coronado",
          "Del Coronado Hotel"
        ],
        "to": "Del Coronado Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "to": "S.S. Frederik VIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "to": "Adams' Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Imperial",
          "Imperial Hotel"
        ],
        "to": "Imperial Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "to": "Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "to": "Vendome Hotel"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "to": "The Merchants Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St, Denis Hotel"
        ],
        "to": "St. Denis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "American Medical Editor's Association",
          "American Medical Editors' Association",
          "American Medical Editors Association"
        ],
        "to": "American Medical Editors Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Metropole",
          "Metropole Hotel"
        ],
        "to": "Metropole Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Alta Vista Hotel",
          "Alta Vista Hotel (?)"
        ],
        "to": "Alta Vista Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick"
        ],
        "to": "Friendly Sons Of St Patrick"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Chamber Of Commerce",
          "Chamber of Commerce"
        ],
        "to": "Chamber Of Commerce"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of The Society Of Colonial Wars In The State Of New York"
        ],
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Laurel In The Pines",
          "Laurel in the Pines"
        ],
        "to": "Laurel in the Pines"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Del Prado Hotel",
          "Hotel Del Prado"
        ],
        "to": "Del Prado Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "to": "Childs Lunch Rooms"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Engineers Club",
          "Engineers' Club"
        ],
        "to": "Engineers Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Grunewald",
          "Grunewald Hotel"
        ],
        "to": "Grunewald Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "to": "Fairmont Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Nicholas Hotel",
          "Hotel St. Nicholas"
        ],
        "to": "St. Nicholas Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Colorado",
          "Colorado Hotel"
        ],
        "to": "Colorado Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "to": "Cosmopolitan Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Colombo",
          "Colombo Hotel"
        ],
        "to": "Colombo Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "to": "Ancient & Accepted Scottish Rite"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "to": "Hotel Du Musee"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "to": "Tavern On The Green"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "to": "S.S. New Amsterdam"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "to": "Sherrys"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bristol Hotel",
          "Hotel Bristol"
        ],
        "to": "Bristol Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "to": "Algonquin Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "to": "Willards Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Century Club",
          "Century Club?"
        ],
        "to": "Century Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "to": "Mercantile Lunch Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Netherland",
          "Netherland Hotel"
        ],
        "to": "Netherland Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St.Regis Hotel",
          "Hotel St.Regis"
        ],
        "to": "St.Regis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Velvet",
          "Velvet Hotel"
        ],
        "to": "Velvet Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Paquebot \\France\\\"\"",
          "Paquebot France"
        ],
        "to": "Paquebot France"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Columbia Hotel",
          "Hotel Columbia"
        ],
        "to": "Columbia Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New Grand Hotel",
          "Grand New Hotel"
        ],
        "to": "New Grand Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "to": "The Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Place Viger Hotel",
          "Hotel Place Viger"
        ],
        "to": "Place Viger Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Lafayette",
          "Lafayette Hotel"
        ],
        "to": "Lafayette Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "to": "Pennsylvania Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Dennis",
          "Dennis Hotel"
        ],
        "to": "Dennis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "to": "Usms St Louis"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Biltmore",
          "Biltmore Hotel"
        ],
        "to": "Biltmore Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Jefferson",
          "Jefferson Hotel"
        ],
        "to": "Jefferson Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "to": "Smith & Mcnell's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel D'angleterre",
          "D'angleterre Hotel"
        ],
        "to": "D'angleterre Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Eastman",
          "Eastman Hotel"
        ],
        "to": "Eastman Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Menzie's Hotel",
          "Menzies Hotel"
        ],
        "to": "Menzies Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "Walton's Old Homestead Oyster And Chop House"
        ],
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Master Printers' Association",
          "Master Printers Association"
        ],
        "to": "Master Printers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "to": "The New England Society In The City Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grenoble Hotel",
          "Hotel Grenoble"
        ],
        "to": "Grenoble Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "to": "Santa Fe Route"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Albany Zouave Cadets Old Guard",
          "Old Guard Albany Zouave Cadets"
        ],
        "to": "Old Guard Albany Zouave Cadets"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "to": "San Remo Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "to": "Shanley's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "to": "Fraunces' Tavern"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "to": "St. George Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grand Hotel Royal",
          "Royal Grand Hotel"
        ],
        "to": "Grand Hotel Royal"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "to": "York Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "to": "Royal Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "to": "Cie Transatlantique"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S. Army Subsistence Dept.",
          "Us Army Subsistence Dept."
        ],
        "to": "U.S. Army Subsistence Dept."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "to": "Martinique Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley-Plaza Hotel",
          "Hotel Copley-Plaza"
        ],
        "to": "Copley-Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "to": "Victoria Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Ponce De Leon",
          "Ponce De Leon Hotel"
        ],
        "to": "Ponce De Leon Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "to": "Pontchartrain Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "to": "Lexington Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Revelstoke Hotel",
          "Hotel Revelstoke"
        ],
        "to": "Revelstoke Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nippon Yusen Kaisha S.S. Kasuga",
          "Nippon Yusen Kaisha Ss Kasuga"
        ],
        "to": "Nippon Yusen Kaisha S.S. Kasuga"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Roanoke Hotel",
          "Hotel Roanoke"
        ],
        "to": "Roanoke Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "to": "Baltimore Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "to": "Statler Hotel"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "to": "Riggs'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Merchant's Club",
          "Merchants' Club",
          "Merchants Club"
        ],
        "to": "The Merchants Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "to": "The Merchants Club Of Chicago"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "De L'ange Hotel",
          "Hotel De L'ange"
        ],
        "to": "Hotel De L'ange"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "to": "St. Francis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Republican Club Of The City Of New York",
          "Republican Club of the City of New York"
        ],
        "to": "Republican Club Of The City Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Michigan Society Of The Sons Of The American Revolution",
          "Michigan Society Sons Of The American Revolution"
        ],
        "to": "Michigan Society Of The Sons Of The American Revolution"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Minot Hotel",
          "Hotel Minot"
        ],
        "to": "Minot Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Kempinski Restaurant",
          "Restaurant Kempinski"
        ],
        "to": "Kempinski Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "to": "George Washington Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Xiii Club",
          "Club Xiii"
        ],
        "to": "Xiii Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Imperial",
          "Imperial (?)"
        ],
        "to": "Imperial"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "to": "Meyers Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "to": "Restaurant Mayan"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "to": "National Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "to": "Des Indes Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New England Shorthand Reporters' Association",
          "New England Shorthand Reporter's Association"
        ],
        "to": "New England Shorthand Reporters' Association"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "? Club",
          "Club"
        ],
        "to": "Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "to": "Pirates' House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "to": "The Merchants Club Of Boston"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "to": "Elks' Club House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "to": "Ambassador Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Worthy",
          "Worthy Hotel"
        ],
        "to": "Worthy Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "to": "The Grand Ballroom Of The Hotel Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "to": "Grocers Hall"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Continental Hotel",
          "Hotel Continental"
        ],
        "to": "Continental Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Society Of Sons Of The Revolution In The State Of Missouri",
          "Society Sons Of The Revolution In The State Of Missouri"
        ],
        "to": "Society Sons Of The Revolution In The State Of Missouri"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "to": "Reuben's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.(?)",
          "Rg"
        ],
        "to": "R.G."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Empire State Society Of Sons Of The American Revolution",
          "Empire State Society Sons Of The American Revolution"
        ],
        "to": "Empire State Society Of Sons Of The American Revolution"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "to": "Winthrop Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Phonix",
          "Phonix Hotel"
        ],
        "to": "Phonix Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "to": "MetLife Building"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "to": "The Plaza Ballroom"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "to": "American Bankers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Brevoort Restaurant",
          "Restaurant Brevoort"
        ],
        "to": "Brevoort Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Castleton Hotel",
          "Hotel Castleton"
        ],
        "to": "Castleton Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Penn Rr Pullman Dining Car Service",
          "Penn. Rr Pullman Dining Car Service"
        ],
        "to": "Penn Rr Pullman Dining Car Service"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "National Cooper's Association",
          "National Coopers Association"
        ],
        "to": "National Coopers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "to": "St. Georges Society"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "to": "The Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "to": "New Weston Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pacific Mail S.S. Co.",
          "Pacific Mail Ss Co."
        ],
        "to": "Pacific Mail S.S. Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Vendome And Profile House",
          "Profile House And Hotel Vendome"
        ],
        "to": "Profile House And Hotel Vendome"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "to": "U.S.S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Gallatin Hotel",
          "Hotel Gallatin"
        ],
        "to": "Gallatin Hotel"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Wabash Railway Company",
          "Wabash [Railway Company]"
        ],
        "to": "Wabash Railway Company"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "to": "Riggs' Twentieth Street Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "to": "Ancient And Honorable Artillery Co. Of Massachusetts"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "to": "The New Willard Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Second Panel Sheriff's Jury",
          "Sheriff's Jury Second Panel"
        ],
        "to": "Sheriff's Jury Second Panel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "to": "Quisisana Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "United States Government",
          "United States Government?"
        ],
        "to": "United States Government"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "to": "Copley Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "to": "New York Central & Hudson River R.R."
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "to": "DuPont Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "to": "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:value.replace(/\\? /,'')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:value.replace(/\\? /,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:value.replace(/\\?/,'')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:value.replace(/\\?/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:value.replace(/\\(\\)/,'')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:value.replace(/\\(\\)/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT AND/OR LOCATION UNKNOWN]"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[THE WALDORF ASTORIA HOTEL (NEW YORK, N.Y.)]"
        ],
        "to": "THE WALDORF ASTORIA HOTEL (NEW YORK, N.Y.)"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[SOO LINE RAILROAD COMPANY]"
        ],
        "to": "SOO LINE RAILROAD COMPANY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[SOUTHERN PACIFIC RAILROAD COMPANY]"
        ],
        "to": "SOUTHERN PACIFIC RAILROAD COMPANY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[VISITOR'S MAP OF FLORENCE]"
        ],
        "to": "VISITOR'S MAP OF FLORENCE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO, ROCHESTER AND PITTSBURGH RY. [RAILWAY]"
        ],
        "to": "BUFFALO, ROCHESTER AND PITTSBURGH RAILWAY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL REPUBLICAN CLUB HOUSE []"
        ],
        "to": "NATIONAL REPUBLICAN CLUB HOUSE."
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW HAVEN R. R. [RAILROAD]"
        ],
        "to": "THE NEW HAVEN R.R. [RAILROAD]"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "DINNER [SPONSORED BY] LA CÃ´TE BASQUE [AT] NEW YORK, NY",
                "l": "DINNER [SPONSORED BY] LA CÃ´TE BASQUE [AT] NEW YORK, NY"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        },
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER [SPONSORED BY] LA CÃ´TE BASQUE [AT] NEW YORK, NY"
        ],
        "to": "DINNER SPONSORED BY LA CÃ´TE BASQUE AT NEW YORK, NY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\"]\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW HAVEN R.R. [RAILROAD]"
        ],
        "to": "THE NEW HAVEN R.R. RAILROAD"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:value.replace('\\\\\"\"','').replace('\\\\','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "\\\"\"",
          "name": "name",
          "type": "text",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "grel:value.replace('\\\\\"\"','').replace('\\\\','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression grel:cells[\"name\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "sponsor",
          "omitBlank": false,
          "type": "list",
          "columnName": "sponsor"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "grel:cells[\"name\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE - ANTWERPEN -NY",
          "RED STAR LINE -ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN NY",
          "RED STAR LINE -ANTWERPEN - NY",
          "RED STAR LINE -ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN NY"
        ],
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD - BREMEN",
          "NORDDEUTSCHER LLOYD BREMEN;",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD -BREMEN"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH AVENUE HOTEL",
          "(FIFTH AVENUE HOTEL)",
          "(FIFTH AVENUE HOTEL?)",
          "FIFTH AVENUE HOTEL (?)",
          "(FIFTH AVENUE HOTEL?}",
          "FIFTH AVENUE HOTEL;"
        ],
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL",
          "(?COLONIAL HOTEL?)",
          "(COLONIAL HOTEL)"
        ],
        "to": "COLONIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN",
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS",
          "CHILDS'",
          "CHILD'S"
        ],
        "to": "CHILDS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA -S.S.KASUGA",
          "NIPPON YUSEN KAISHA S.S.KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SONOMA",
          "OCEANIC STEAMSHIP COMPANY SONOMA",
          "OCEANIC STEAMSHIP COMPANY _ SONOMA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY - SONOMA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD - BREMEN"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK",
          "GRAMERCY PARK HOTEL; HOTEL GRAMERCY PARK"
        ],
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG AMERIKA LINIE",
          "HAMBURG - AMERIKA LINIE",
          "HAMBURG- AMERIKA LINIE"
        ],
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL KNICKERBOCKER",
          "HOTEL KNICKERBOCKER (?)",
          "KNICKERBOCKER HOTEL"
        ],
        "to": "KNICKERBOCKER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA",
          "(WALDORF-ASTORIA?)",
          "(WALDORF-ASTORIA)"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC",
          "(MAJESTIC HOTEL)",
          "MAJESTIC HOTEL"
        ],
        "to": "MAJESTIC HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE",
          "(RED STAR LINE)",
          "RED STAR LINE -"
        ],
        "to": "RED STAR LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "to": "DELMONICO'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "to": "MANHATTAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "VICTORY HOTEL",
          "HOTEL VICTORY"
        ],
        "to": "VICTORY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ALGAZAR",
          "ALGAZAR HOTEL"
        ],
        "to": "ALCAZAR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALCAZAR HOTEL",
          "HOTEL ALCAZAR"
        ],
        "to": "ALCAZAR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT AND/OR LOCATION NOT GIVEN.]",
          "[RESTAURANT AND/OR LOCATION NOT GIVEN]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COMMODORE HOTEL",
          "THE HOTEL COMMODORE"
        ],
        "to": "THE COMMODORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "ASTOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMBERLIN",
          "CHAMBERLIN HOTEL"
        ],
        "to": "CHAMBERLIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. REGIS HOTEL",
          "HOTEL ST. REGIS"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF ASTORIA",
          "WALDORF- ASTORIA"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE HOTEL",
          "HOTEL EMPIRE"
        ],
        "to": "EMPIRE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "to": "ROYAL PALM HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "to": "SAVOY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COMMODORE",
          "COMMODORE HOTEL"
        ],
        "to": "THE COMMODORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"QUEEN MARY\"\"\"",
          "R.M.S. \\QUEEN MARY\\\"\""
        ],
        "to": "R.M.S. QUEEN MARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHAMPLAIN HOTEL",
          "HOTEL CHAMPLAIN"
        ],
        "to": "CHAMPLAIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \\MAURETANIA\\\"\"",
          "R.M.S. MAURETANIA"
        ],
        "to": "R.M.S. MAURETANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "to": "ADAM'S RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR"
        ],
        "to": "WINDSOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MARIE ANTOINETTE HOTEL",
          "HOTEL MARIE ANTOINETTE"
        ],
        "to": "MARIE ANTOINETTE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - VENTURA",
          "OCEANIC STEAMSHIP CO. VENTURA"
        ],
        "to": "OCEANIC STEAMSHIP CO. VENTURA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WESTMINSTER HOTEL",
          "HOTEL WESTMINSTER"
        ],
        "to": "WESTMINSTER HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA -S.S.KOBE MARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTA VISTA HOTEL",
          "(ALTA VISTA HOTEL)",
          "ALTA VISTA HOTEL (?)"
        ],
        "to": "ALTA VISTA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - SIERRA",
          "OCEANIC STEAMSHIP CO. SIERRA",
          "OCEANIC STEAMSHIP CO.- SIERRA"
        ],
        "to": "OCEANIC STEAMSHIP CO.- SIERRA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS",
          "CHILDS LUNCH ROOMS"
        ],
        "to": "CHILDS LUNCH ROOMS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGINEERS CLUB",
          "(ENGINEERS CLUB)",
          "ENGINEERS' CLUB"
        ],
        "to": "ENGINEERS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(CLUB)",
          "? CLUB",
          "CLUB"
        ],
        "to": "CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY - S.S.ZEALANDER"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "to": "RIGGS'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO.- S.S.ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "to": "THE MERCHANTS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANTS' CLUB",
          "MERCHANT'S CLUB",
          "MERCHANTS CLUB"
        ],
        "to": "THE MERCHANTS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST, DENIS HOTEL"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC STEAMSHIP COMPANY SIERRA",
          "OCEANIC STEAMSHIP COMPANY -SIERRA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA HONG KONG MARU",
          "TOYO KISEN KAISHA -HONG KONG MARU"
        ],
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA -S.S.NASUGA",
          "NIPPON YUSEN KAISHA S.S.NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - SONOMA",
          "OCEANIC STEAMSHIP CO. SONOMA",
          "OCEANIC STEAMSHIP CO. _ SONOMA"
        ],
        "to": "OCEANIC STEAMSHIP CO. SONOMA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "US ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY SUBSISTENCE DEPT."
        ],
        "to": "U.S. ARMY - SUBSISTENCE DEPT."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN MEDICAL EDITORS ASSOCIATION",
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION"
        ],
        "to": "AMERICAN MEDICAL EDITORS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA -S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA S.S.KINSHIN MARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. KINSHIN MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA -SS KASUGA",
          "NIPPON YUSEN KAISHA S.S. KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "",
          "?"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.SOUTHWARK",
          "RED STAR LINE S.S.SOUTHWARK"
        ],
        "to": "RED STAR LINE - S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL"
        ],
        "to": "METROPOLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE LIARU",
          "NIPPON YUSEN KAISHA S.S.KOBE LIARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE LIARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICAN SHIPPER",
          "S.S. \"AMERICAN SHIPPER\"\"\""
        ],
        "to": "S.S. AMERICAN SHIPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "to": "THE MERCHANTS CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WABASH RAILWAY COMPANY",
          "WABASH [RAILWAY COMPANY]"
        ],
        "to": "WABASH RAILWAY COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEBEC STEAMSHIP CO. - SS TRINIDAD",
          "QUEBEC STEAMSHIP CO. SS TRINIDAD"
        ],
        "to": "QUEBEC STEAMSHIP CO. - SS TRINIDAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DE L'ANGE",
          "DE L'ANGE HOTEL"
        ],
        "to": "DE L'ANGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "to": "RIGGS' TWENTIETH STREET RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOUISVILLE & NASHVILLE RAILROAAD - THE PULLMAN CO.",
          "LOUISVILLE & NASHVILLE RAILROAAD THE PULLMAN CO."
        ],
        "to": "LOUISVILLE & NASHVILLE RAILROAAD THE PULLMAN CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING FREDERIK VIII",
          "(KING FREDERIK VIII)"
        ],
        "to": "KING FREDERIK VIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOYO KISEN KAISHA - SS HONG KONG MARU",
          "TOYO KISEN KAISHA SS HONG KONG MARU"
        ],
        "to": "TOYO KISEN KAISHA - SS HONG KONG MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN - S.S.BARBAROSSA",
          "NORDDEUTSCHER LLOYD BREMEN S.S.BARBAROSSA"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN - S.S. BARBAROSSA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "HOTEL ST. FRANCIS"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(KING ALEXANDER OF SERVIA)",
          "KING ALEXANDER OF SERVIA"
        ],
        "to": "KING ALEXANDER OF SERVIA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASSOCIATION OF NEW YORK CITY",
          "(HOTEL ASSOCIATION OF NEW YORK CITY)"
        ],
        "to": "HOTEL ASSOCIATION OF NEW YORK CITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA",
          "OCEANIC STEAMSHIP CO. S.S.ZEALANDIA"
        ],
        "to": "OCEANIC STEAMSHIP CO. - S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRUNEWALD HOTEL",
          "HOTEL GRUNEWALD"
        ],
        "to": "GRUNEWALD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "to": "FAIRMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL",
          "HOTEL ST. NICHOLAS"
        ],
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLORADO HOTEL",
          "HOTEL COLORADO"
        ],
        "to": "COLORADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN... HOTEL"
        ],
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLOMBO HOTEL",
          "HOTEL COLOMBO"
        ],
        "to": "COLOMBO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "to": "ANCIENT & ACCEPTED SCOTTISH RITE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "to": "HOTEL DU MUSEE'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LEHIGH VALLEY RAILROAD - DINING CAR SERVICE",
          "LEHIGH VALLEY RAILROAD DINING CAR SERVICE"
        ],
        "to": "LEHIGH VALLEY RAILROAD - DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "to": "RED STAR LINE - S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAVERN ON THE GREEN",
          "THE TAVERN ON THE GREEN"
        ],
        "to": "TAVERN ON THE GREEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MINOT HOTEL",
          "HOTEL MINOT"
        ],
        "to": "MINOT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S NEW AMSTERDAM",
          "S.S. NEW AMSTERDAM"
        ],
        "to": "S.S NEW AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S",
          "SHERRYS"
        ],
        "to": "SHERRY'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRISTOL HOTEL",
          "HOTEL BRISTOL"
        ],
        "to": "BRISTOL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "SCHWARZWALDERS NATUR WEINHAUS"
        ],
        "to": "SCHWARZWALDER'S NATUR WEINHAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALGONQUIN HOTEL",
          "HOTEL ALGONQUIN"
        ],
        "to": "ALGONQUIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WILLARDS HOTEL",
          "WILLARD'S HOTEL"
        ],
        "to": "WILLARDS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CENTURY CLUB",
          "(CENTURY CLUB?)"
        ],
        "to": "CENTURY CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTHERN RAILWAY DINING CAR SERVICE",
          "SOUTHERN RAILWAY - DINING CAR SERVICE"
        ],
        "to": "SOUTHERN RAILWAY DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL SYSTEM",
          "[NEW YORK CENTRAL SYSTEM]"
        ],
        "to": "NEW YORK CENTRAL SYSTEM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.",
          "(NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.)"
        ],
        "to": "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING EDWARD VII",
          "(KING EDWARD VII)"
        ],
        "to": "KING EDWARD VII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NETHERLAND HOTEL",
          "HOTEL NETHERLAND"
        ],
        "to": "NETHERLAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "to": "ST.REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL",
          "ST CHARLES HOTEL"
        ],
        "to": "ST. CHARLES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VELVET",
          "VELVET HOTEL"
        ],
        "to": "VELVET HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY VENTURA",
          "OCEANIC STEAMSHIP COMPANY - VENTURA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY VENTURA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAQUEBOT \\FRANCE\\\"\"",
          "PAQUEBOT FRANCE"
        ],
        "to": "PAQUEBOT FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGLISH HOTEL RESTAURANT",
          "(ENGLISH HOTEL RESTAURANT)"
        ],
        "to": "ENGLISH HOTEL RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANHATTAN CLUB",
          "(MANHATTAN CLUB)"
        ],
        "to": "MANHATTAN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "to": "COLUMBIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "to": "NEW GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE HOTEL PLAZA",
          "THE PLAZA HOTEL"
        ],
        "to": "THE PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "to": "CLUB XIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LAFAYETTE",
          "LAFAYETTE HOTEL"
        ],
        "to": "LAFAYETTE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PENNSYLVANIA",
          "PENNSYLVANIA HOTEL"
        ],
        "to": "PENNSYLVANIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL"
        ],
        "to": "DENNIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. PARTHIA",
          "R.M.S. \"PARTHIA\"\"\""
        ],
        "to": "R.M.S. PARTHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "to": "USMS ST LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HARVARD CLUB",
          "(HARVARD CLUB)"
        ],
        "to": "HARVARD CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ERIE RAILROAD (?)",
          "ERIE RAILROAD "
        ],
        "to": "ERIE RAILROAD "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON",
          "JEFFERSON HOTEL"
        ],
        "to": "JEFFERSON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL D'ANGLETERRE",
          "D'ANGLETERRE HOTEL"
        ],
        "to": "D'ANGLETERRE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION CLUB",
          "(UNION CLUB)"
        ],
        "to": "UNION CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN LEGATION",
          "(AMERICAN LEGATION)"
        ],
        "to": "AMERICAN LEGATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT"
        ],
        "to": "CLAREMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEL CORONADO HOTEL",
          "HOTEL DEL CORONADO"
        ],
        "to": "DEL CORONADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"FREDERIK VIII\"",
          "S.S. FREDERIK VIII"
        ],
        "to": "S.S. FREDERIK VIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EASTMAN HOTEL",
          "HOTEL EASTMAN"
        ],
        "to": "EASTMAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIE'S HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(KING UMBERTO)",
          "KING UMBERTO"
        ],
        "to": "KING UMBERTO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING HAAKON VII",
          "(KING HAAKON VII)"
        ],
        "to": "KING HAAKON VII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MASTER PRINTERS ASSOCIATION",
          "MASTER PRINTERS' ASSOCIATION"
        ],
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "to": "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "to": "GRENOBLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\\THE MANOR\\\"\"",
          "THE MANOR"
        ],
        "to": "THE MANOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "to": "SANTA FE' ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD GUARD ALBANY ZOUAVE CADETS",
          "ALBANY ZOUAVE CADETS - OLD GUARD"
        ],
        "to": "OLD GUARD ALBANY ZOUAVE CADETS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "to": "SAN REMO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S",
          "SHANLEYS"
        ],
        "to": "SHANLEYS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANKERS' CLUB OF CHICAGO",
          "BANKERS CLUB OF CHICAGO"
        ],
        "to": "BANKERS CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL HOTEL",
          "HOTEL IMPERIAL"
        ],
        "to": "IMPERIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "to": "FRAUNCES' TAVERN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA - LUNCH"
        ],
        "to": "CAFETERIA LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE",
          "ST. GEORGE HOTEL"
        ],
        "to": "ST. GEORGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL ROYAL",
          "ROYAL GRAND HOTEL"
        ],
        "to": "ROYAL GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PLAZA",
          "PLAZA HOTEL"
        ],
        "to": "PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "to": "YORK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ROYAL",
          "ROYAL HOTEL"
        ],
        "to": "ROYAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "to": "VENDOME HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARTINIQUE",
          "MARTINIQUE HOTEL"
        ],
        "to": "MARTINIQUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "to": "COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORIA",
          "VICTORIA HOTEL"
        ],
        "to": "VICTORIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PONCE DE LEON HOTEL",
          "HOTEL PONCE DE LEON"
        ],
        "to": "PONCE DE LEON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(AMERICAN LINE)",
          "AMERICAN LINE"
        ],
        "to": "AMERICAN LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "to": "PONTCHARTRAIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LEXINGTON",
          "LEXINGTON HOTEL"
        ],
        "to": "LEXINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVELSTOKE HOTEL",
          "HOTEL REVELSTOKE"
        ],
        "to": "REVELSTOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE HOTEL",
          "HOTEL ROANOKE"
        ],
        "to": "ROANOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE CLUB",
          "(UNION LEAGUE CLUB)"
        ],
        "to": "UNION LEAGUE CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE"
        ],
        "to": "BALTIMORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "to": "STATLER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PULLMAN DINING CAR SERVICE THE PRESIDENT",
          "PULLMAN DINING CAR SERVICE -THE PRESIDENT"
        ],
        "to": "PULLMAN DINING CAR SERVICE THE PRESIDENT"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAQUEBOT LIBERTE",
          "PAQUEBOT \\LIBERTE\\\"\""
        ],
        "to": "PAQUEBOT LIBERTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(MAHARAJA OF BARODA)",
          "MAHARAJA OF BARODA"
        ],
        "to": "MAHARAJA OF BARODA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOYO KISEN KAISHA - HING KONG MARU",
          "TOYO KISEN KAISHA HING KONG MARU"
        ],
        "to": "TOYO KISEN KAISHA HING KONG MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIRATE'S HOUSE",
          "PIRATES' HOUSE"
        ],
        "to": "PIRATES' HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(HOTEL ZUM HIRSCH)",
          "HOTEL ZUM HIRSCH"
        ],
        "to": "HOTEL ZUM HIRSCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "to": "THE MERCHANTS CLUB OF BOSTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "to": "SHERIFF'S JURY SECOND PANEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN 'BARBAROSSA'",
          "NORDDEUTSCHER LLOYD BREMEN - 'BARBAROSSA'"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN 'BARBAROSSA'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "to": "ELKS CLUB HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KEMPINSKI RESTAURANT",
          "RESTAURANT KEMPINSKI"
        ],
        "to": "KEMPINSKI RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMBASSADOR HOTEL",
          "HOTEL AMBASSADOR"
        ],
        "to": "AMBASSADOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(PRIVATE)",
          "PRIVATE"
        ],
        "to": "PRIVATE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WORTHY",
          "WORTHY HOTEL"
        ],
        "to": "WORTHY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND BALLROOM OF THE HOTEL PLAZA",
          "THE GRAND BALLROOM OF THE HOTEL PLAZA"
        ],
        "to": "THE GRAND BALLROOM OF THE HOTEL PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(EMPEROR NICHOLAS II",
          "EMPEROR NICHOLAS II"
        ],
        "to": "EMPEROR NICHOLAS II"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWEPEN NY",
          "RED STAR LINE ANTWEPEN NY"
        ],
        "to": "RED STAR LINE ANTWEPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "to": "GROCERS' HALL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "to": "CONTINENTAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(PENNA. SOC'Y. WAR OF 1812)",
          "PENNA. SOC'Y. WAR OF 1812"
        ],
        "to": "PENNA. SOC'Y. WAR OF 1812"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION",
          "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALAMO HOTEL",
          "ALAMO HOTEL(?)"
        ],
        "to": "ALAMO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.ROSETTA MARU",
          "NIPPON YUSEN KAISHA S.S.ROSETTA MARU"
        ],
        "to": "NIPPON YUSEN KAISHA S.S.ROSETTA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.ROSETTA MAM",
          "NIPPON YUSEN KAISHA S.S.ROSETTA MAM"
        ],
        "to": "NIPPON YUSEN KAISHA S.S.ROSETTA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY - S.S. ZEALANDIA",
          "OCEANIC STEAMSHIP COMPANY S.S. ZEALANDIA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REUBEN'S",
          "REUBEN'S."
        ],
        "to": "REUBEN'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANDIAN PACIFIC RAILWAY CO. - S.S.MANITOBA",
          "CANDIAN PACIFIC RAILWAY CO. S.S.MANITOBA"
        ],
        "to": "CANDIAN PACIFIC RAILWAY CO. S.S.MANITOBA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GEORGE WASHINGTON HOTEL",
          "HOTEL GEORGE WASHINGTON"
        ],
        "to": "GEORGE WASHINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.(?)",
          "RG"
        ],
        "to": "RG"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC SREAMSHIP COMPANY - SIERRA",
          "OCEANIC SREAMSHIP COMPANY SIERRA"
        ],
        "to": "OCEANIC SREAMSHIP COMPANY SIERRA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "to": "MOUQUIN RESTAURANT AND WINE CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL",
          "IMPERIAL (?)"
        ],
        "to": "IMPERIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. MINNETONKA",
          "S.S. \"MINNETONKA\"\"\""
        ],
        "to": "S.S. MINNETONKA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(MR. THOMAS HASTINGS)",
          "MR. THOMAS HASTINGS"
        ],
        "to": "MR. THOMAS HASTINGS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WINTHROP",
          "WINTHROP HOTEL"
        ],
        "to": "WINTHROP HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MEYER'S HOTEL",
          "MEYERS HOTEL"
        ],
        "to": "MEYERS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(238 EIGHT AVENUE)",
          "238 EIGHT AVENUE"
        ],
        "to": "238 EIGHT AVENUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "to": "PHONIX HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "to": "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S. GOVERBMENT",
          "U.S. GOVERBMENT(?)"
        ],
        "to": "U.S. GOVERBMENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELECTRIC TOWER RESTAURANT - BAILEY CATERING CO.",
          "ELECTRIC TOWER RESTAURANT BAILEY CATERING CO."
        ],
        "to": "ELECTRIC TOWER RESTAURANT BAILEY CATERING CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "to": "METLIFE BUILDING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFE' BOULEVARD CHATEAU HENRI IV",
          "CAFE' BOULEVARD - CHATEAU HENRI IV"
        ],
        "to": "CAFE' BOULEVARD CHATEAU HENRI IV"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALLROOM, THE PLAZA",
          "THE PLAZA BALLROOM"
        ],
        "to": "THE PLAZA BALLROOM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREVOORT RESTAURANT",
          "RESTAURANT BREVOORT"
        ],
        "to": "BREVOORT RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"ILE DE FRANCE\"\"\"",
          "S.S. ILE DE FRANCE"
        ],
        "to": "S.S. ILE DE FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESTAURANT MAYAN",
          "MAYAN RESTAURANT"
        ],
        "to": "MAYAN RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S.ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN. RR - PULLMAN DINING CAR SERVICE",
          "PENN RR - PULLMAN DINING CAR SERVICE"
        ],
        "to": "PENN RR PULLMAN DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(HARVARD UNIVERSITY)",
          "HARVARD UNIVERSITY"
        ],
        "to": "HARVARD UNIVERSITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL HOTEL",
          "HOTEL NATIONAL"
        ],
        "to": "NATIONAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "to": "QUISISANA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(FIFTH AVE. HOTEL)",
          "FIFTH AVE. HOTEL"
        ],
        "to": "FIFTH AVE. HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(UNITED STATES GOVERNMENT?)",
          "UNITED STATES GOVERNMENT"
        ],
        "to": "UNITED STATES GOVERNMENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD",
          "BOSTON & ALBANY RAILROAD , NEW YORK CENTRAL SYSTEM"
        ],
        "to": "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA HOTEL",
          "HOTEL COPLEY PLAZA"
        ],
        "to": "COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERT HOUGH & TONY FRANKER - PABST BLUE RIBBON",
          "BERT HOUGH & TONY FRANKER PABST BLUE RIBBON"
        ],
        "to": "BERT HOUGH & TONY FRANKER PABST BLUE RIBBON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "to": "ST. GEORGES SOCIETY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(KING CHRISTIAN IX OF DENMARK)",
          "KING CHRISTIAN IX OF DENMARK"
        ],
        "to": "KING CHRISTIAN IX OF DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "to": "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GREAT NORTHERN SYSTEM - DINING CAR",
          "GREAT NORTHERN SYSTEM DINING CAR"
        ],
        "to": "GREAT NORTHERN SYSTEM DINING CAR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NEW WESTON",
          "NEW WESTON HOTEL"
        ],
        "to": "NEW WESTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PURE FOOD CAFES ANNEX NO. 1",
          "PURE FOOD CAFES - ANNEX NO. 1"
        ],
        "to": "PURE FOOD CAFES ANNEX NO. 1"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL S.S. CO.",
          "PACIFIC MAIL SS CO."
        ],
        "to": "PACIFIC MAIL S.S. CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DES INDES HOTEL",
          "HOTEL DES INDES"
        ],
        "to": "DES INDES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTHERN PACIFIC COMPANY - DINING CAR SERVICE",
          "SOUTHERN PACIFIC COMPANY DINING CAR SERVICE"
        ],
        "to": "SOUTHERN PACIFIC COMPANY DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROFILE HOUSE AND HOTEL VENDOME",
          "HOTEL VENDOME AND PROFILE HOUSE"
        ],
        "to": "PROFILE HOUSE AND HOTEL VENDOME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. NEW YORK",
          "U.S.S. NEW YORK (?)"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "to": "GALLATIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
        ],
        "to": "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S. WESTERNLAND",
          "RED STAR LINE SS WESTERNLAND",
          "RED STAR LINE - SS WESTERNLAND"
        ],
        "to": "RED STAR LINE SS WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES: COMMANDERY OF THE STATE OF MINNESOTA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL MC ALPIN",
                "l": "HOTEL MC ALPIN"
              }
            },
            {
              "v": {
                "v": "HOTEL MCALPIN",
                "l": "HOTEL MCALPIN"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "sponsor",
          "omitBlank": false,
          "type": "list",
          "columnName": "sponsor"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MC ALPIN"
        ],
        "to": "HOTEL MCALPIN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "",
          "L"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. REGIS HOTEL",
          "ST.REGIS HOTEL"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG-AMERIKA LINIE",
          "HAMBURG AMERIKA LINIE"
        ],
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF ASTORIA",
          "THE WALDORF-ASTORIA"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MCALPIN",
          "HOTEL MC ALPIN"
        ],
        "to": "HOTEL MCALPIN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "BELLEVUE-STRATFORD HOTEL",
                "l": "BELLEVUE-STRATFORD HOTEL"
              }
            },
            {
              "v": {
                "v": "BELLEVUE STRATFORD HOTEL",
                "l": "BELLEVUE STRATFORD HOTEL"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "sponsor",
          "omitBlank": false,
          "type": "list",
          "columnName": "sponsor"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "to": "BELLEVUE STRATFORD HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "PIG'N WHISTLE",
                "l": "PIG'N WHISTLE"
              }
            },
            {
              "v": {
                "v": "PIG N'WHISTLE",
                "l": "PIG N'WHISTLE"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "sponsor",
          "omitBlank": false,
          "type": "list",
          "columnName": "sponsor"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG'N WHISTLE"
        ],
        "to": "PIG N WHISTLE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "PIG'N WHISTLE",
                "l": "PIG'N WHISTLE"
              }
            },
            {
              "v": {
                "v": "PIG N'WHISTLE",
                "l": "PIG N'WHISTLE"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "sponsor",
          "omitBlank": false,
          "type": "list",
          "columnName": "sponsor"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG N'WHISTLE"
        ],
        "to": "PIG N WHISTLE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND",
          "RED STAR LINE-SS FRIESLAND"
        ],
        "to": "RED STAR LINE SS FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "to": "U.S.S. RALEIGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFBRAU HAUS",
          "HOFBRAUHAUS",
          "HOF BRAU HAUS"
        ],
        "to": "HOF BRAU HAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "to": "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS-PACIIC LINE",
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO./TRANS PACIIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAUREL IN THE PINES",
          "LAUREL-IN-THE-PINES"
        ],
        "to": "LAUREL IN THE PINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. PRESIDENT WILSON",
          "S.S. PRESIDENT WILSON"
        ],
        "to": "S.S. PRESIDENT WILSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "to": "BELLEVUE - STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNITED AIR LINES",
          "UNITED AIRLINES"
        ],
        "to": "UNITED AIRLINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "to": "FLATIRON RESAURANT AND CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA-LUNCH"
        ],
        "to": "CAFETERIA LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANBURG AMERIKA LINIE STEAMER FURST BISMARCK",
          "HANBURG-AMERIKA LINIE - STEAMER FURST BISMARCK"
        ],
        "to": "HANBURG AMERIKA LINIE STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASCHINGER'S BIER QUELLE",
          "ASCHINGER'S BIER-QUELLE"
        ],
        "to": "ASCHINGER'S BIER QUELLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUCHOW'S PAN AMERICAN RESTAUANT CO.",
          "LUCHOW'S PAN-AMERICAN RESTAUANT CO."
        ],
        "to": "LUCHOW'S PAN AMERICAN RESTAUANT CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "to": "COPLEY PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE STRATFORD HOTEL",
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "to": "BELLEVUE STRATFORD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUNDESHAUS RESTAURANT",
          "BUNDESHAUSRESTAURANT"
        ],
        "to": "BUNDESHAUS RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD LINE-R.M.S. PAVONIA",
          "CUNARD LINE R.M.S. PAVONIA"
        ],
        "to": "CUNARD LINE R.M.S. PAVONIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIES'HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG N'WHISTLE",
          "PIG'N WHISTLE"
        ],
        "to": "PIG N WHISTLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN -NEW YORK",
          "RED STAR LINE ANTWERPEN-NEW YORK"
        ],
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "to": "U.S.S. WYOMING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROGERS'RESTAURANT",
          "ROGER'S RESTAURANT"
        ],
        "to": "ROGER'S RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CROMWELL STEAMSHIP COMPANY",
          "CROMWELLL STEAMSHIP COMPANY"
        ],
        "to": "CROMWELL STEAMSHIP COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "to": "B&O BLUE LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S ST. PAUL",
          "U.S.M.S.ST. PAUL"
        ],
        "to": "U.S.M.S ST. PAUL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "to": "LA SALLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "ST.FRANCIS HOTEL"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATE DEPARTMENT SPECIAL TO THE PAN-AMERICAN CONGRESS AT THE CITY OF MEXICO",
          "STATE DEPARTMENT SPECIAL TO THE PAN AMERICAN CONGRESS AT THE CITY OF MEXICO"
        ],
        "to": "STATE DEPARTMENT SPECIAL TO THE PAN AMERICAN CONGRESS AT THE CITY OF MEXICO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIEGEL COOPER CO.",
          "SIEGEL-COOPER CO."
        ],
        "to": "SIEGEL COOPER CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIMPSON'S IN THE STRAND",
          "SIMPSON'S-IN-THE-STRAND"
        ],
        "to": "SIMPSON'S IN THE STRAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TYN-Y-COED",
          "TYNY COED"
        ],
        "to": "TYNY COED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "to": "U.S.S. FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE ANTERPWN NY",
          "RED STAR LINE-ANTERPWN -NY"
        ],
        "to": "RED STAR LINE ANTERPWN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE",
          "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICA",
          "S.S.AMERICA"
        ],
        "to": "S.S. AMERICA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "to": "USMS PHILADELPHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910.",
          "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
        ],
        "to": "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB OF ST. LOUIS",
          "COMMERCIAL CLUB OF ST.LOUIS"
        ],
        "to": "COMMERCIAL CLUB OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PULLMAN DINING CAR SERFVICE THE PRESIDENT",
          "PULLMAN DINING CAR SERFVICE-THE PRESIDENT"
        ],
        "to": "PULLMAN DINING CAR SERFVICE THE PRESIDENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COBBLE STONES",
          "THE COBBLESTONES"
        ],
        "to": "THE COBBLE STONES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. UNITED STATES",
          "S. S. UNITED STATES"
        ],
        "to": "S.S. UNITED STATES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "to": "RITZ CARLTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFÃ© DES BEAUX ARTS",
          "CAFÃ© DES BEAUX-ARTS"
        ],
        "to": "CAFÃ© DES BEAUX ARTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS CLUB",
          "ST.LOUIS CLUB"
        ],
        "to": "ST. LOUIS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATE DEPARTMENT SPECIAL TO THE PAND-AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)",
          "STATE DEPARTMENT SPECIAL TO THE PAND AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
        ],
        "to": "STATE DEPARTMENT SPECIAL TO THE PAND AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT",
          "FLATIRON RESTAURANT"
        ],
        "to": "FLATIRON RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(DOWN TOWN CLUB)",
          "DOWNTOWN CLUB"
        ],
        "to": "DOWNTOWN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN.NY"
        ],
        "to": "RED STAR LINE - ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MC NELL",
          "SMITH & MCNELL"
        ],
        "to": "SMITH & MCNELL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVINZIAL LIEDERTAFEL",
          "PROVINZIAL-LIEDERTAFEL"
        ],
        "to": "PROVINZIAL LIEDERTAFEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "to": "A.W. DENNETT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL YACHT CLUB OF ST. PETERSBURG",
          "IMPERIAL YACHT CLUB OF ST.PETERSBURG"
        ],
        "to": "IMPERIAL YACHT CLUB OF ST. PETERSBURG"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND",
          "RED STAR LINE-SS FRIESLAND"
        ],
        "to": "RED STAR LINE SS FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "to": "U.S.S. RALEIGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFBRAU HAUS",
          "HOFBRAUHAUS",
          "HOF BRAU HAUS"
        ],
        "to": "HOF BRAU HAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "to": "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS-PACIIC LINE",
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO./TRANS PACIIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAUREL IN THE PINES",
          "LAUREL-IN-THE-PINES"
        ],
        "to": "LAUREL IN THE PINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. PRESIDENT WILSON",
          "S.S. PRESIDENT WILSON"
        ],
        "to": "S.S. PRESIDENT WILSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "to": "BELLEVUE - STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNITED AIR LINES",
          "UNITED AIRLINES"
        ],
        "to": "UNITED AIRLINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "to": "FLATIRON RESAURANT AND CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA-LUNCH"
        ],
        "to": "CAFETERIA LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANBURG AMERIKA LINIE STEAMER FURST BISMARCK",
          "HANBURG-AMERIKA LINIE - STEAMER FURST BISMARCK"
        ],
        "to": "HANBURG AMERIKA LINIE STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASCHINGER'S BIER QUELLE",
          "ASCHINGER'S BIER-QUELLE"
        ],
        "to": "ASCHINGER'S BIER QUELLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUCHOW'S PAN AMERICAN RESTAUANT CO.",
          "LUCHOW'S PAN-AMERICAN RESTAUANT CO."
        ],
        "to": "LUCHOW'S PAN AMERICAN RESTAUANT CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "to": "COPLEY PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE STRATFORD HOTEL",
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "to": "BELLEVUE STRATFORD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUNDESHAUS RESTAURANT",
          "BUNDESHAUSRESTAURANT"
        ],
        "to": "BUNDESHAUS RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD LINE-R.M.S. PAVONIA",
          "CUNARD LINE R.M.S. PAVONIA"
        ],
        "to": "CUNARD LINE R.M.S. PAVONIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIES'HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG N'WHISTLE",
          "PIG'N WHISTLE"
        ],
        "to": "PIG N WHISTLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN -NEW YORK",
          "RED STAR LINE ANTWERPEN-NEW YORK"
        ],
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "to": "U.S.S. WYOMING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROGERS'RESTAURANT",
          "ROGER'S RESTAURANT"
        ],
        "to": "ROGER'S RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CROMWELL STEAMSHIP COMPANY",
          "CROMWELLL STEAMSHIP COMPANY"
        ],
        "to": "CROMWELL STEAMSHIP COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "to": "B&O BLUE LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S ST. PAUL",
          "U.S.M.S.ST. PAUL"
        ],
        "to": "U.S.M.S ST. PAUL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "to": "LA SALLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "ST.FRANCIS HOTEL"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATE DEPARTMENT SPECIAL TO THE PAN-AMERICAN CONGRESS AT THE CITY OF MEXICO",
          "STATE DEPARTMENT SPECIAL TO THE PAN AMERICAN CONGRESS AT THE CITY OF MEXICO"
        ],
        "to": "STATE DEPARTMENT SPECIAL TO THE PAN AMERICAN CONGRESS AT THE CITY OF MEXICO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIEGEL COOPER CO.",
          "SIEGEL-COOPER CO."
        ],
        "to": "SIEGEL COOPER CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIMPSON'S IN THE STRAND",
          "SIMPSON'S-IN-THE-STRAND"
        ],
        "to": "SIMPSON'S IN THE STRAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TYN-Y-COED",
          "TYNY COED"
        ],
        "to": "TYNY COED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "to": "U.S.S. FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE ANTERPWN NY",
          "RED STAR LINE-ANTERPWN -NY"
        ],
        "to": "RED STAR LINE ANTERPWN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE",
          "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICA",
          "S.S.AMERICA"
        ],
        "to": "S.S. AMERICA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "to": "USMS PHILADELPHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910.",
          "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
        ],
        "to": "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB OF ST. LOUIS",
          "COMMERCIAL CLUB OF ST.LOUIS"
        ],
        "to": "COMMERCIAL CLUB OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PULLMAN DINING CAR SERFVICE THE PRESIDENT",
          "PULLMAN DINING CAR SERFVICE-THE PRESIDENT"
        ],
        "to": "PULLMAN DINING CAR SERFVICE THE PRESIDENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COBBLE STONES",
          "THE COBBLESTONES"
        ],
        "to": "THE COBBLE STONES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. UNITED STATES",
          "S. S. UNITED STATES"
        ],
        "to": "S.S. UNITED STATES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "to": "RITZ CARLTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFÃ© DES BEAUX ARTS",
          "CAFÃ© DES BEAUX-ARTS"
        ],
        "to": "CAFÃ© DES BEAUX ARTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS CLUB",
          "ST.LOUIS CLUB"
        ],
        "to": "ST. LOUIS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATE DEPARTMENT SPECIAL TO THE PAND-AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)",
          "STATE DEPARTMENT SPECIAL TO THE PAND AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
        ],
        "to": "STATE DEPARTMENT SPECIAL TO THE PAND AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT",
          "FLATIRON RESTAURANT"
        ],
        "to": "FLATIRON RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(DOWN TOWN CLUB)",
          "DOWNTOWN CLUB"
        ],
        "to": "DOWNTOWN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN.NY"
        ],
        "to": "RED STAR LINE - ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MC NELL",
          "SMITH & MCNELL"
        ],
        "to": "SMITH & MCNELL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVINZIAL LIEDERTAFEL",
          "PROVINZIAL-LIEDERTAFEL"
        ],
        "to": "PROVINZIAL LIEDERTAFEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "to": "A.W. DENNETT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL YACHT CLUB OF ST. PETERSBURG",
          "IMPERIAL YACHT CLUB OF ST.PETERSBURG"
        ],
        "to": "IMPERIAL YACHT CLUB OF ST. PETERSBURG"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DUPONT",
          "HOTEL DU PONT"
        ],
        "to": "DU PONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK",
          "BRITISHSCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
        ],
        "to": "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "to": "S.S. AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ROUND TABLE",
          "THE ROUNDTABLE"
        ],
        "to": "THE ROUND TABLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK STATE HOTEL ASSOCIATION",
          "NEW-YORK STATE HOTEL ASSOCIATION"
        ],
        "to": "NEW YORK STATE HOTEL ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "to": "FLATIRON RESTAURANT & CAFE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN NY"
        ],
        "to": "RED STAR LINE ANTWERPEN NY"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression grel:value.replace('?','').replace('\\\\\"\"','').replace('\\\\','').replace('\"','').replace('?)','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace('?','').replace('\\\\\"\"','').replace('\\\\','').replace('\"','').replace('?)','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARLBOROUGH"
        ],
        "to": "MARLBOROUGH HOTEL"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT AND/OR LOCATION UNKNOWN]"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[NOT GIVEN]"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression grel:value.split('[')[0].split(']')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "grel:value.split('[')[0].split(']')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        }
      ]
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        }
      ]
    },
    "columnName": "event",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        }
      ]
    },
    "columnName": "event",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression grel:value.split('[')[0].split(']')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        }
      ]
    },
    "columnName": "event",
    "expression": "grel:value.split('[')[0].split(']')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression grel:value.replace(';','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        }
      ]
    },
    "columnName": "event",
    "expression": "grel:value.replace(';','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER",
          "(DINNER)",
          "DINNER (?)",
          "DINNER ",
          "DINNER(?)",
          "DINNER?",
          "(?DINNER?)",
          "?DINNER?",
          "DINNER ?",
          "DINNER,"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH",
          "(?LUNCH?)",
          "LUNCH?",
          "(LUNCH)",
          "LUNCH ",
          "LUNCH (?)",
          "LUNCH."
        ],
        "to": "LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST",
          "BREAKFAST ",
          "BREAKFAST (?)",
          "BREAKFAST ?",
          "BREAKFAST(?)"
        ],
        "to": "BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH & DINNER",
          "LUNCH DINNER",
          "?DINNER? - LUNCH?"
        ],
        "to": "LUNCH & DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SUPPER",
          "SUPPER (?)",
          "SUPPER(?)"
        ],
        "to": "SUPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, DINNER",
          "DAILY DINNER MENU",
          "DAILY MENU DINNER"
        ],
        "to": "DAILY MENU, DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY LUNCH MENU",
          "DAILY MENU, LUNCH",
          "DAILY MENU LUNCH"
        ],
        "to": "DAILY MENU, LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH OR DINNER",
          "DINNER OR LUNCH",
          "LUNCH &/OR DINNER"
        ],
        "to": "LUNCH OR DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU",
          "(DAILY MENU)",
          "DAILY MENU?"
        ],
        "to": "DAILY MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MITTAGESSEN",
          "MITTAG-ESSEN",
          "MITTAGESSEN "
        ],
        "to": "MITTAGESSEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANQUET AND RECEPTION",
          "RECEPTION AND BANQUET"
        ],
        "to": "BANQUET AND RECEPTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TABLE D'HOTE DINNER",
          "DINNER TABLE D'HOTE"
        ],
        "to": "DINNER TABLE D'HOTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARTE DU JOUR",
          "(CARTE DU JOUR)"
        ],
        "to": "CARTE DU JOUR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AFTERNOON TEA",
          "AFTERNOON TEA "
        ],
        "to": "AFTERNOON TEA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER SECOND CABIN"
        ],
        "to": "DINNER SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REUNION",
          "?REUNION?"
        ],
        "to": "REUNION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON TABLE D'HOTE",
          "TABLE D'HOTE LUNCHEON"
        ],
        "to": "LUNCHEON TABLE D'HOTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LADIES NIGHT",
          "LADIES' NIGHT"
        ],
        "to": "LADIES' NIGHT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST AND SUPPER",
          "SUPPER AND BREAKFAST"
        ],
        "to": "BREAKFAST AND SUPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRUHSTUCK-BREAKFAST",
          "FRUHSTUCK/BREAKFAST"
        ],
        "to": "FRUHSTUCK-BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WEDDING",
          "WEDDING(?)"
        ],
        "to": "WEDDING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BILL OF FARE",
          "BILL OF FARE/"
        ],
        "to": "BILL OF FARE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON'S BIRTHDAY BANQUET",
          "BANQUET (WASHINGTON'S BIRTHDAY?)"
        ],
        "to": "WASHINGTON'S BIRTHDAY BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABEND-ESSEN",
          "ABENDESSEN"
        ],
        "to": "ABEND-ESSEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER A LA CARTE",
          "A LA CARTE DINNER"
        ],
        "to": "A LA CARTE DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAINT NICHOLAS DAY",
          "SAINT NICHOLAS DAY "
        ],
        "to": "SAINT NICHOLAS DAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNUAL DINNER",
          "ANNUAL DINNER?"
        ],
        "to": "ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST (?) HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON",
          "BREAKFAST HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON"
        ],
        "to": "BREAKFAST HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON A LA CARTE",
          "LUNCHEON, A LA CARTE"
        ],
        "to": "LUNCHEON, A LA CARTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN'S BIRTHDAY DINNER",
          "DINNER, LINCOLNS BIRTHDAY"
        ],
        "to": "LINCOLN'S BIRTHDAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YEAR'S DINNER",
          "NEW YEARS DINNER"
        ],
        "to": "NEW YEARS DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARY",
          "ANNIVERSARY "
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH ANNUAL DINNER",
          "DINNER, FIFTH ANNUAL"
        ],
        "to": "FIFTH ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. VALENTINE'S DAY DINNER",
          "ST. VALENTINES DAY DINNER"
        ],
        "to": "ST. VALENTINES DAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRUHSTUCK/LUNCH",
          "FRUHSTUCK-LUNCH"
        ],
        "to": "FRUHSTUCK-LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YEAR'S DAY DINNER",
          "NEW YEARS DAY DINNER"
        ],
        "to": "NEW YEARS DAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFET",
          "BUFFET "
        ],
        "to": "BUFFET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EIGHTH ANNUAL BANQUET",
          "EIGHTH ANNUAL BANQUET'"
        ],
        "to": "EIGHTH ANNUAL BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON TO THE PRESIDENT",
          "LUNCHEON TO THE PRESIDENT "
        ],
        "to": "LUNCHEON TO THE PRESIDENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, BREAKFAST",
          "DAILY BREAKFAST MENU"
        ],
        "to": "DAILY MENU, BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY LUNCHEON MENU"
        ],
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRIVATE DINNER",
          "PRIVATE DINNER?"
        ],
        "to": "PRIVATE DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON",
          "LUNCHEON "
        ],
        "to": "LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INSPECTION TRIP, BREAKFAST",
          "INSPECTION TRIP - BREAKFAST"
        ],
        "to": "INSPECTION TRIP, BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH-DINNER",
          "LUNCHDINNER"
        ],
        "to": "LUNCH-DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARY DINNER",
          "ANNIVERSARY DINNER?"
        ],
        "to": "ANNIVERSARY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIDDAG/DINNER",
          "MIDDAG-DINNER"
        ],
        "to": "MIDDAG-DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INSPECTION TRIP - LUNCHEON",
          "INSPECTION TRIP, LUNCHEON"
        ],
        "to": "INSPECTION TRIP - LUNCHEON"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER,SECOND CABIN",
          "DINNER-SECOND CABIN"
        ],
        "to": "DINNER, SECOND CABIN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER SECOND CABIN",
          "DINNER, SECOND CABIN"
        ],
        "to": "DINNER, SECOND CABIN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER/DINER",
          "DINER/DINNER",
          "DINNER, DINER"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH & DINNER",
          "LUNCH-DINNER"
        ],
        "to": "LUNCH & DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY MENU,LUNCHEON"
        ],
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WEDDING DINNER",
          "(WEDDING)DINNER"
        ],
        "to": "WEDDING DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST - SECOND CABIN",
          "BREAKFAST-SECOND CABIN"
        ],
        "to": "BREAKFAST - SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST LUNCH DINNER",
          "BREAKFAST,LUNCH & DINNER"
        ],
        "to": "BREAKFAST, LUNCH & DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, SUPPER",
          "DAILY MENU,SUPPER"
        ],
        "to": "DAILY MENU, SUPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN/DINNER"
        ],
        "to": "MITTAGESSEN - DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER",
          "DINNNER"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEJEUNER FOURCHETTE/LUNCHEON",
          "DEJEUNER FOURCHETTE/ LUNCHEON"
        ],
        "to": "DEJEUNER FOURCHETTE-LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(DINNER DANCE)",
          "DINNER-DANCE"
        ],
        "to": "DINNER-DANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOURTH OF JULY DINNER",
          "FOURTH OFJULY DINNER"
        ],
        "to": "FOURTH OFJULY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, DINNER",
          "DAILY MENU,DINNER"
        ],
        "to": "DAILY MENU, DINNER"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "occasion",
          "omitBlank": false,
          "type": "list",
          "columnName": "occasion"
        }
      ]
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "DAILY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "occasion",
          "omitBlank": false,
          "type": "list",
          "columnName": "occasion"
        }
      ]
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "OTHER (DAILY MENU AT SEA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column event",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "event",
          "omitBlank": false,
          "type": "list",
          "columnName": "event"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "occasion",
          "omitBlank": false,
          "type": "list",
          "columnName": "occasion"
        }
      ]
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "COMPLIMENTARY-TESTIMONIAL\n"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "UNKNOWN",
          "name": "name",
          "type": "text",
          "columnName": "name"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNKNOWN"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "UNKNOWN",
          "name": "sponsor",
          "type": "text",
          "columnName": "sponsor"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNKNOWN"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column event using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "event",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('?','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('?','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "venue",
          "omitBlank": false,
          "type": "list",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC;",
          "SOC",
          "[SOC];",
          "[SOC]",
          "SOC.",
          "SOC ",
          "[SOC;]"
        ],
        "to": "SOC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GOVT;",
          "GOVT",
          "GOV'T;",
          "[GOVT];",
          "GOV'T",
          "GOV'T.",
          "[GOVT]"
        ],
        "to": "GOVT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COM",
          "COM.",
          "[COM]",
          "COM.;",
          "[COM];",
          "[COM}"
        ],
        "to": "COM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POL;",
          "POL",
          "[POL]",
          "POL.;",
          "[POL"
        ],
        "to": "POL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIL;",
          "MIL",
          "MIL ",
          "MIL.",
          "[MIL];"
        ],
        "to": "MIL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROF;",
          "PROF",
          "PROF.",
          "[PROF]",
          "[PROF];"
        ],
        "to": "PROF"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAV;",
          "NAV; ",
          "NAV.",
          "NAV"
        ],
        "to": "NAV"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMM",
          "COMM.",
          "COMM;",
          "COMM;."
        ],
        "to": "COMM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDUC;",
          "EDUC",
          "[EDUC];",
          "EDUC "
        ],
        "to": "EDUC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ",
          "OTHER;",
          "OTHER",
          "OTHER,"
        ],
        "to": "OTHER "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GOV;",
          "GOV.",
          "[GOV];"
        ],
        "to": "GOVT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PATR;",
          "PATR",
          "PATR."
        ],
        "to": "PATR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "",
          "[]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RELIG;",
          "RELIG"
        ],
        "to": "RELIG"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAT;",
          "PAT"
        ],
        "to": "PAT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL",
          "SOCIAL;"
        ],
        "to": "SOCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAVAL",
          "NAVAL;",
          "[NAVAL]"
        ],
        "to": "NAVAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER,PRIVATE",
          "OTHER;PRIVATE;",
          "[OTHER;PRIVATE];"
        ],
        "to": "OTHER,PRIVATE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POL; SOC;",
          "SOC; POL;"
        ],
        "to": "POL; SOC;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILITARY",
          "[MILITARY]"
        ],
        "to": "MILITARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDUCATIONAL",
          "EDUCATIONAL;"
        ],
        "to": "EDUCATIONAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRIVATE;",
          "PRIVATE"
        ],
        "to": "PRIVATE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRIVATE PARTY",
          "PRIVATE PARTY;"
        ],
        "to": "PRIVATE PARTY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOREIGN",
          "FOREIGN;"
        ],
        "to": "FOREIGN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC,RELIG",
          "SOC; RELIG;"
        ],
        "to": "SOC,RELIG"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOREIGN,HOTEL",
          "FOREIGN; HOTEL;"
        ],
        "to": "FOREIGN,HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC, COM",
          "SOC;COM;"
        ],
        "to": "SOC, COM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC, MIL",
          "SOC;MIL;"
        ],
        "to": "SOC, MIL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER,PRIVATE",
          "OTHER [PRIVATE];"
        ],
        "to": "OTHER, PRIVATE"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('COMMERCIAL','COM')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('COMMERCIAL','COM')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('COMM','COM')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('COMM','COM')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CMMERCIAL"
        ],
        "to": "COM"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('COM','COMMERCIAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('COM','COMMERCIAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIALERCOA;"
        ],
        "to": "COMMERCIAL;"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('POL','POLITICAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('POL','POLITICAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('SOCIAL','SOC')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('SOCIAL','SOC')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('SOC','SOCIAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('SOC','SOCIAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POLITICALIT;"
        ],
        "to": "POLITICAL;"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICATE"
        ],
        "to": "PRIVATE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOM;"
        ],
        "to": "SOCIAL;"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('RELIG','REL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "REL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.replace('RELIG','REL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('REL','RELIGIOUS')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "REL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.replace('REL','RELIGIOUS')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "EDU",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDUS;"
        ],
        "to": "EDUC"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "EDU",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDUCATIONAL"
        ],
        "to": "EDUC"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('EDUC','EDUCATIONAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "EDU",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.replace('EDUC','EDUCATIONAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOREIGNEIGN"
        ],
        "to": "FOREIGN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAC;"
        ],
        "to": "NAV"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NULL"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DOM;"
        ],
        "to": "DOMESTIC"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "GOVT",
                "l": "GOVT"
              }
            },
            {
              "v": {
                "v": "GOVT;",
                "l": "GOVT;"
              }
            },
            {
              "v": {
                "v": "GOV'T;",
                "l": "GOV'T;"
              }
            },
            {
              "v": {
                "v": "[GOVT];",
                "l": "[GOVT];"
              }
            },
            {
              "v": {
                "v": "GOV'T",
                "l": "GOV'T"
              }
            },
            {
              "v": {
                "v": "GOV'T.",
                "l": "GOV'T."
              }
            },
            {
              "v": {
                "v": "[GOVT]",
                "l": "[GOVT]"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "venue",
          "omitBlank": false,
          "type": "list",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.replace('PROF','PROFESSIONAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRO;"
        ],
        "to": "PROF"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROG;"
        ],
        "to": "PROF"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "GOVT",
                "l": "GOVT"
              }
            },
            {
              "v": {
                "v": "GOVT;",
                "l": "GOVT;"
              }
            },
            {
              "v": {
                "v": "GOV'T;",
                "l": "GOV'T;"
              }
            },
            {
              "v": {
                "v": "[GOVT];",
                "l": "[GOVT];"
              }
            },
            {
              "v": {
                "v": "GOV'T",
                "l": "GOV'T"
              }
            },
            {
              "v": {
                "v": "GOV'T.",
                "l": "GOV'T."
              }
            },
            {
              "v": {
                "v": "[GOVT]",
                "l": "[GOVT]"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "venue",
          "omitBlank": false,
          "type": "list",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "grel:value.replace('PROF','PROFESSIONAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column venue using expression grel:value.replace('PROF','PROFESSIONAL')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "venue",
    "expression": "grel:value.replace('PROF','PROFESSIONAL')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "MIL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIL"
        ],
        "to": "MILIT"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "MIL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILIT;"
        ],
        "to": "MILITARY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "MIL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILIT"
        ],
        "to": "MILITARY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "MIL",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL, MIL"
        ],
        "to": "SOCIAL, MILITARY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GOVT"
        ],
        "to": "GOVERNMENT"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAVAL"
        ],
        "to": "NAVAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAV"
        ],
        "to": "NAVAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PATR"
        ],
        "to": "PATRIOTIC"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAT"
        ],
        "to": "PATRIOTIC"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNKNOWN"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS; FOR"
        ],
        "to": "SOCIAL; FOREIGN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL CLUB"
        ],
        "to": "SOCIAL, CLUB"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAM;"
        ],
        "to": "COMMERCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[POSSIBLY A PRIVATE HOST];"
        ],
        "to": "POSSIBLY A PRIVATE HOST"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALUMNI;"
        ],
        "to": "ALUMNI"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL;"
        ],
        "to": "COMMERCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL;SOCIAL;"
        ],
        "to": "COMMERCIAL,SOCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL; POLITICAL;"
        ],
        "to": "COMMERCIAL, POLITICAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CULTURAL;"
        ],
        "to": "CULTURAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDUCATIONAL; PROFESSIONAL;"
        ],
        "to": "EDUCATIONAL, PROFESSIONAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL; FOR"
        ],
        "to": "HOTEL, FOR"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INDIVIDUAL;"
        ],
        "to": "INDIVIDUAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER [PRESUMABLY BRITISH ROYAL FAMILY];"
        ],
        "to": "OTHER (PRESUMABLY BRITISH ROYAL FAMILY)"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POLITICAL;"
        ],
        "to": "POLITICAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POLITICAL; SOCIAL;"
        ],
        "to": "POLITICAL, SOCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROFESSIONAL; COMMERCIAL;"
        ],
        "to": "PROFESSIONAL, COMMERCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROFESSIONAL;SOCIAL;"
        ],
        "to": "PROFESSIONAL, SOCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RELIGIOUS;"
        ],
        "to": "RELIGIOUS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL;"
        ],
        "to": "SOCIAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL; FOREIGN"
        ],
        "to": "SOCIAL, FOREIGN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "venue",
          "type": "text",
          "columnName": "venue"
        }
      ]
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIAL;GK;"
        ],
        "to": "SOCIAL, GK"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column occasion using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column occasion using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMPL.",
          "[COMPL?];",
          "COMPL?;",
          "[COMPL];",
          "COMPL (?);",
          "COMPL(?);",
          "COMPL;(?)",
          "[COMPL.]",
          "[COMPL]"
        ],
        "to": "COMPL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (SOC);",
          "OTHER (SOC?);",
          "OTHER (SOC?)",
          "OTHER (SOC)",
          "OTHER [SOC?];",
          "OTHER (SOC.)",
          "OTHER )SOC);",
          "OTHER [SOC]",
          "OTHER, [SOC?];"
        ],
        "to": "SOCIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARY;",
          "ANNIVERSARY (?);",
          "ANNIVERSARY(?);",
          "ANNIVERSARY",
          "ANNIVERSARY.",
          "ANNIVERSARY?"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECULAR HOLIDAY;",
          "SECULAR HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY"
        ],
        "to": "SECULAR HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (ANNIVERSARY);",
          "OTHER (ANNIVERSARY)",
          "OTHER (ANNIVERSARY?)",
          "OTHER - ANNIVERSARY",
          "OTHER {ANNIVERSARY};"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[ANNIV?];",
          "(ANNIV);",
          "(ANNIV?);",
          "[?ANNIV?];",
          "[ANNIV?]"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC;",
          "[SOC?]",
          "(SOC?)",
          "[SOC]",
          "(SOC);"
        ],
        "to": "SOCIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (MEETING);",
          "OTHER (MEETING)",
          "OTHER (MEETING?);",
          "OTHER (MEETING?)"
        ],
        "to": "MEETING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (SOCIAL?)",
          "OTHER (SOCIAL);",
          "OTHER (SOCIAL?);",
          "OTHER [SOCIAL];"
        ],
        "to": "SOCIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PATRIOTIC HOLIDAY;",
          "PATRIOTIC HOLIDAY",
          "PATRIOTIC HOLIDAY.",
          "PATRIOTIC HOLIDAY. HOLIDAY"
        ],
        "to": "PATRIOTIC HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITE;",
          "RITE",
          "(RITE)",
          "(RITE);"
        ],
        "to": "RITE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (COMMEMORATIVE);",
          "OTHER (COMMEMORATIVE)",
          "OTHER (COMMEMORATIVE?)",
          "OTHER [COMMEMORATIVE]"
        ],
        "to": "COMMEMORATIVE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY;",
          "DAILY",
          "[DAILY]",
          "DAILY?;"
        ],
        "to": "DAILY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "?",
          ";",
          "[?]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNUAL",
          "ANNUAL;",
          "[ANNUAL]"
        ],
        "to": "ANNUAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECULAR HOLIDAY.HOLIDAY",
          "SECULAR HOLIDAY.HOLIDAY;",
          "SECULAR HOLIDAY;HOLIDAY"
        ],
        "to": "SECULAR HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU;",
          "DAILY MENU",
          "(DAILY MENU)"
        ],
        "to": "DAILY MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (ANNIV)",
          "OTHER (ANNIV);",
          "OTHER (ANNIV?)"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER",
          "OTHER;",
          "OTHER,"
        ],
        "to": "OTHER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RELIG. HOLIDAY",
          "RELIG. HOLIDAY;",
          "RELIG HOLIDAY;"
        ],
        "to": "RELIGIOUS HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(SOCIAL)",
          "(SOCIAL?)",
          "SOCIAL"
        ],
        "to": "SOCIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNUAL DINNER",
          "ANNUAL DINNER;",
          "ANNUAl DINNER"
        ],
        "to": "ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[?REUNION?];",
          "[RE-UNION]",
          "[REUNION]"
        ],
        "to": "REUNION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNUAL EVENT",
          "ANNUAL EVENT;"
        ],
        "to": "ANNUAL EVENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANIV;",
          "[ANIV?];"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (REUNION);",
          "(OTHER - REUNION?);"
        ],
        "to": "REUNION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (DAILY DATED MENU);",
          "OTHER (DATED DAILY MENU);"
        ],
        "to": "DAILY DATED MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POL;",
          "[POL?]"
        ],
        "to": "POLITICAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (DAILY MENU);",
          "OTHER (DAILY MENU)"
        ],
        "to": "DAILY MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SATURDAY DINNER",
          "SATURDAY DINNER;"
        ],
        "to": "SATURDAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL EVENT",
          "NATIONAL EVENT;"
        ],
        "to": "NATIONAL EVENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAT;",
          "PAT"
        ],
        "to": "PATRIOTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (COMMEMOATIVE)",
          "OTHER (COMMEMOATIVE);"
        ],
        "to": "COMMEMOATIVE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MEAL",
          "DAILY MEAL;"
        ],
        "to": "DAILY MEAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER",
          "DINNER;"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SUNDAY DINNER",
          "SUNDAY DINNER;"
        ],
        "to": "SUNDAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ETHNIC HOLIDAY",
          "[ETHNIC HOLIDAY]"
        ],
        "to": "ETHNIC HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SUNDAY",
          "SUNDAY;"
        ],
        "to": "SUNDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST",
          "BREAKFAST;"
        ],
        "to": "BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (ANNUAL MEETING);",
          "OTHER {ANNUAL MEETING};"
        ],
        "to": "ANNUAL MEETING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANQUET;",
          "BANQUET"
        ],
        "to": "BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ETH;",
          "ETH"
        ],
        "to": "ETH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARYERSARY",
          "ANNIVERSARYERSARY;"
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (DAILY);",
          "OTHER (DAILY)"
        ],
        "to": "DAILY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY DINNER",
          "DAILY DINNER;"
        ],
        "to": "DAILY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SEMI-ANNUAL",
          "SEMI-ANNUAL;"
        ],
        "to": "SEMI-ANNUAL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MEETING",
          "(MEETING)"
        ],
        "to": "MEETING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(COMMEMOATIVE?)",
          "COMMEMOATIVE"
        ],
        "to": "COMMEMORATIVE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMEMORATIVE",
          "(COMMEMORATIVE);"
        ],
        "to": "COMMEMORATIVE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(COMPL;FOR MAHARAJA SCINDIYA)",
          "COMPL; FOR MAHARAJA SCINDIYA"
        ],
        "to": "COMPL; FOR MAHARAJA SCINDIYA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER,ANNUAL EVENT",
          "OTHER, ANNUAL EVENT"
        ],
        "to": "OTHER,ANNUAL EVENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU",
          "DAILYMENU"
        ],
        "to": "DAILY MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (ANNUAL BANQUET);",
          "OTHER,Annual Banquet"
        ],
        "to": "ANNUAL BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (ANNUAL DINNER);",
          "OTHER,,annual dinner"
        ],
        "to": "ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TRIP OF PRES. McKINLEY, HIS CABINET & GUESTS;",
          "TRIP OF PRES. McKINLEY,HIS CABINET & GUESTS"
        ],
        "to": "TRIP OF PRES. McKINLEY,HIS CABINET & GUESTS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (S0C?)",
          "OTHR (SOC);"
        ],
        "to": "SOCIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNUAL",
          "AMNNUAL;"
        ],
        "to": "ANNUAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER (DAILY HOTEL MENU);",
          "OTHEER (DAILY HOTEL MENU);"
        ],
        "to": "DAILY HOTEL MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "C0MPL;",
          "CIMPL;"
        ],
        "to": "COMPL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARY",
          "ANIVERSARY"
        ],
        "to": "ANNIVERSARY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "occasion",
          "type": "text",
          "columnName": "occasion"
        }
      ]
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EASTER;"
        ],
        "to": "EASTER"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column occasion using expression grel:value.replace(';','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ";",
          "name": "occasion",
          "type": "text",
          "columnName": "occasion"
        }
      ]
    },
    "columnName": "occasion",
    "expression": "grel:value.replace(';','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column call_number using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "call_number",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column call_number using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "call_number",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column call_number using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Zander 546 undated",
                "l": "Zander 546 undated"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "call_number",
          "omitBlank": false,
          "type": "list",
          "columnName": "call_number"
        }
      ]
    },
    "columnName": "call_number",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column date using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "date",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.replace('\\\\\"\"','').replace('\\\\','').replace('?','').replace('\"\"','').replace('\"','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "grel:value.replace('\\\\\"\"','').replace('\\\\','').replace('?','').replace('\"\"','').replace('\"','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "ADAM'S RESTAURANT",
                "l": "ADAM'S RESTAURANT"
              }
            },
            {
              "v": {
                "v": "ADAMS' RESTAURANT",
                "l": "ADAMS' RESTAURANT"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADAM'S RESTAURANT"
        ],
        "to": "ADAMS' RESTAURANT"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL DU MUSEE",
                "l": "HOTEL DU MUSEE"
              }
            },
            {
              "v": {
                "v": "HOTEL DU MUSEE'",
                "l": "HOTEL DU MUSEE'"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU MUSEE'"
        ],
        "to": "HOTEL DU MUSEE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "SHERRYS",
                "l": "SHERRYS"
              }
            },
            {
              "v": {
                "v": "SHERRY'S",
                "l": "SHERRY'S"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NOT NOTED"
        ],
        "to": "SHERRYS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "SHERRYS",
                "l": "SHERRYS"
              }
            },
            {
              "v": {
                "v": "SHERRY'S",
                "l": "SHERRY'S"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S"
        ],
        "to": "SHERRYS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
                "l": "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
              }
            },
            {
              "v": {
                "v": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
                "l": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "SHANLEY'S",
                "l": "SHANLEY'S"
              }
            },
            {
              "v": {
                "v": "SHANLEYS",
                "l": "SHANLEYS"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S"
        ],
        "to": "SHANLEYS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column location",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD BREMEN;"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN",
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN"
        ],
        "to": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS",
          "CHILDS'",
          "CHILD'S"
        ],
        "to": "CHILDS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK",
          "GRAMERCY PARK HOTEL; HOTEL GRAMERCY PARK"
        ],
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "to": "RIGGS'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL KNICKERBOCKER",
          "HOTEL KNICKERBOCKER ()",
          "KNICKERBOCKER HOTEL"
        ],
        "to": "KNICKERBOCKER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "to": "DELMONICO'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "to": "THE MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB",
          "MERCHANTS' CLUB",
          "MERCHANTS CLUB"
        ],
        "to": "MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST, DENIS HOTEL"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH AVENUE HOTEL",
          "FIFTH AVENUE HOTEL ()",
          "(FIFTH AVENUE HOTEL}"
        ],
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "to": "AMERICAN MEDICAL EDITOR'S ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL"
        ],
        "to": "METROPOLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WABASH RAILWAY COMPANY",
          "WABASH [RAILWAY COMPANY]"
        ],
        "to": "WABASH RAILWAY COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTA VISTA HOTEL",
          "ALTA VISTA HOTEL ()"
        ],
        "to": "ALTA VISTA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "to": "DE L'ANGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "to": "RIGG'S TWENTIETH STREET RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "to": "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "HOTEL ST. FRANCIS"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEL PRADO HOTEL",
          "HOTEL DEL PRADO"
        ],
        "to": "DEL PRADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "to": "CHILDS LUNCH ROOMS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "to": "ENGINEERS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "to": "MANHATTAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "to": "VICTORY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " CLUB",
          "CLUB"
        ],
        "to": " CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "to": "GRUNEWALD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "to": "FAIRMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ALCAZAR",
          "ALCAZAR HOTEL"
        ],
        "to": "ALCAZAR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL",
          "HOTEL ST. NICHOLAS"
        ],
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL"
        ],
        "to": "COLORADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN... HOTEL"
        ],
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COLOMBO",
          "COLOMBO HOTEL"
        ],
        "to": "COLOMBO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "to": "ANCIENT & ACCEPTED SCOTTISH RITE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIRATE'S HOUSE",
          "PIRATES' HOUSE"
        ],
        "to": "PIRATES' HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "to": "SHERIFF'S JURY SECOND PANEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "to": "ELKS' CLUB HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "to": "HOTEL DU MUSEE'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAVERN ON THE GREEN",
          "THE TAVERN ON THE GREEN"
        ],
        "to": "TAVERN ON THE GREEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MINOT HOTEL",
          "HOTEL MINOT"
        ],
        "to": "MINOT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT AND/OR LOCATION NOT GIVEN.]",
          "[RESTAURANT AND/OR LOCATION NOT GIVEN]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KEMPINSKI RESTAURANT",
          "RESTAURANT KEMPINSKI"
        ],
        "to": "KEMPINSKI RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S NEW AMSTERDAM",
          "S.S. NEW AMSTERDAM"
        ],
        "to": "S.S. NEW AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S",
          "SHERRYS"
        ],
        "to": "SHERRYS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMBASSADOR HOTEL",
          "HOTEL AMBASSADOR"
        ],
        "to": "AMBASSADOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRISTOL HOTEL",
          "HOTEL BRISTOL"
        ],
        "to": "BRISTOL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "SCHWARZWALDERS NATUR WEINHAUS"
        ],
        "to": "SCHWARZWALDER'S NATUR WEINHAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COMMODORE HOTEL",
          "THE HOTEL COMMODORE"
        ],
        "to": "THE COMMODORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALGONQUIN HOTEL",
          "HOTEL ALGONQUIN"
        ],
        "to": "ALGONQUIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WORTHY",
          "WORTHY HOTEL"
        ],
        "to": "WORTHY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "to": "MAJESTIC HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "to": "WILLARDS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND BALLROOM OF THE HOTEL PLAZA",
          "THE GRAND BALLROOM OF THE HOTEL PLAZA"
        ],
        "to": "THE GRAND BALLROOM OF THE HOTEL PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "ASTOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMBERLIN",
          "CHAMBERLIN HOTEL"
        ],
        "to": "CHAMBERLIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "to": "GROCERS HALL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "to": "CONTINENTAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL SYSTEM",
          "[NEW YORK CENTRAL SYSTEM]"
        ],
        "to": "NEW YORK CENTRAL SYSTEM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL"
        ],
        "to": "COLONIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. REGIS",
          "ST. REGIS HOTEL"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "to": "NETHERLAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VELVET",
          "VELVET HOTEL"
        ],
        "to": "VELVET HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE HOTEL",
          "HOTEL EMPIRE"
        ],
        "to": "EMPIRE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REUBEN'S",
          "REUBEN'S."
        ],
        "to": "REUBEN'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "to": "ROYAL PALM HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GEORGE WASHINGTON HOTEL",
          "HOTEL GEORGE WASHINGTON"
        ],
        "to": "GEORGE WASHINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.()",
          "RG"
        ],
        "to": "R.G."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "to": "COLUMBIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "to": "NEW GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE HOTEL PLAZA",
          "THE PLAZA HOTEL"
        ],
        "to": "THE PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "to": "CLUB XIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PLACE VIGER HOTEL",
          "HOTEL PLACE VIGER"
        ],
        "to": "PLACE VIGER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LAFAYETTE",
          "LAFAYETTE HOTEL"
        ],
        "to": "LAFAYETTE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PENNSYLVANIA",
          "PENNSYLVANIA HOTEL"
        ],
        "to": "PENNSYLVANIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "to": "SAVOY HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL"
        ],
        "to": "DENNIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "to": "MOUQUIN RESTAURANT AND WINE CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL",
          "IMPERIAL ()"
        ],
        "to": "IMPERIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COMMODORE",
          "COMMODORE HOTEL"
        ],
        "to": "THE COMMODORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "to": "U.S.M.S. ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WINTHROP",
          "WINTHROP HOTEL"
        ],
        "to": "WINTHROP HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MEYER'S HOTEL",
          "MEYERS HOTEL"
        ],
        "to": "MEYERS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "to": "PHONIX HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BILTMORE",
          "BILTMORE HOTEL"
        ],
        "to": "BILTMORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON",
          "JEFFERSON HOTEL"
        ],
        "to": "JEFFERSON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL D'ANGLETERRE",
          "D'ANGLETERRE HOTEL"
        ],
        "to": "D'ANGLETERRE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT"
        ],
        "to": "CLAREMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL"
        ],
        "to": "CHAMPLAIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "to": "METLIFE BUILDING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL EASTMAN",
          "EASTMAN HOTEL"
        ],
        "to": "EASTMAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALLROOM, THE PLAZA",
          "THE PLAZA BALLROOM"
        ],
        "to": "THE PLAZA BALLROOM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIE'S HOTEL",
          "MENZIES HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREVOORT RESTAURANT",
          "RESTAURANT BREVOORT"
        ],
        "to": "BREVOORT RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MASTER PRINTERS' ASSOCIATION",
          "MASTER PRINTERS ASSOCIATION"
        ],
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESTAURANT MAYAN",
          "MAYAN RESTAURANT"
        ],
        "to": "MAYAN RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CASTLETON HOTEL",
          "HOTEL CASTLETON"
        ],
        "to": "CASTLETON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "to": "ADAMS' RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "to": "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "to": "GRENOBLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN RR PULLMAN DINING CAR SERVICE",
          "PENN. RR PULLMAN DINING CAR SERVICE"
        ],
        "to": "PENN RR PULLMAN DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "to": "SANTA FE' ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL COOPER'S ASSOCIATION",
          "NATIONAL COOPERS ASSOCIATION"
        ],
        "to": "NATIONAL COOPERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR"
        ],
        "to": "WINDSOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "to": "NATIONAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL"
        ],
        "to": "MARIE ANTOINETTE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "to": "QUISISANA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD",
          "BOSTON & ALBANY RAILROAD , NEW YORK CENTRAL SYSTEM"
        ],
        "to": "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA HOTEL",
          "HOTEL COPLEY PLAZA"
        ],
        "to": "THE COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY ZOUAVE CADETS OLD GUARD",
          "OLD GUARD ALBANY ZOUAVE CADETS"
        ],
        "to": "OLD GUARD ALBANY ZOUAVE CADETS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "to": "ST. GEORGES SOCIETY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "to": "SAN REMO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S",
          "SHANLEYS"
        ],
        "to": "SHANLEYS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IMPERIAL",
          "IMPERIAL HOTEL"
        ],
        "to": "IMPERIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "to": "FRAUNCES' TAVERN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE",
          "ST. GEORGE HOTEL"
        ],
        "to": "ST. GEORGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL ROYAL",
          "ROYAL GRAND HOTEL"
        ],
        "to": "ROYAL GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "to": "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PLAZA",
          "PLAZA HOTEL"
        ],
        "to": "PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "to": "YORK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ROYAL",
          "ROYAL HOTEL"
        ],
        "to": "ROYAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "to": "VENDOME HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S. ARMY SUBSISTENCE DEPT.",
          "US ARMY SUBSISTENCE DEPT."
        ],
        "to": "U.S. ARMY SUBSISTENCE DEPT."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARTINIQUE",
          "MARTINIQUE HOTEL"
        ],
        "to": "MARTINIQUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NEW WESTON",
          "NEW WESTON HOTEL"
        ],
        "to": "NEW WESTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "to": "THE COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORIA",
          "VICTORIA HOTEL"
        ],
        "to": "VICTORIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONCE DE LEON",
          "PONCE DE LEON HOTEL"
        ],
        "to": "PONCE DE LEON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "to": "PONTCHARTRAIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LEXINGTON",
          "LEXINGTON HOTEL"
        ],
        "to": "LEXINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVELSTOKE HOTEL",
          "HOTEL REVELSTOKE"
        ],
        "to": "REVELSTOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S. KASUGA",
          "NIPPON YUSEN KAISHA SS KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL S.S. CO.",
          "PACIFIC MAIL SS CO."
        ],
        "to": "PACIFIC MAIL S.S. CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE HOTEL",
          "HOTEL ROANOKE"
        ],
        "to": "ROANOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DES INDES HOTEL",
          "HOTEL DES INDES"
        ],
        "to": "DES INDES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE"
        ],
        "to": "BALTIMORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WESTMINSTER",
          "WESTMINSTER HOTEL"
        ],
        "to": "WESTMINSTER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "to": "STATLER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME AND PROFILE HOUSE",
          "PROFILE HOUSE AND HOTEL VENDOME"
        ],
        "to": "PROFILE HOUSE AND HOTEL VENDOME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. NEW YORK",
          "U.S.S. NEW YORK ()"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "to": "GALLATIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
        ],
        "to": "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column location",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "to": "THE MERCHANTS CLUB OF BOSTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL",
          "ST CHARLES HOTEL"
        ],
        "to": "ST. CHARLES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DEL CORONADO",
          "DEL CORONADO HOTEL"
        ],
        "to": "DEL CORONADO HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL DU PONT",
                "l": "HOTEL DU PONT"
              }
            },
            {
              "v": {
                "v": "HOTEL DUPONT",
                "l": "HOTEL DUPONT"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU PONT"
        ],
        "to": "DU PONT HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL DU PONT",
                "l": "HOTEL DU PONT"
              }
            },
            {
              "v": {
                "v": "HOTEL DUPONT",
                "l": "HOTEL DUPONT"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DUPONT HOTEL"
        ],
        "to": "DU PONT HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL DU PONT",
                "l": "HOTEL DU PONT"
              }
            },
            {
              "v": {
                "v": "HOTEL DUPONT",
                "l": "HOTEL DUPONT"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DU PONT HOTEL"
        ],
        "to": "DUPONT HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "HOTEL DU PONT",
                "l": "HOTEL DU PONT"
              }
            },
            {
              "v": {
                "v": "HOTEL DUPONT",
                "l": "HOTEL DUPONT"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DU PONT HOTEL"
        ],
        "to": "DUPONT HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "WALDORF-ASTORIA",
                "l": "WALDORF-ASTORIA"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA",
                "l": "WALDORF ASTORIA"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF ASTORIA"
        ],
        "to": "WALDORF ASTORIA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column location",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "to": "U.S.S. RALEIGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFBRAU HAUS",
          "HOFBRAUHAUS",
          "HOF BRAU HAUS"
        ],
        "to": "HOFBRAU HAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "to": "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "",
          "L"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DUPONT",
          "HOTEL DU PONT"
        ],
        "to": "DUPONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.KASUGA",
          "NIPPON YUSEN KAISHA S.S. KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND"
        ],
        "to": "RED STAR LINE S.S.FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. PRESIDENT WILSON",
          "S.S. PRESIDENT WILSON"
        ],
        "to": "S.S. PRESIDENT WILSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "to": "BELLEVUE-STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNITED AIR LINES",
          "UNITED AIRLINES"
        ],
        "to": "UNITED AIRLINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "to": "FLATIRON RESAURANT AND CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "to": "THE COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE STRATFORD HOTEL",
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "to": "BELLEVUE-STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUNDESHAUS RESTAURANT",
          "BUNDESHAUSRESTAURANT"
        ],
        "to": "BUNDESHAUS RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "to": "S.S. AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S.ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE S.S. SOUTHWARK",
          "RED STAR LINE S.S.SOUTHWARK"
        ],
        "to": "RED STAR LINE S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ROUND TABLE",
          "THE ROUNDTABLE"
        ],
        "to": "THE ROUND TABLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIES'HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG'N WHISTLE",
          "PIG N'WHISTLE"
        ],
        "to": "PIG N WHISTLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "to": "U.S.S. WYOMING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROGERS'RESTAURANT",
          "ROGER'S RESTAURANT"
        ],
        "to": "ROGER'S RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CROMWELL STEAMSHIP COMPANY",
          "CROMWELLL STEAMSHIP COMPANY"
        ],
        "to": "CROMWELL STEAMSHIP COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE SS WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "to": "RED STAR LINE S.S.WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "to": "B.& O. BLUE LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S ST. PAUL",
          "U.S.M.S.ST. PAUL"
        ],
        "to": "U.S.M.S ST. PAUL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. S.S. ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "to": "LA SALLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "ST.FRANCIS HOTEL"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MCALPIN",
          "HOTEL MC ALPIN"
        ],
        "to": "MCALPIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.NASUGA",
          "NIPPON YUSEN KAISHA S.S. NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S. NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "to": "U.S.S. FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE",
          "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICA",
          "S.S.AMERICA"
        ],
        "to": "S.S. AMERICA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "to": "FLATIRON RESTAURANT & CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "to": "U.S.M.S. PHILADELPHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910.",
          "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
        ],
        "to": "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF ASTORIA",
          "WALDORF-ASTORIA"
        ],
        "to": "WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB OF ST. LOUIS",
          "COMMERCIAL CLUB OF ST.LOUIS"
        ],
        "to": "COMMERCIAL CLUB OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COBBLE STONES",
          "THE COBBLESTONES"
        ],
        "to": "THE COBBLE STONES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE RENDEZ VOUS",
          "THE RENDEZ-VOUS"
        ],
        "to": "THE RENDEZ VOUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. UNITED STATES",
          "S. S. UNITED STATES"
        ],
        "to": "S.S. UNITED STATES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "to": "RITZ CARLTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFÃ© DES BEAUX ARTS",
          "CAFÃ© DES BEAUX-ARTS"
        ],
        "to": "CAFÃ© DES BEAUX ARTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS CLUB",
          "ST.LOUIS CLUB"
        ],
        "to": "ST. LOUIS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT",
          "FLATIRON RESTAURANT"
        ],
        "to": "FLATIRON RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DOWN TOWN CLUB",
          "DOWNTOWN CLUB"
        ],
        "to": "DOWN TOWN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN.NY"
        ],
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MC NELL",
          "SMITH & MCNELL"
        ],
        "to": "SMITH & MCNELL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "to": "A.W. DENNETT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL YACHT CLUB OF ST. PETERSBURG",
          "IMPERIAL YACHT CLUB OF ST.PETERSBURG"
        ],
        "to": "IMPERIAL YACHT CLUB OF ST. PETERSBURG"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
                "l": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
              }
            },
            {
              "v": {
                "v": "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK",
                "l": "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST.ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column location",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        },
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "[RESTAURANT AND/OR LOCATION UNKNOWN]",
                "l": "[RESTAURANT AND/OR LOCATION UNKNOWN]"
              }
            },
            {
              "v": {
                "v": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
                "l": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]"
              }
            },
            {
              "v": {
                "v": "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]",
                "l": "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]"
              }
            },
            {
              "v": {
                "v": "[NOT GIVEN]",
                "l": "[NOT GIVEN]"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "",
          "name": "location",
          "type": "text",
          "columnName": "location"
        },
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
                "l": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]"
              }
            },
            {
              "v": {
                "v": "[RESTAURANT AND/OR LOCATION UNKNOWN]",
                "l": "[RESTAURANT AND/OR LOCATION UNKNOWN]"
              }
            },
            {
              "v": {
                "v": "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]",
                "l": "[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]"
              }
            },
            {
              "v": {
                "v": "[NOT GIVEN]",
                "l": "[NOT GIVEN]"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "location",
          "omitBlank": false,
          "type": "list",
          "columnName": "location"
        }
      ]
    },
    "columnName": "location",
    "expression": "grel:value.replace('[RESTAURANT AND/OR LOCATION UNKNOWN]','').replace('[NOT GIVEN]','').replace('[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]','').replace('[RESTAURTANT NAME AND/OR LOCATION NOT GIVEN]','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression grel:value.split('[')[0].split(']')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "grel:value.split('[')[0].split(']')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column location",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "'POSSUM CLUB"
        ],
        "to": "POSSUM CLUB"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location_type using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location_type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column location_type using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "location_type",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DOLLARS"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "$"
        ],
        "to": "s"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHILLINGS"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "s"
      }
    ]
  },
  {
    "op": "core/fill-down",
    "description": "Fill down cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency"
  },
  {
    "op": "core/fill-down",
    "description": "Fill down cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression grel:value.replace('','SHILLINGS')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "grel:value.replace('','SHILLINGS')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression grel:cells[\"notes\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "grel:cells[\"notes\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "CURRE",
          "name": "currency",
          "type": "text",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMALL FLAG LOGO; WINE LIST PRICED IN BRITISH CURRENCY ON REAR OF MENU;"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "CURRE",
          "name": "currency",
          "type": "text",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAG LOGO; PRICED WINE LIST IN BRITISH CURRENCY;"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "CURRE",
          "name": "currency",
          "type": "text",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED WINE LIST ON BACK OF MENU; PRICES IN BRITISH CURRENCY ONLY;"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "BRITISH CURRENCY",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "CURRE",
          "name": "currency",
          "type": "text",
          "columnName": "currency"
        }
      ]
    },
    "columnName": "currency",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGO; PRICED WINE LIST ON BACK WITH PRICES IN BRITISH CURRENCY;"
        ],
        "to": "SHILLINGS"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency_symbol",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency_symbol",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression grel:cells[\"currency\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "grel:cells[\"currency\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "SHILLINGS",
          "name": "currency_symbol",
          "type": "text",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHILLINGS"
        ],
        "to": "s"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column status using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column status using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "status",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column status using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "status",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column page_count using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column dish_count using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 2,
          "to": 9,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 1,
          "to": 58,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ",",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 2,
          "to": 9,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 1,
          "to": 58,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ",",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression grel:value.replace(',',';')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 2,
          "to": 9,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "page_count",
          "from": 1,
          "to": 58,
          "type": "range",
          "columnName": "page_count"
        },
        {
          "mode": "text",
          "caseSensitive": false,
          "query": ",",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "grel:value.replace(',',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NY",
          "DELMONICO'S [NY]",
          "DELMONICO'S [NY?]",
          "DELMONICO'S, NY",
          "DELMONICO'S  NY",
          "DELMONICO'S, N.Y.",
          "DELMONICO'S, NY;",
          "DELMONICO'S, [NY]",
          "DELMONICOS NY",
          "DELMONICOS', NY",
          "DELMONICOS, (NY)"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S, [NEW YORK, N.Y.]",
          "DELMONICOS, [NEW YORK, N.Y.]",
          "DELMONICO'S, (NEW YORK, NY?)",
          "DELMONICO'S, [NEW YORK, NY]",
          "DELMONICO'S, [NEW YORK, NY];",
          "DELMONICO'S. NEW YORK, NY",
          "DELMONICOS, (NEW YORK, NY?)",
          "DELMONICOS, NEW YORK, NY",
          "[DELMONICO'S], NEW YORK, NY"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK, NY",
          "NEW YORK, [NY]",
          "[NEW YORK, NY]",
          "[NEW YORK, NY?]",
          "(NEW YORK, NY?)",
          "NEW YORK, [NY];",
          "NEW YORK [NY]",
          "NEW YORK, NY [?]",
          "[New York, NY]",
          "[NEW YORK, NY];"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK",
          "[NEW YORK]",
          "(NEW YORK?)",
          "NEW YORK;",
          "\"NEW YORK\"",
          "(NEW YORK)",
          "NEW YORK (?)",
          "NEW YORK(?)",
          "NEW YORK?"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM HOTEL [CHICAGO, IL]",
          "AUDITORIUM HOTEL, CHICAGO, IL",
          "AUDITORIUM HOTEL , CHICAGO, IL",
          "AUDITORIUM HOTEL [CHICAGO IL]",
          "AUDITORIUM HOTEL, (?CHICAGO, IL?)",
          "AUDITORIUM HOTEL, (CHICAGO, IL?)",
          "AUDITORIUM HOTEL, CHICAGO [IL]",
          "AUDITORIUM HOTEL, CHICAGO, [IL]"
        ],
        "to": "AUDITORIUM HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE - \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE  \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE \" FRIEDRICH DER GROSSE\"",
          "EN ROUTE \"FRIEDRICH DER GROSSE \"",
          "EN ROUTE 'FRIEDRICH DER GROSSE\"",
          "EN ROUTE - 'FRIEDRICH DER GROSSE \"",
          "EN ROUTE - :FRIEDRICH DER GROSSE\""
        ],
        "to": "EN ROUTE \"FRIEDRICH DER GROSSE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PHILADELPHIA, PA",
          "PHILADELPHIA [PA]",
          "[PHILADELPHIA, PA]",
          "PHILADELPHIA, PA.",
          "PHILADELPHIA, [PA]",
          "PHILADELPHIA. PA",
          "[PHILADELPHIA, PA?]"
        ],
        "to": "PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO, IL",
          "CHICAGO, [IL]",
          "[CHICAGO, IL]",
          "CHICAGO IL",
          "CHICAGO [IL]",
          "[CHICAGO IL?]"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE, R.I.",
          "PROVIDENCE RI",
          "[PROVIDENCE RI?]",
          "[PROVIDENCE, R.I.]",
          "[PROVIDENCE, RI?]"
        ],
        "to": "PROVIDENCE, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S [NY]",
          "SHERRY'S NY",
          "SHERRY'S, NY",
          "SHERRY'S (NY?)",
          "SHERRYS, NY"
        ],
        "to": "SHERRY'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT VA",
          "OLD POINT COMFORT, VA.",
          "OLD POINT, COMFORT, VA",
          "[OLD POINT COMFORT, VA]"
        ],
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BRUNSWICK NY",
          "BRUNSWICK HOTEL [NY?]",
          "HOTEL BRUNSWICK [NY?]",
          "HOTEL BRUNSWICK, NY",
          "HOTEL BRUNSWICK; NY"
        ],
        "to": "HOTEL BRUNSWICK, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NY",
          "HOTEL MANHATTAN [NY]",
          "MANHATTAN HOTEL NY",
          "MANHATTAN HOTEL, NY",
          "HOTEL MANHATTAN, [NY]"
        ],
        "to": "HOTEL MANHATTAN, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS FRIESLAND",
          "S.S. FRIESLAND",
          "SS. FRIESLAND",
          "S.S. \"FRIESLAND\"",
          "SS; \"FRIESLAND\""
        ],
        "to": "S.S. FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S [NEW YORK]",
          "DELMONICO'S, [NEW YORK]",
          "DELMONICO'S, NEW YORK",
          "DELMONICO'S,( NEW YORK)",
          "DELMONICOS, NEW YORK"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NY",
          "[NY]",
          "(NY)",
          "(N.Y.)",
          "(NY?)"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE AUDITORIUM [CHICAGO, IL]",
          "THE AUDITORIUM, CHICAGO, IL",
          "AUDITORIUM, THE, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO IL",
          "THE AUDITORIUM, [CHICAGO, IL]"
        ],
        "to": "THE AUDITORIUM, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[SAN FRANCISCO,CA]",
          "SAN FRANCISCO,CA;",
          "SAN FRANCISCO,[CA?]",
          "SAN FRANCISCO,CA",
          "SAN FRANCISCO,CA."
        ],
        "to": "SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD, WASHINGTON, DC",
          "NEW WILLARD, THE, WASHINGTON, DC",
          "THE NEW WILLARD [WASHINGTON, DC",
          "THE NEW WILLARD, WASHINGTON DC",
          "THE NEW WILLARD, WASHINGTON, D.C."
        ],
        "to": "THE NEW WILLARD, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - SS \"LAHN\"",
          "EN ROUTE - \"SS LAHN\"",
          "EN ROUTE  \"SS LAHN\"",
          "EN ROUTE -SS \"LAHN\"",
          "EN ROUTE _ SS \"LAHN\""
        ],
        "to": "EN ROUTE - \"SS LAHN\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO, NY",
          "(BUFFALO, NY?)",
          "BUFFALO NY(?)",
          "[BUFFALO, NY",
          "[BUFFALO, NY]"
        ],
        "to": "BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARIS, FRANCE",
          "PARIS, FRANCE(?)",
          "PARIS, [FRANCE]",
          "[PARIS, FRANCE?]",
          "[PARIS, FRANCE]"
        ],
        "to": "PARIS, FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY [NEW YORK]",
          "HOTEL SAVOY, NEW YORK",
          "HOTEL SAVOY, [NEW YORK]",
          "HOTEL SAVOY; NEW YORK"
        ],
        "to": "HOTEL SAVOY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK,NY",
          "(NEW YORK,NY)",
          "[NEW YORK,NY]",
          "NEW YORK,[NY]"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.\"BARBAROSSA\"",
          "EN ROUTE - S.S.BARBAROSSA",
          "EN ROUTE; S.S.BARBAROSSA",
          "EN ROUTE; S.S.BARBAROSSA\""
        ],
        "to": "EN ROUTE - S.S.BARBAROSSA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROOKLYN,NY",
          "BROOKLYN,NY(?)",
          "BROOKLYN[NY]",
          "[BROOKLYN,NY]"
        ],
        "to": "BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC [CANADA]",
          "QUEBEC,[ CANADA]",
          "QUEBEC, [CANADA]"
        ],
        "to": "QUEBEC, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN CITY CLUB, [CINCINNATI, OH]",
          "QUEEN CITY CLUB (CINCINNATI OH?)",
          "QUEEN CITY CLUB CINCINNATI OH",
          "QUEEN CITY CLUB, CINCINNATI, OH"
        ],
        "to": "QUEEN CITY CLUB, CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS CITY OF RIO DE JANEIRO",
          "S.S. \"CITY OF RIO DE JANEIRO\"",
          "[SS CITY OF RIO DE JANEIRO?]",
          "[SS CITY OF RIO DE JANEIRO]"
        ],
        "to": "S.S. \"CITY OF RIO DE JANEIRO\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AT SEA",
          "[AT SEA ?]",
          "(AT SEA)",
          "[AT SEA?]"
        ],
        "to": "AT SEA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DETROIT, MI",
          "(DETROIT, MI?)",
          "DETROIT, [MI]",
          "[DETROIT, MI]"
        ],
        "to": "DETROIT, MI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON,D.C.",
          "WASHINGTON,DC",
          "WASHINGTON,[D.C.]",
          "[WASHINGTON,DC]"
        ],
        "to": "WASHINGTON, D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MARLBOROUGH HOTEL, (?)",
          "HOTEL MARLBOROUGH",
          "HOTEL MARLBOROUGH, (?)",
          "MARLBOROUGH HOTEL, [?]"
        ],
        "to": "MARLBOROUGH HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO,ILL.",
          "CHICAGO,ILL;",
          "CHICAGO,ILL",
          "[CHICAGO,ILL]"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PHILADELPHIA,PA.",
          "PHILADELPHIA,PA",
          "PHILADELPHIA,[PA]",
          "[PHILADELPHIA,PA.]"
        ],
        "to": "PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]",
          "HOTEL BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "to": "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RMS CAMPANIA",
          "R.M.S. CAMPANIA",
          "R.M.S. \"CAMPANIA\"",
          "R.M.S. \" CAMPANIA\""
        ],
        "to": "R.M.S. CAMPANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN FRANCISCO, CA",
          "(SAN FRANCISCO, CA?)",
          "SAN FRANCISCO, CA;",
          "[SAN FRANCISCO, CA]"
        ],
        "to": "SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ATLANTIC CITY, NJ",
          "ATLANTIC CITY, N.J.",
          "ATLANTIC CITY, NJ;",
          "[ATLANTIC CITY, NJ]"
        ],
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROME, ITALY",
          "ROME [ITALY]",
          "ROME ITALY",
          "[ROME, ITALY]"
        ],
        "to": "ROME, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME, [BOSTON, MA];",
          "HOTEL VENDOME; BOSTON, MA",
          "VENDOME HOTEL, BOSTON, MA"
        ],
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU,N.P.BAHAMAS",
          "NASSAU,NP,BAHAMAS",
          "NASSAU,NP;BAHAMAS",
          "[NASSAU,N.P.,BAHAMAS]"
        ],
        "to": "NASSAU, N.P.BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[LONDON,ENGLAND]",
          "LONDON,[ENGLAND]",
          "LONDON,ENGLAND",
          "[LONDON,ENGLAND ?]"
        ],
        "to": "LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ALGONQUIN CLUB, BOSTON, MA",
          "NEW ALGONQUIN CLUB [BOSTON, MA]",
          "NEW ALGONQUIN CLUB, (BOSTON, MA?)"
        ],
        "to": "NEW ALGONQUIN CLUB, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KONIGIN LUISE",
          "\"KONIGIN LUISE\"",
          "KONIGIN LUISE;"
        ],
        "to": "KONIGIN LUISE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PFISTER, MILWAUKEE, WI",
          "HOTEL PFISTER, MILWAUKEE WI",
          "PFISTER HOTEL, MILWAUKEE, WI"
        ],
        "to": "HOTEL PFISTER, MILWAUKEE, WI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS: KAMAKURA MARU",
          "SS: \"KAMAKURA MARU\"",
          "SS; KAMAKURA MARU"
        ],
        "to": "SS: KAMAKURA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66 ST. & B'WAY NY",
          "66 ST. & B'WAY. NY",
          "66 ST. & BWAY. NY"
        ],
        "to": "66 ST. & B'WAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CITY",
          "[NEW YORK CITY]",
          "[?NEW YORK CITY?]"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOS ANGELES,CA",
          "LOS ANGELES,CA;",
          "LOS ANGELES,[CA?]"
        ],
        "to": "LOS ANGELES, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS WESTERNLAND",
          "S.S. WESTERNLAND",
          "S.S. \"WESTERNLAND\""
        ],
        "to": "S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON, D.C.",
          "WASHINGTON DC"
        ],
        "to": "WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH,L.I.,NY;",
          "LONG BEACH,L.I.,[NY&]",
          "LONG BEACH,LI,[NY?]"
        ],
        "to": "LONG BEACH, L.I., NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(CHICAGO, ILL)",
          "CHICAGO ,ILL",
          "CHICAGO, ILL"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(CHICAGO,IL)",
          "CHICAGO,IL.",
          "CHICAGO,[IL]"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY, NY",
          "HOTEL SAVOY NY",
          "HOTEL SAVOY, [NY]"
        ],
        "to": "HOTEL SAVOY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DETROIT,MI",
          "(DETROIT,MI?)",
          "DETROIT,[MI?]"
        ],
        "to": "DETROIT, MI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF, NEW YORK, NY",
          "THE WALDORF, [?NEW YORK, NY]",
          "THE WALDORF, [NEW YORK, NY?]"
        ],
        "to": "THE WALDORF, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MONTREAL [CANADA?]",
          "MONTREAL, CANADA",
          "MONTREAL, [CANADA]"
        ],
        "to": "MONTREAL, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P. BAHAMAS",
          "NASSAU, N.P., BAHAMAS",
          "[NASSAU, N.P., BAHAMAS]"
        ],
        "to": "NASSAU, N.P., BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANHATTAN HOTEL, NEW YORK, NY",
          "HOTEL MANHATTAN, NEW YORK, [NY];",
          "HOTEL MANHATTAN, [NEW YORK, NY]"
        ],
        "to": "MANHATTAN HOTEL NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB, PORTLAND, OR",
          "COMMERCIAL CLUB, [PORTLAND, OR]",
          "PORTLAND COMMERCIAL CLUB, PORTLAND, OR"
        ],
        "to": "COMMERCIAL CLUB, PORTLAND, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MA",
          "BOSTON MA",
          "BOSTON; MA"
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAKEWOOD, NJ",
          "LAKEWOOD NJ",
          "LAKEWOOD, N.J."
        ],
        "to": "LAKEWOOD, N.J., NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCANTILE CLUB (ST LOUIS, MO)",
          "MERCANTILE CLUB, ST LOUIS [MO]",
          "MERCANTILE CLUB, ST. LOUIS, MO"
        ],
        "to": "MERCANTILE CLUB ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON,MASS",
          "BOSTON,MASS;",
          "(BOSTON,MASS)"
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPENHAGEN, DENMARK",
          "[COPENHAGEN DENMARK?]",
          "[COPENHAGEN, DENMARK]"
        ],
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS RIO DE JANEIRO",
          "SS: RIO DE JANEIRO",
          "SS; RIO DE JANEIRO"
        ],
        "to": "SS RIO DE JANEIRO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH, LI, [NY];",
          "LONG BEACH, L.I., NY"
        ],
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SOMERSET, BOSTON, MA",
          "HOTEL SOMERSET, BOSTON, [MA]",
          "HOTEL SOMERSET, [BOSTON, MA]"
        ],
        "to": "HOTEL SOMERSET, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW TONTINE HOTEL, NEW HAVEN [CT]",
          "TONTINE HOTEL, NEW HAVEN, CT",
          "TONTINE HOTEL, [NEW HAVEN, CT]"
        ],
        "to": "TONTINE HOTEL NEW HAVEN, CT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "SAVOY HOTEL, (?)"
        ],
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS COPTIC",
          "S.S. \"COPTIC\"",
          "S.S. COPTIC"
        ],
        "to": "SS COPTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADELAIDE [AUSTRALIA?]",
          "ADELAIDE, AUSTRALIA",
          "[ADELAIDE, AUSTRALIA]"
        ],
        "to": "ADELAIDE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS, MO",
          "ST. LOUIS, [MO];",
          "ST. LOUIS [MO]"
        ],
        "to": "ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ZERMATT, [SWITZERLAND]",
          "(ZERMATT, SWITZERLAND?)",
          "ZERMATT [SWITZERLAND]"
        ],
        "to": "ZERMATT, SWITZERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE-STRATFORD, (PHILADELPHIA, PA?)",
          "BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "to": "BELLEVUE-STRATFORD, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SARATOGA SPRINGS, NY",
          "SARATOGA SPRINGS, NY.",
          "SARATOGA SPRINGS, [NY]"
        ],
        "to": "SARATOGA SPRINGS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF-ASTORIA [NEW YORK]",
          "WALDORF-ASTORIA, [NEW YORK]"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R.M.S. ETRURIA",
          "RMS ETRURIA"
        ],
        "to": "R.M.S. \"ETRURIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST. DENIS HOTEL, (?)"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE HOLLENDEN [CLEVELAND OH?]",
          "THE HOLLENDEN, CLEVELAND, OH",
          "THE HOLLENDEN, CLEVELAND; OH"
        ],
        "to": "THE HOLLENDEN, CLEVELAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS CITY OF PARA",
          "S.S. \"CITY OF PARA\"",
          "S.S. \"CITY OF PARA'"
        ],
        "to": "S.S. \"CITY OF PARA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNG\"S HOTEL, BOSTON, MA",
          "YOUNG'S HOTEL, [BOSTON MA?]"
        ],
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS DORIC",
          "SS DORIC;",
          "S.S. \"DORIC\""
        ],
        "to": "S.S. \"DORIC\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC [PHILADELPHIA, PA]",
          "HOTEL MAJESTIC, PHILADELPHIA, PA",
          "MAJESTIC HOTEL, PHILADELPHIA. PA"
        ],
        "to": "HOTEL MAJESTIC, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S,[NEW YORK]",
          "DELMONICOS,[NEW YORK]",
          "(DELMONICO'S.NEW YORK)"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERGEN, NORWAY",
          "(BERGEN, NORWAY)",
          "[BERGEN, NORWAY]"
        ],
        "to": "BERGEN, NORWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROOKLYN, NY",
          "[BROOKLYN, NY]",
          "BROOKLYN NY"
        ],
        "to": "BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK HOTEL, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON [MA]"
        ],
        "to": "BRUNSWICK HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINING CAR",
          "Dining Car",
          "DINING CAR;"
        ],
        "to": "DINING CAR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"LUCANIA\"",
          "RMS LUCANIA",
          "R.M.S. LUCANIA"
        ],
        "to": "R.M.S. \"LUCANIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARLBOROUGH, NEW YORK, NY",
          "HOTEL MARLBOROUGH, [NEW YORK, NY]",
          "MARLBOROUGH HOTEL, NEW YORK, NY"
        ],
        "to": "HOTEL MARLBOROUGH, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66TH ST AND BROADWAY,NEW YORK,NY",
          "66TH ST. AND BROADWAY;NEW YORK,NY",
          "[66TH ST AND BROADWAY,NEW YORK,NY]"
        ],
        "to": "66TH ST AND BROADWAY,NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLINTON COUNTY, NY",
          "CLINTON COUNTY NY",
          "CLINTON COUNTY, NY."
        ],
        "to": "CLINTON COUNTY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS KASUGA",
          "S.S. KASUGA",
          "SS: KASUGA"
        ],
        "to": "S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND, OH",
          "[CLEVELAND, OH]",
          "CLEVELAND [OH]"
        ],
        "to": "CLEVELAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON (WASHINGTON DC?)",
          "THE ARLINGTON, WASHINGTON, DC"
        ],
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "?",
          "[?]"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "JACKSONVILLE, FL",
          "JACKSONVILLE, FL;"
        ],
        "to": "JACKSONVILLE, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASTOR HOTEL, NEW YORK, NY",
          "HOTEL ASTOR, NEW YORK, NY"
        ],
        "to": "ASTOR HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD SS KAMAKURA MARU",
          "ABOARD SS KAMAKURA MARU;"
        ],
        "to": "ABOARD SS KAMAKURA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE [BOSTON,MASS ?]",
          "PARKER HOUSE, BOSTON,MASS"
        ],
        "to": "PARKER HOUSE, BOSTON,MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL,NEW ORLEANS,LA",
          "ST. CHARLES HOTEL,NEW ORLEANS,[LA]"
        ],
        "to": "ST. CHARLES HOTEL, NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FANEUIL HALL, BOSTON, MA",
          "FANEUIL HALL, [BOSTON, MA]"
        ],
        "to": "FANEUIL HALL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE \"H.H.MEIER\"",
          "EN ROUTE \" H.H.MEIER\""
        ],
        "to": "EN ROUTE \"H.H.MEIER\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERLIN, GERMANY",
          "BERLIN [GERMANY]"
        ],
        "to": "BERLIN, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA,NY",
          "WALDORF-ASTORIA,[NY]"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PITTSBURGH, PA",
          "[PITTSBURGH, PA]"
        ],
        "to": "PITTSBURGH, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARIS,FRANCE",
          "(PARIS,FRANCE)"
        ],
        "to": "PARIS, FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAVOY HOTEL, NEW YORK, NY",
          "HOTEL SAVOY, NEW YORK, NY"
        ],
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD R.M.S. \"ETRURIA\"",
          "ABOARD R.M.S. ETRURIA"
        ],
        "to": "ABOARD R.M.S. \"ETRURIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG, GERMANY",
          "HAMBURG, [GERMANY]"
        ],
        "to": "HAMBURG, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN CLUB - NY",
          "LINCOLN CLUB [NY]"
        ],
        "to": "LINCOLN CLUB, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANGKOK, THAILAND",
          "BANGKOK, [THAILAND]"
        ],
        "to": "BANGKOK, THAILAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66TH STREET AND BROADWAY,NEW YORK,NY",
          "[66TH STREET AND BROADWAY,NEW YORK,NY]"
        ],
        "to": "66TH STREET AND BROADWAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. AUGUSTINE, FLA",
          "ST. AUGUSTINE, FLA."
        ],
        "to": "ST. AUGUSTINE, FLA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW HAVEN CT",
          "NEW HAVEN [CT]"
        ],
        "to": "NEW HAVEN, CT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MELBOURNE,AUSTRALIA",
          "[MELBOURNE,AUSTRALIA?]"
        ],
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park"
        ],
        "to": "Gramercy Park Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S, NEW YORK, NY",
          "SHERRY'S, [NEW YORK, NY]"
        ],
        "to": "SHERRY'S NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, NP",
          "[NASSAU, N.P.]"
        ],
        "to": "NASSAU, NP"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Unknown",
          "unknown"
        ],
        "to": ""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE NEW YORK, NY",
          "HOFFMAN HOUSE, NEW YORK, NY"
        ],
        "to": "HOFFMAN HOUSE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel St. Francis",
          "HOTEL ST. FRANCIS"
        ],
        "to": "HOTEL ST. FRANCIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON, ST. LOUIS, MO",
          "JEFFERSON HOTEL, ST.  LOUIS [MO]"
        ],
        "to": "HOTEL JEFFERSON, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE",
          "[EN ROUTE]"
        ],
        "to": "EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA PROVENCE",
          "ABOARD PAQUEBOT \"LA PROVENCE\""
        ],
        "to": "ABOARD PAQUEBOT LA PROVENCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STENTON [PHILADELPHIA PA]",
          "HOTEL STENTON, PHILADELPHIA, PA"
        ],
        "to": "HOTEL STENTON, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(ROME,ITALY)",
          "ROME,ITALY"
        ],
        "to": "ROME, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS TRINIDAD",
          "S.S. \"TRINIDAD\""
        ],
        "to": "SS TRINIDAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITE MOUNTAINS, NH",
          "WHITE MOUNTAINS, NH;"
        ],
        "to": "WHITE MOUNTAINS, NH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LIVERPOOL [ENGLAND?}",
          "LIVERPOOL, [ENGLAND]"
        ],
        "to": "LIVERPOOL, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fairmont Hotel",
          "FAIRMONT HOTEL"
        ],
        "to": "FAIRMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRANKFURT, GERMANY",
          "[FRANKFURT, GERMANY?]"
        ],
        "to": "FRANKFURT, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, ME",
          "PORTLAND ME"
        ],
        "to": "PORTLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT \"LA SAVOIE\"",
          "ABOARD PAQUEBOT LA SAVOIE"
        ],
        "to": "ABOARD PAQUEBOT LA SAVOIE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "THE BELLEVUE-STRATFORD, [PHILADELPHIA, PA?]"
        ],
        "to": "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YOUNG'S HOTEL",
          "YOUNG'S HOTEL [?]"
        ],
        "to": "YOUNG'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND,OH",
          "CLEVELAND,[OH?]"
        ],
        "to": "CLEVELAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MECHANICS HALL, [BOSTON, MA];",
          "MECHANICS' HALL, BOSTON, MA"
        ],
        "to": "MECHANICS HALL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "130 BROADWAY, NEW YORK",
          "130 BROADWAY, [NEW YORK]"
        ],
        "to": "130 BROADWAY, NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EAGLE HOTEL (GETTYSBURG, PA?)",
          "EAGLE HOTEL, GETTYSBURG, PA"
        ],
        "to": "EAGLE HOTEL, GETTYSBURG, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY",
          "HOTEL DEL CAMPIDOGLIO, [NEW YORK, N.Y.]"
        ],
        "to": "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD SS KASUGA;",
          "ABOARD SS KASUGA"
        ],
        "to": "ABOARD SS KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(CALIFORNIA?)",
          "CALIFORNIA"
        ],
        "to": "CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTHERN HOTEL, ST. LOUIS, MO",
          "SOUTHERN HOTEL, [ST. LOUIS, MO]"
        ],
        "to": "SOUTHERN HOTEL, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLINTON COUNTY,NY",
          "CLINTON COUNTY.NY"
        ],
        "to": "CLINTON COUNTY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Gramercy Park; 52 Gramercy Park North",
          "Gramercy Park Hotel; Hotel Gramercy Park; 52 Gramercy Park North"
        ],
        "to": "GRAMERCY HOTEL,  52 GRAMERCY PARK NORTH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TACOMA, [WA?}",
          "TACOMA; WA"
        ],
        "to": "TACOMA, WA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE AUDITORIUM,CHICAGO,ILL;",
          "THE AUDITORIUM,[CHICAGO,ILL.]"
        ],
        "to": "THE AUDITORIUM CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S,[NEW YORK,NY?]",
          "DELMONICO'S,NEW YORK,NY"
        ],
        "to": "DELMONICO'S NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROUND TABLE CLUB",
          "[ROUND TABLE CLUB]"
        ],
        "to": "ROUND TABLE CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "to": "PARK LANE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. EMPRESS OF INDIA",
          "R.M.S. \"EMPRESS  OF INDIA\""
        ],
        "to": "R.M.S. EMPRESS OF INDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE,MD",
          "BALTIMORE,MD."
        ],
        "to": "BALTIMORE, MD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA",
          "Waldorf-Astoria"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KASUGA MARU",
          "EN ROUTE ABOARD SS. KASUGA MARU"
        ],
        "to": "EN ROUTE ABOARD SS KASUGA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MAXWELL HOUSE, NASHVILLE, [TN];",
          "MAXWELL HOUSE, NASHVILLE, TN"
        ],
        "to": "MAXWELL HOUSE, NASHVILLE, TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ZINZENDORF, WINSTON-SALEM, NC",
          "ZINZENDORF HOTEL, WINSTON-SALEM, NC"
        ],
        "to": "HOTEL ZINZENDORF, WINSTON-SALEM, NC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ORMOND, FL",
          "ORMOND, FL;"
        ],
        "to": "ORMOND, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASHVILLE, [TN?]",
          "NASHVILLE, TN"
        ],
        "to": "NASHVILLE, TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND, OHIO",
          "CLEVELAND. OHIO"
        ],
        "to": "CLEVELAND, OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE TEN EYCK, ALBANY, NY",
          "TEN EYCK, THE, ALBANY, NY"
        ],
        "to": "THE TEN EYCK, ALBANY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUTLER, PA",
          "BUTLER, PA."
        ],
        "to": "BUTLER, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "to": "HOTEL MAJESTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "HOTEL ASTOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH VA"
        ],
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANILA, P.I.",
          "MANILA, PI"
        ],
        "to": "MANILA, PI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE, PHILADELPHIA [PA]"
        ],
        "to": "BELLEVUE HOTEL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. AUGUSTINE, FL",
          "ST. AUGUSTINE,  FL"
        ],
        "to": "ST. AUGUSTINE, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - SONOMA",
          "EN  ROUTE - SONOMA"
        ],
        "to": "EN ROUTE - SONOMA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. PETERSBURG,[RUSSIA]",
          "ST. PETERSBURG.RUSSIA"
        ],
        "to": "ST. PETERSBURG, RUSSIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE, VA",
          "ROANOKE, VA;"
        ],
        "to": "ROANOKE, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG,GERMANY",
          "HAMBURG,[GERMANY]"
        ],
        "to": "HAMBURG, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND PACIFIC HOTEL, CHICAGO, IL",
          "GRAND PACIFIC HOTEL [CHICAGO, IL];"
        ],
        "to": "GRAND PACIFIC HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NEW YORK,NY",
          "DELMONICO'S, [NEW YORK,N.Y.]"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI,OH",
          "[CINCINNATI,OH?]"
        ],
        "to": "CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CORONADO BEACH, CA",
          "CORONADO BEACH, CA;"
        ],
        "to": "CORONADO BEACH, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FL",
          "TAMPA FL?"
        ],
        "to": "TAMPA, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE PHILADELPHIA [PA?]",
          "UNION LEAGUE, [PHILADELPHIA, PA]"
        ],
        "to": "UNION LEAGUE PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT HOTEL, PROVIDENCE RI",
          "NARRAGANSETT HOTEL, PROVIDENCE, RI"
        ],
        "to": "NARRAGANSETT HOTEL PROVIDENCE, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NYC",
          "[NYC]"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE RALEIGH, WASHINGTON, DC",
          "THE RALEIGH, WASHINGTON DC"
        ],
        "to": "THE RALEIGH WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HORTICULTURAL HALL, PHILADELPHIA, PA",
          "HORTICULTURAL HALL, PHILADELPHIA [PA]"
        ],
        "to": "HORTICULTURAL HALL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AZ",
          "[AZ]"
        ],
        "to": "AZ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WELLINGTON, PROVIDENCE RI",
          "WELLINGTON, THE, PROVIDENCE, RI"
        ],
        "to": "THE WELLINGTON, PROVIDENCE RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(?FLA?)",
          "[FLA.]"
        ],
        "to": "FLA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA,FLA.",
          "TAMPA.FLA."
        ],
        "to": "TAMPA, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MASS.",
          "BOSTON, MASS;"
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "ST. GEORGE HOTEL, NYACK, NY"
        ],
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS. KOBE MARU"
        ],
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE,BOSTON,MASS;",
          "PARKER HOUSE,[BOSTON,MASS]"
        ],
        "to": "PARKER HOUSE, BOSTON, MASS;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MELBOURNE, AUSTRALIA",
          "MELBOURNE [AUSTRALIA?]"
        ],
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUCERNE,SWITZERLAND",
          "[LUCERNE,SWITZERLAND?]"
        ],
        "to": "LUCERNE, SWITZERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK [NY];",
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK, [NY];"
        ],
        "to": "NOS. 667 TO 677 [BROADWAY] MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DENVER, COLO.",
          "DENVER, COLO;"
        ],
        "to": "DENVER, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WALTON,PHILADELPHIA,PA;",
          "HOTEL WALTON,[PHILADELPHIA,PA]"
        ],
        "to": "HOTEL WALTON, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. NACOOCHEE",
          "SS NACOOCHEE"
        ],
        "to": "S.S. NACOOCHEE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RMS OCEANIC",
          "R.M.S. OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "THE ARGYLE, BROOKLYN, NY"
        ],
        "to": "THE ARGYLE, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHAMBERLIN'S, (WASHINGTON,D.C.)",
          "CHAMBERLIN'S; [WASHINGTON,DC?]"
        ],
        "to": "CHAMBERLIN'S, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "117 WEST 34TH STREET,NEW YORK,NY",
          "117 WEST 34TH STREET,[NEW YORK,NY]"
        ],
        "to": "117 WEST 34TH STREET,NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "METROPOLITAN CLUB, NEW YORK, NY",
          "METROPOLITAN CLUB, [?NEW YORK, NY]"
        ],
        "to": "METROPOLITAN CLUB, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH;",
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
        ],
        "to": "PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL  ST. DENIS, NY",
          "ST. DENIS HOTEL; NY"
        ],
        "to": "HOTEL  ST. DENIS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S",
          "Delmonicos"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\"THE ARGYLE\"",
          "THE ARGYLE [?]"
        ],
        "to": "THE ARGYLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANHATTAN BEACH, LONG ISLAND [NY]",
          "MANHATTAN BEACH, LONG ISLAND, [NY]"
        ],
        "to": "MANHATTAN BEACH, LONG ISLAND, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. \"KOBE WARU\"",
          "EN ROUTE ABOARD S.S. KOBE WARU"
        ],
        "to": "EN ROUTE ABOARD S.S. KOBE WARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESIDENCE-PALAIS, COPENHAGEN, DENMARK",
          "[RESIDENCE-PALAIS, COPENHAGEN, DENMARK]"
        ],
        "to": "RESIDENCE-PALAIS, COPENHAGEN, DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GERMANTOWN (PA?)",
          "[GERMANTOWN, PA?]"
        ],
        "to": "GERMANTOWN, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAMPFER; H.H. MEIER",
          "DAMPFER \"H.H. MEIER\""
        ],
        "to": "DAMPFER; H.H. MEIER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BATTLE CREEK, MI",
          "BATTLE CREEK, MI;"
        ],
        "to": "BATTLE CREEK, MI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OMAHA NEBRASKA",
          "OMAHA, NEBRASKA"
        ],
        "to": "OMAHA, NE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "114 WEST FOURTEENTH STREET, NEW YORK",
          "114 WEST FOURTEENTH STREET, [NEW YORK]"
        ],
        "to": "114 WEST FOURTEENTH STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GERMANY(?)",
          "[GERMANY]"
        ],
        "to": "GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW WILLARD [WASHINGTON, [DC]",
          "NEW WILLARD, WASHINGTON, DC"
        ],
        "to": "NEW WILLARD, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI , OHIO",
          "CINCINNATI, OHIO"
        ],
        "to": "CINCINNATI , OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAMPFER KAISER WILHELM DER GROSSE;",
          "DAMPFER \"KAISER WILHELM DER GROSSE\""
        ],
        "to": "DAMPFER KAISER WILHELM DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT SQUARE, BUFFALO, NY",
          "ELLICOTT SQUARE, BUFFALO, [NY];"
        ],
        "to": "ELLICOTT SQUARE, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK,THE,BOSTON,[MASS]",
          "BRUNSWICK,THE,BOSTON[MASS]"
        ],
        "to": "THE BRUNSWICK, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CONVENTION HALL, (BUFFALO, NY?)",
          "CONVENTION HALL, BUFFALO, NY"
        ],
        "to": "CONVENTION HALL, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA [NY?]",
          "WALDORF-ASTORIA, NY"
        ],
        "to": "WALDORF-ASTORIA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASCOT [ENGLAND]",
          "ASCOT, ENGLAND"
        ],
        "to": "ASCOT, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE; ALTOONA, PA;"
        ],
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN.",
          "PENN;"
        ],
        "to": "PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER R.I.",
          "NARRAGANSETT PIER, RI"
        ],
        "to": "NARRAGANSETT PIER, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WORCESTER, MASS",
          "WORCESTER, MASS;"
        ],
        "to": "WORCESTER, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE,(PHILADELPHIA,PA)",
          "UNION LEAGUE,[PHILADELPHIA,PA]"
        ],
        "to": "UNION LEAGUE, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION CLUB",
          "UNION CLUB, (?)"
        ],
        "to": "UNION CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PULLMAN DINING CAR SERVICE EN ROUTE",
          "PULLMAN DINING CAR SERVICE (EN ROUTE?)"
        ],
        "to": "PULLMAN DINING CAR SERVICE EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S VADERLAND",
          "EN ROUTE S.S. VADERLAND"
        ],
        "to": "EN ROUTE S.S VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ACADEMY OF MUSIC BROOKLYN, NY",
          "ACADEMY OF MUSIC, [BROOKLYN, NY]"
        ],
        "to": "ACADEMY OF MUSIC, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL [SAN FRANCISCO, CA]",
          "FAIRMONT HOTEL, SAN FRANCISCO, CA"
        ],
        "to": "FAIRMONT HOTEL, SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BLDG. [NY]",
          "PARK ROW BLDG., [NY, NY]"
        ],
        "to": "PARK ROW BLDG. , NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.DENIS HOTEL,NY",
          "ST.DENIS HOTEL[NY]"
        ],
        "to": "ST.DENIS HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Plaza",
          "PLAZA, THE"
        ],
        "to": "THE PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLORADO SPRINGS, CO",
          "[COLORADO SPRINGS, CO]"
        ],
        "to": "COLORADO SPRINGS, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. WESTERNLAND",
          "EN ROUTE ABOARD S.S. WESTERNLAND;"
        ],
        "to": "EN ROUTE ABOARD S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARGYLE,THE,BROOKLYN,NY",
          "ARGYLE,THE,[BROOKLYN,NY]"
        ],
        "to": "ARGYLE,THE, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY, OH",
          "PUT-IN-BAY, OH;"
        ],
        "to": "PUT-IN-BAY, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA TOURAINE",
          "ABOARD PAQUEBOT \"LA TOURAINE\""
        ],
        "to": "ABOARD PAQUEBOT LA TOURAINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM",
          "AUDITORIUM, (?)"
        ],
        "to": "AUDITORIUM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IROQUOIS,(BUFFALO,N.Y.)",
          "HOTEL IROQUOIS,BUFFALO,NY"
        ],
        "to": "HOTEL IROQUOIS, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CONTINENTAL (PARIS, FRANCE?)",
          "HOTEL CONTINENTAL, [PARIS, FRANCE]"
        ],
        "to": "HOTEL CONTINENTAL, PARIS, FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GLENWOOD SPRINGS, CO",
          "[GLENWOOD SPRINGS, CO]"
        ],
        "to": "GLENWOOD SPRINGS, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAWLING, NY",
          "PAWLING NY(?)"
        ],
        "to": "PAWLING, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S.ROTTERDAM",
          "RMS-ROTTERDAM"
        ],
        "to": "R.M.S.ROTTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS KAISER WILHELM DER GROSSE",
          "S.S. \"KAISER WILHELM DER GROSSE\""
        ],
        "to": "S.S. \"KAISER WILHELM DER GROSSE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD  PRINZ FRIEDRICH WILHELM''",
          "ABOARD 'PRINZ FRIEDRICH WILHELM'"
        ],
        "to": "ABOARD  PRINZ FRIEDRICH WILHELM''"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD ABOVE",
          "EN ROUTE ABOARD ABOVE (?)"
        ],
        "to": "EN ROUTE ABOARD ABOVE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH;"
        ],
        "to": "PUT-IN-BAY ISLAND, LAKE ERIE, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RUSSELL HOUSE, DETROIT, MI",
          "RUSSELL HOUSE; DETROIT, MI"
        ],
        "to": "RUSSELL HOUSE, DETROIT, MI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ORLEANS, LA",
          "NEW ORLEANS, [LA]"
        ],
        "to": "NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BAR HARBOR [ME]",
          "BAR HARBOR, ME"
        ],
        "to": "BAR HARBOR, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SCHNELLDAMPFER \"AUGUSTE VICTORIA\"",
          "SCHNELLDAMPFER: \"AUGUSTE VICTORIA\""
        ],
        "to": "SCHNELLDAMPFER \"AUGUSTE VICTORIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. ZEALANDIA",
          "SS ZEALANDIA"
        ],
        "to": "S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S. ZEELAND",
          "EN ROUTE S.S ZEELAND"
        ],
        "to": "EN ROUTE S.S ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON,WASH.DC",
          "THE ARLINGTON,WASH.DC."
        ],
        "to": "THE ARLINGTON, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE",
          "(UNION LEAGUE?)"
        ],
        "to": "UNION LEAGUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIRAMAR (?)",
          "[MIRAMAR?]"
        ],
        "to": "MIRAMAR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA LORRAINE",
          "ABOARD PAQUEBOT \"LA LORRAINE\""
        ],
        "to": "ABOARD PAQUEBOT LA LORRAINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD STREET, NY",
          "57 BROAD STREET - NY"
        ],
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI [OH]"
        ],
        "to": "CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS. KASUGA",
          "EN ROUTE ABOARD SS KASUGA"
        ],
        "to": "EN ROUTE ABOARD SS KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT \"LA BRETAGNE\"",
          "ABOARD PAQUEBOT LA BRETAGNE"
        ],
        "to": "ABOARD PAQUEBOT LA BRETAGNE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE,VA",
          "ROANOKE,VA;"
        ],
        "to": "ROANOKE, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MINNEAPOLIS CLUB, MINNEAPOLIS, MN",
          "MINNEAPOLIS CLUB; MINNEAPOLIS, MN"
        ],
        "to": "MINNEAPOLIS CLUB, MINNEAPOLIS, MN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. FRIESLAND",
          "EN ROUTE ABOARD SS FRIESLAND"
        ],
        "to": "EN ROUTE ABOARD S.S. FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ATLANTIC CITY,NJ",
          "ATLANTIC CITY,[NJ]"
        ],
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.ZEELAND",
          "EN ROUTE  S.S.ZEELAND"
        ],
        "to": "EN ROUTE  S.S. ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BWAY & 63RD ST. NY",
          "B'WAY & 63RD ST. NY"
        ],
        "to": "BWAY & 63RD ST., NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SYRACUSE NY",
          "SYRACUSE, NY"
        ],
        "to": "SYRACUSE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADIRONDACKS, NY",
          "ADIRONDACKS [NY]"
        ],
        "to": "ADIRONDACKS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRANCONIA NOTCH NH",
          "FRANCONIA NOTCH NH,"
        ],
        "to": "FRANCONIA NOTCH NH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTOONA, PA",
          "ALTOONA, PA;"
        ],
        "to": "ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];",
          "139 EIGHTH STREET, BET. BROADWAY AND 4TH AVE., NEW YORK, [NY];"
        ],
        "to": "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOS ANGELES, CA;",
          "LOS ANGELES, CA"
        ],
        "to": "LOS ANGELES, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NEW YORK",
          "HOTEL MANHATTAN, [NEW YORK]"
        ],
        "to": "HOTEL MANHATTAN, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILWAUKEE, WI",
          "MILWAUKEE, [WI];"
        ],
        "to": "MILWAUKEE, WI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL,(NY)",
          "WINDSOR HOTEL[NY]"
        ],
        "to": "WINDSOR HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAPLES [ITALY]",
          "NAPLES, ITALY"
        ],
        "to": "NAPLES, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KRUEGER AUDITORIUM (NEWARK NJ?)",
          "KRUEGER AUDITORIUM, NEWARK, NJ"
        ],
        "to": "KRUEGER AUDITORIUM, NEWARK, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE CLUB, NEW YORK, NY",
          "UNION LEAGUE CLUB, [NEW YORK, NY?]"
        ],
        "to": "UNION LEAGUE CLUB, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS \"FRIEDRICH DER GROSSE\"",
          "SS FRIEDRICH DER GROSSE"
        ],
        "to": "SS FRIEDRICH DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR, NEW YORK",
          "HOTEL ASTOR, [NEW YORK]"
        ],
        "to": "HOTEL ASTOR, NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO ATHLETIC ASSOCIATION",
          "CHICAGO ATHLETIC ASSOCIATION;"
        ],
        "to": "CHICAGO ATHLETIC ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL (NEW YORK?)",
          "ST. DENIS HOTEL, NEW YORK"
        ],
        "to": "ST. DENIS HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TERRACE GARDEN",
          "TERRACE GARDEN,?"
        ],
        "to": "TERRACE GARDEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66TH ST. & BWAY NY",
          "66TH ST & B'WAY, NY"
        ],
        "to": "66TH ST & B'WAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL, NEW ORLEANS LA",
          "ST. CHARLES HOTEL, NEW ORLEANS, LA"
        ],
        "to": "ST. CHARLES HOTEL, NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB (BUFFALO NY?)"
        ],
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD STREET, NEW YORK, [NY]",
          "57 BROAD STREET, NEW YORK, NY"
        ],
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAMPOBELLO  ISLAND,",
          "CAMPOBELLO ISLAND"
        ],
        "to": "CAMPOBELLO ISLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BELLEVUE",
          "BELLEVUE HOTEL"
        ],
        "to": "HOTEL BELLEVUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAVANA,CUBA",
          "[HAVANA,CUBA]"
        ],
        "to": "HAVANA, CUBA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "HOTEL CECIL, LONDON, ENGLAND"
        ],
        "to": "HOTEL CECIL, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SARATOGA SPRINGS,NY",
          "SARATOGA SPRINGS,[NY]"
        ],
        "to": "SARATOGA SPRINGS, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR CASTLE, ENGLAND",
          "WINDSOR CASTLE, [ENGLAND]"
        ],
        "to": "WINDSOR CASTLE, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASHVILLE, TENN.",
          "NASHVILLE, TENN;"
        ],
        "to": "NASHVILLE, TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WILLARD, WASHINGTON, DC",
          "WILLARD HOTEL, [WASHINGTON, DC]"
        ],
        "to": "HOTEL WILLARD, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF ASTORIA",
          "WALDORF ASTORIA, THE"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS WESTERNLAND, EN ROUTE",
          "SS WESTERNLAND - EN ROUTE"
        ],
        "to": "SS WESTERNLAND, EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER,R.I.",
          "NARRAGANSETT PIER,RI"
        ],
        "to": "NARRAGANSETT PIER, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUDAPEST, HUNGARY",
          "BUDAPEST, (HUNGARY)"
        ],
        "to": "BUDAPEST, HUNGARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SARATOGA, NY",
          "SARATOGA, [NY]"
        ],
        "to": "SARATOGA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "156 SECOND AVENUE (NY?)",
          "156 SECOND AVENUE, [NY]"
        ],
        "to": "156 SECOND AVENUE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAYLOR'S HOTEL, JERSEY CITY [NJ]",
          "TAYLOR'S HOTEL, JERSEY CITY, N.J."
        ],
        "to": "TAYLOR'S HOTEL, JERSEY CITY, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON [ENGLAND]",
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON, [ENGLAND]"
        ],
        "to": "THE HOTEL METROPOLE, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO BEACH HOTEL [CHICAGO, IL]",
          "CHICAGO BEACH HOTEL, CHICAGO, [IL];"
        ],
        "to": "CHICAGO BEACH HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[TOKYO, JAPAN]",
          "TOKYO, JAPAN"
        ],
        "to": "TOKYO, JAPAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BUILDING [NY]",
          "PARK ROW BUILDING, [NY]"
        ],
        "to": "PARK ROW BUILDING, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND PACIFIC HOTEL",
          "GRAND PACIFIC HOTEL,"
        ],
        "to": "GRAND PACIFIC HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S,NY",
          "DELMONICO'S,[NY]",
          "DELMONICO'S[NY]",
          "DELMONICO'S,(NY?)",
          "DELMONICOS,[NY]"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, CINCINNATI OH",
          "GRAND HOTEL, CINCINNATI OH;",
          "GRAND HOTEL, CINCINNATI [OH]",
          "GRAND HOTEL, CINCINNATI, OH",
          "GRAND HOTEL, [CINCINNATI, OH]"
        ],
        "to": "GRAND HOTEL, CINCINNATI OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"EMPRESS OF CHINA\"",
          "RMS EMPRESS OF CHINA",
          "R.M.S. EMPRESS OF CHINA"
        ],
        "to": "RMS EMPRESS OF CHINA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK CITY",
          "NEW YORK CITY, DELMONICO'S",
          "NEW YORK CITY; DELMONICO'S"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAVOY HOTEL, NEW YORK, NY",
          "HOTEL SAVOY, NEW YORK, NY"
        ],
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S, NEW YORK, NY",
          "SHERRY'S NEW YORK, NY"
        ],
        "to": "SHERRY'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON, D.C."
        ],
        "to": "WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WALTON, PHILADELPHIA, PA",
          "HOTEL WALTON, PHILADELPHIA [PA]"
        ],
        "to": "HOTEL WALTON, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S NEW YORK, NY"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NEW YORK, NY",
          "MANHATTAN HOTEL NEW YORK, NY"
        ],
        "to": "HOTEL MANHATTAN, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE PHILADELPHIA, PA",
          "UNION LEAGUE, PHILADELPHIA, PA"
        ],
        "to": "UNION LEAGUE, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK ATHLETIC CLUB",
          "NEW YORK ATHLETIC CLUB, [NEW YORK]"
        ],
        "to": "NEW YORK ATHLETIC CLUB, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE CLUB NY;",
          "UNION LEAGUE CLUB, NY"
        ],
        "to": "UNION LEAGUE CLUB, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH, L.I., NY"
        ],
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE AUDITORIUM, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO, IL"
        ],
        "to": "THE AUDITORIUM, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S,[NEW YORK, N.Y.]",
          "[DELMONICO'S,NEW YORK NY]"
        ],
        "to": "DELMONICO'S,[NEW YORK, N.Y.]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL, NEW YORK, NY",
          "ST. DENIS HOTEL, [NEW YORK, NY?]"
        ],
        "to": "ST. DENIS HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S ZEELAND",
          "EN ROUTE  S.S. ZEELAND"
        ],
        "to": "EN ROUTE S.S ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI , OH"
        ],
        "to": "CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN,NY",
          "HOTEL MANHATTAN,[NY]"
        ],
        "to": "HOTEL MANHATTAN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. PETERSBURG, RUSSIA",
          "ST. PETERSBURG (RUSSIA?)"
        ],
        "to": "ST. PETERSBURG, RUSSIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON, WASHINGTON, DC"
        ],
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. AUGUSTINE, FL",
          "ST.AUGUSTINE,FL"
        ],
        "to": "ST. AUGUSTINE, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FL",
          "TAMPA,FL"
        ],
        "to": "TAMPA, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIAMI BISCAYNE BAY, FL",
          "MIAMI BISCAYNE BAY,FL"
        ],
        "to": "MIAMI BISCAYNE BAY, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. WESTERNLAND",
          "S.S.WESTERNLAND"
        ],
        "to": "S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE",
          "ENROUTE"
        ],
        "to": "EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S,[NEW YORK, N.Y.]"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS, MO",
          "[ST.LOUIS,MO?]",
          "ST LOUIS,MO",
          "[ST.LOUIS, MO]"
        ],
        "to": "ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA,NEW YORK,NY"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, NP",
          "NASSAU,N.P.",
          "NASSAU, N. P.,"
        ],
        "to": "NASSAU, NP"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIAMI BISCAYNE BAY,FLA.",
          "MIAMI BISCAYNE BAY, FLA.",
          "MIAMI,BISCAYNE BAY,FLA."
        ],
        "to": "MIAMI BISCAYNE BAY, FLA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY ISLAND, OH",
          "PUT IN BAY ISLAND, OH",
          "PUT-IN-BAY-ISLAND, OH;"
        ],
        "to": "PUT-IN-BAY ISLAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.AUGUSTINE,FLA.",
          "ST. AUGUSTINE, FLA",
          "ST.AUGUSTINE, FLA."
        ],
        "to": "ST. AUGUSTINE, FLA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTHERN HOTEL, ST. LOUIS, MO",
          "SOUTHERN HOTEL,ST. LOUIS,MO.",
          "SOUTHERN HOTEL,[ST.LOUIS,MO]"
        ],
        "to": "SOUTHERN HOTEL, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD STREET, NEW YORK, NY",
          "57 BROAD STREET,NEW YORK,NY"
        ],
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPENHAGEN, DENMARK",
          "COPENHAGEN,DENMARK"
        ],
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IROQUOIS, BUFFALO, NY",
          "HOTEL IROQUOIS, BUFFALO,NY"
        ],
        "to": "HOTEL IROQUOIS, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S.ZEELAND",
          "EN ROUTE ABOARD S.S. ZEELAND"
        ],
        "to": "EN ROUTE ABOARD S.S.ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE VICTORIA",
          "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE-VICTORIA"
        ],
        "to": "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITE MOUNTAINS, NH",
          "WHITE MOUNTAINS,N.H."
        ],
        "to": "WHITE MOUNTAINS, NH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF ASTORIA",
          "The Waldorf-Astoria"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ORLEANS, LA",
          "NEW ORLEANS,[LA?]"
        ],
        "to": "NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. ZEALANDIA",
          "EN ROUTE ABOARD S.S.ZEALANDIA"
        ],
        "to": "EN ROUTE ABOARD S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE",
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSER"
        ],
        "to": "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND,OHIO",
          "CLEVELAND, OHIO"
        ],
        "to": "CLEVELAND, OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. CAMPANIA",
          "R.M.S.\"CAMPANIA\""
        ],
        "to": "R.M.S. CAMPANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT,VA"
        ],
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALACE HOTEL, SAN FRANCISCO, CA",
          "PALACE HOTEL, SAN FRANCISCO, CAL"
        ],
        "to": "PALACE HOTEL, SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SYRACUSE, NY",
          "SYRACUSE,NY"
        ],
        "to": "SYRACUSE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON, WASHINGTON,DC"
        ],
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTH POLAND, ME",
          "SOUTH POLAND,ME."
        ],
        "to": "SOUTH POLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC,CANADA"
        ],
        "to": "QUEBEC, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P., BAHAMAS",
          "NASSAU, N.P.BAHAMAS"
        ],
        "to": "NASSAU, N.P., BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS.KOBE MARU"
        ],
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WACO, TX",
          "WACO,TX"
        ],
        "to": "WACO, TX"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R. M. S. ETRURIA"
        ],
        "to": "R. M. S. ETRURIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF- ASTORIA, NEW YORK"
        ],
        "to": "WALDORF- ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA HOTEL, NEW YORK, NY",
          "WALDORF ASTORIA HOTEL, NEW YORK, NY"
        ],
        "to": "WALDORF-ASTORIA HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHATTANOOGA,TENN.",
          "CHATTANOOGA, TENN."
        ],
        "to": "CHATTANOOGA, TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MA",
          "BOSTON,MA."
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STEAMSHIP KAISER WILHELM DER GROSSE",
          "STEAMSHIP KAISER WILHELM DER GROSSER"
        ],
        "to": "STEAMSHIP KAISER WILHELM DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SPRINGFIELD,MASS.",
          "SPRINGFIELD, MASS."
        ],
        "to": "SPRINGFIELD, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM, CHICAGO, IL",
          "AUDITORIUM,[CHICAGO, IL]"
        ],
        "to": "AUDITORIUM, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH,VA"
        ],
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER, RI",
          "NARAGANSETT PIER, RI"
        ],
        "to": "NARAGANSETT PIER, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBUS, OHIO",
          "COLUMBUS,OHIO"
        ],
        "to": "COLUMBUS, OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAPLES, ITALY",
          "NAPLES,[ITALY]"
        ],
        "to": "NAPLES, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOKYO, JAPAN",
          "[TOKYO,JAPAN]?"
        ],
        "to": "TOKYO, JAPAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STEAMSHIP NORTH WEST",
          "STEAMSHIP NORTHWEST"
        ],
        "to": "STEAMSHIP NORTH WEST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, ME",
          "PORTLAND,ME"
        ],
        "to": "PORTLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NEW YORK, NY",
          "HOTEL MANHATTAN,NEW YORK [NY]"
        ],
        "to": "HOTEL MANHATTAN, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERGEN, NORWAY",
          "BERGEN,NORWAY"
        ],
        "to": "BERGEN, NORWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL, NEW YORK, NY",
          "ST.DENIS HOTEL, NEW YORK, NY"
        ],
        "to": "ST. DENIS HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD DAMPFER H.H. MEIER",
          "EN ROUTE ABOARD DAMPFER H.H.MEIER"
        ],
        "to": "EN ROUTE ABOARD DAMPFER H.H. MEIER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNGS HOTEL,BOSTON,MA"
        ],
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERLIN, GERMANY",
          "BERLIN,GERMANY"
        ],
        "to": "BERLIN, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTOONA, PA",
          "ALTOONA,PA"
        ],
        "to": "ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "HOTEL ST. GEORGE,NYACK,NY"
        ],
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO, NY",
          "BUFFALO,NY"
        ],
        "to": "BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE,RI;"
        ],
        "to": "PROVIDENCE, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.VADERLAND",
          "EN ROUTE S.S VADERLAND"
        ],
        "to": "EN ROUTE S.S.VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - S.S.BARBAROSSA",
          "EN ROUTE S.S \"BARBAROSSA\""
        ],
        "to": "EN ROUTE - S.S.BARBAROSSA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MONTREAL, CANADA",
          "MONTREAL,CANADA"
        ],
        "to": "MONTREAL, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, [NY]",
          "SIXTY SIXTH STREET & BROADWAY, NEW YORK,[NY]"
        ],
        "to": "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\"ST. LOUIS\"",
          "\"ST.LOUIS\""
        ],
        "to": "ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIAGARA FALLS, NY",
          "NIAGARA FALLS,NY"
        ],
        "to": "NIAGARA FALLS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. ROTTERDAM",
          "R.M.S.ROTTERDAM"
        ],
        "to": "R.M.S. ROTTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO,[NY]",
          "DELMONICO [NY]"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION SQUARE, NEW YORK, NY",
          "UNION SQUARE,NEW YORK,NY"
        ],
        "to": "UNION SQUARE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALM BEACH, FL",
          "PALM BEACH,FL"
        ],
        "to": "PALM BEACH, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. WESTERNLAND",
          "ENROUTE ABOARD S.S. WESTERNLAND"
        ],
        "to": "EN ROUTE ABOARD S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH"
        ],
        "to": "PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILWAUKEE, WI",
          "MILWAUKEE,WI"
        ],
        "to": "MILWAUKEE, WI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM HOTEL, CHICAGO, IL",
          "AUDITORIUM HOTEL,[CHICAGO, IL]"
        ],
        "to": "HOTEL AUDITORIUM, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU,BAHAMAS",
          "NASSAU, BAHAMAS"
        ],
        "to": "NASSAU, BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT SQUARE, BUFFALO, NY",
          "ELLICOTT SQUARE,BUFFALO,[NY?]"
        ],
        "to": "ELLICOTT SQUARE, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB,BUFFALO,NY"
        ],
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME,BOSTON.MA"
        ],
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASHEVILLE,NC",
          "ASHEVILLE, NC"
        ],
        "to": "ASHEVILLE, NC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE,ALTOONA,PA"
        ],
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FARGO, ND",
          "FARGO,ND"
        ],
        "to": "FARGO, ND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLORADO SPRINGS, CO",
          "COLORADO SPRINGS,COLO."
        ],
        "to": "COLORADO SPRINGS, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FANEUIL HALL, BOSTON, MA",
          "FANEUIL HALL,BOSTON,MA."
        ],
        "to": "FANEUIL HALL, BOSTON, MA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PLANTERS HOTEL, (ST.LOUIS, MO?)",
          "PLANTERS HOTEL, ST. LOUIS, [MO]",
          "PLANTERS HOTEL, ST. LOUIS,[MO]",
          "PLANTERS HOTEL, ST.LOUIS,MO"
        ],
        "to": "PLANTERS HOTEL, ST.LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF- ASTORIA, NEW YORK, NY",
          "WALDORF-ASTORIA, NEW YORK, NY"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, BOSTON, MASS;",
          "PARKER HOUSE, BOSTON,MASS"
        ],
        "to": "PARKER HOUSE, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCANTILE CLUB ST. LOUIS, MO",
          "MERCANTILE CLUB, ST.LOUIS MO"
        ],
        "to": "MERCANTILE CLUB, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHATTANOOGA, TN",
          "CHATTANOOGA,TN"
        ],
        "to": "CHATTANOOGA,TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD U.S.M.S. ST. LOUIS",
          "ABOARD U.S.M.S.ST. LOUIS"
        ],
        "to": "ABOARD U.S.M.S., ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TORONTO, CANADA",
          "TORONTO,CANADA"
        ],
        "to": "TORONTO, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. SOUTHWARK",
          "ENROUTE ABOARD S.S. SOUTHWARK"
        ],
        "to": "EN ROUTE ABOARD S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD ST. NY",
          "57 BROAD ST.NY"
        ],
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS.KOHE MARU",
          "EN ROUTE ABOARD SS. KOHE MARU"
        ],
        "to": "EN ROUTE ABOARD SS.KOHE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANILA, PI",
          "MANILA,P.I."
        ],
        "to": "MANILA, PI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BUILDING, NEW YORK, NY",
          "PARK ROW BUILDING [NEW YORK,NY?]"
        ],
        "to": "PARK ROW BUILDING, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "117 WEST 34TH STREET,NEW YORK,NY",
          "117WEST 34TH STREET,NEW YORK,NY"
        ],
        "to": "117 WEST 34TH STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF ASTORIA, NY",
          "WALDORF-ASTORIA, NY"
        ],
        "to": "WALDORF ASTORIA, NY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, THE, NEW YORK, NY",
          "WALDORF ASTORIA,THE, NEW YORK, NY",
          "WALDORF-ASTORIA,THE,[NEW YORK,NY?]"
        ],
        "to": "THE WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK",
          "EN-ROUTE EXPRESS-STEAMER FURST BISMARCK",
          "ENROUTE EXPRESS STEAMER \"FURST BISMARCK\""
        ],
        "to": "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FANEUIL HALL, BOSTON, [MASS]",
          "FANEUIL HALL, [BOSTON,MASS]",
          "FANEUIL HALL,BOSTON,MASS."
        ],
        "to": "FANEUIL HALL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOBOKEN, NJ",
          "HOBOKEN,NJ"
        ],
        "to": "HOBOKEN, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - S.S.\"H.H.MEIER\"",
          "EN ROUTE -S.S. \"H.H.MEIER\""
        ],
        "to": "EN ROUTE - S.S.\"H.H.MEIER\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO BEACH HOTEL, CHICAGO, IL",
          "CHICAGO BEACH HOTEL, [CHICAGO.IL?]"
        ],
        "to": "CHICAGO BEACH HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUCKINGHAM PALACE, LONDON, ENGLAND",
          "BUCKINGHAM PALACE, [ LONDON,ENGLAND]"
        ],
        "to": "BUCKINGHAM PALACE, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL, ST.LOUIS, MO",
          "ST.NICHOLAS HOTEL,ST. LOUIS,MO;"
        ],
        "to": "ST. NICHOLAS HOTEL, ST.LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE HOTEL",
          "ST.GEORGE HOTEL"
        ],
        "to": "ST. GEORGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, LONDON, ENGLAND",
          "GRAND HOTEL,LONDON, ENGLAND"
        ],
        "to": "GRAND HOTEL, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CORONADA BEACH, CA.",
          "CORONADA BEACH,CA."
        ],
        "to": "CORONADA BEACH, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL  ST. DENIS, NY",
          "HOTEL ST. DENIS,NY"
        ],
        "to": "HOTEL  ST. DENIS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEAN HOUSE, NEWPORT, RI",
          "OCEAN HOUSE,NEWPORT,R.I."
        ],
        "to": "OCEAN HOUSE, NEWPORT, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY",
          "HOTEL ST.GEORGE,NYACK-ON-HUDSON,[NY]"
        ],
        "to": "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MORELLO'S, NEW YORK, NY",
          "MORELLO'S,NEW YORK, N.Y."
        ],
        "to": "MORELLO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUZERN, SWITZERLAND",
          "LUZERN,SWITZERLAND"
        ],
        "to": "LUZERN, SWITZERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, OR",
          "PORTLAND,OR."
        ],
        "to": "PORTLAND, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COCHRAN, WASHINGTON DC",
          "HOTEL COCHRAN, [WASHINGTON,D.C.]"
        ],
        "to": "HOTEL COCHRAN, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE, NEW YORK, NY",
          "HOFFMAN HOUSE,NEW YORK,NY"
        ],
        "to": "HOFFMAN HOUSE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE STEAMER FURST BISMARCK",
          "ENROUTE STEAMER \"FURST BISMARCK\""
        ],
        "to": "EN ROUTE STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMSTERDAM,HOLLAND",
          "[AMSTERDAM, HOLLAND ?]"
        ],
        "to": "AMSTERDAM, HOLLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HELENA, MT",
          "HELENA,MT"
        ],
        "to": "HELENA, MT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION SQUARE, NY",
          "UNION SQUARE,NY;"
        ],
        "to": "UNION SQUARE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE STEAMER AUGUSTE VICTORIA",
          "ENROUTE STEAMER \"AUGUSTE VICTORIA\""
        ],
        "to": "EN ROUTE STEAMER AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "137 E. MADISON ST. CHICAGO, ILL.",
          "137 E. MADISON ST.,CHICAGO,ILL."
        ],
        "to": "137 E. MADISON ST. CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADWAY, NY",
          "BROADWAY,NY"
        ],
        "to": "BROADWAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.LOUIS CLUB, ST.LOUIS,MO.",
          "ST. LOUIS CLUB, [?ST. LOUIS, MO?]"
        ],
        "to": "ST.LOUIS CLUB, ST.LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MURRAY HILL HOTEL,NY",
          "MURRAY HILL HOTEL [NY]"
        ],
        "to": "MURRAY HILL HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY, NY",
          "ALBANY,NY"
        ],
        "to": "ALBANY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALACE HOTEL, DENVER, [COL]",
          "PALACE HOTEL;DENVER, [COL]"
        ],
        "to": "PALACE HOTEL, DENVER, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO, [NEW YORK, NY?]",
          "DELMONICO,NEW YORK NY;"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE, MADISON SQUARE, NY",
          "[HOFFMAN HOUSE,MADISON SQUARE,NY]"
        ],
        "to": "HOFFMAN HOUSE, MADISON SQUARE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TREMONT TEMPLE, BOSTON, MASS.",
          "TREMONT TEMPLE,BOSTON MASS"
        ],
        "to": "TREMONT TEMPLE, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEEMING HALL, ITHACA, NY",
          "DEEMING HALL,ITHACA,NY"
        ],
        "to": "DEEMING HALL, ITHACA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN CLUB {bROOKLYN, NY}",
          "LINCOLN CLUB,BROOKLYN,NY"
        ],
        "to": "LINCOLN CLUB, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FARGO, NORTH DAKOTA",
          "FARGO,NORTH DAKOTA"
        ],
        "to": "FARGO, ND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "374 FIFTH AVENUE, [NY,NY]",
          "[374 FIFTH AVENUE, NY, NY]"
        ],
        "to": "374 FIFTH AVENUE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOHEMIAN CLUB, SAN FRANCISCO, CA",
          "BOHEMIAN CLUB, SAN FRANCISCO,[CA]"
        ],
        "to": "BOHEMIAN CLUB, SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL, [CINCINNATI, OH?]",
          "ST.NICHOLAS HOTEL, CINCINNATI, OH"
        ],
        "to": "ST.NICHOLAS HOTEL, CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COCHRAN, WASHINGTON, DC",
          "THE COCHRAN, WASHINGTON,D.C."
        ],
        "to": "THE COCHRAN, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARCANUM HALL,ELIZABETH NJ",
          "ARCANUM HALL,ELIZABETH,NJ"
        ],
        "to": "ARCANUM HALL, ELIZABETH, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALNUT ROOMS, THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON, ENGLAND",
          "THE WALNUT ROOMS; THE GRAND HOTEL, TRAFALGAR SQUARE, [LONDON,ENGLAND]"
        ],
        "to": "THE WALNUT ROOMS THE GRAND HOTE TRAFALGAR SQUARE, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS. KINSHIN MARU",
          "EN ROUTE ABOARD SS.KINSHIN MARU"
        ],
        "to": "EN ROUTE ABOARD SS. KINSHIN MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, MELBOURNE;",
          "GRAND HOTEL,MELBOURNE"
        ],
        "to": "GRAND HOTEL, MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD S S VADERLAND",
          "ABOARD S.S. VADERLAND"
        ],
        "to": "ABOARD S S VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DWLMONICO'S NY",
          "DWLMONICO'S,NY"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WEST END HOTEL, NEW ORLEANS, LA",
          "WEST END HOTEL, NEW ORLEANS,LA."
        ],
        "to": "WEST END HOTEL, NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S, NY",
          "SHANLEY'S,NY"
        ],
        "to": "SHANLEY'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALAIS ROYAL - CHRISTIANIA,NORWAY",
          "[PALAIS ROYAL, CHRISTIANIA, NORWAY]"
        ],
        "to": "PALAIS ROYAL - CHRISTIANIA, NORWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY CLUB (ALBANY,NY)",
          "ALBANY CLUB, ALBANY, NY"
        ],
        "to": "ALBANY CLUB, ALBANY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PINEHURST,N.C.",
          "PINEHURST, NC"
        ],
        "to": "PINEHURST, NC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "383 6TH AVE.,1212 BWAY.,& 1476 BWAY. NY",
          "383 6TH AVE.,1476 BWAY.,1212 BWAY., NY"
        ],
        "to": "383 6TH AVE.1212 BWAY.& 1476 BWAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CATARACT HOUSE, NIAGARA FALLS, NY",
          "CATARACT HOUSE,NIAGARA FALLS,NY"
        ],
        "to": "CATARACT HOUSE, NIAGARA FALLS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FLORIDA",
          "TAMPA,FLORIDA"
        ],
        "to": "TAMPA, FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RECTOR'S ,NY",
          "RECTOR'S,NY"
        ],
        "to": "RECTOR'S, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELMAR,NJ",
          "BELMAR, NJ"
        ],
        "to": "BELMAR, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BAKER CITY, OREGON;",
          "BAKER CITY,OREGON"
        ],
        "to": "BAKER CITY, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORY, PUT-IN-BAY-ISLAND, LAKE ERIE, OH.",
          "HOTEL VICTORY,PUT-IN-BAY ISLAND,LAKE ERIE,OH"
        ],
        "to": "HOTEL VICTORY PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CITY, NY",
          "NEW YORK CITY,NY"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE BOURSE, PHILADELPHIA [PA]",
          "THE BOURSE,(PHILADELPHIA,PA)"
        ],
        "to": "THE BOURSE, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, BOSTON, MA",
          "PARKER HOUSE,BOSTON,MA"
        ],
        "to": "PARKER HOUSE, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KRUEGER AUDITORIUM, NEWARK, NJ",
          "KRUEGER AUDITORIUM,NEWARK[NJ]"
        ],
        "to": "KRUEGER AUDITORIUM, NEWARK, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MUNICH, GERMANY",
          "MUNICH,GERMANY"
        ],
        "to": "MUNICH, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF [NY]",
          "WALDORF[NY]"
        ],
        "to": "WALDORF, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVERE HOUSE, [BOSTON,MASS]",
          "REVERE HOUSE,BOSTON,MASS."
        ],
        "to": "REVERE HOUSE,  BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA",
          "ENROUTE ABOARD EXPRESS-STEAMER AUGUSTE VICTORIA"
        ],
        "to": "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN CITY CLUB, (CINCINNATI,OHIO)",
          "QUEEN CITY CLUB, CINCINNATI ,OHIO"
        ],
        "to": "QUEEN CITY CLUB, CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MALONE, NY",
          "MALONE,NY"
        ],
        "to": "MALONE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON,MASS",
          "HOTEL VENDOME; [BOSTON, MASS]"
        ],
        "to": "HOTEL VENDOME, BOSTON,MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MAGDEBURG, [GERMANY?]",
          "MAGDEBURG,[GERMANY]"
        ],
        "to": "MAGDEBURG, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WATSON HOUSE, BABLON, L.I., N.Y.",
          "WATSON HOUSE,BABLON, L.I. N.Y."
        ],
        "to": "WATSON HOUSE BABLON, L.I., NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOBILE,AL.",
          "MOBILE; AL"
        ],
        "to": "MOBILE, AL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN INN, PORTLAND OR",
          "AMERICAN INN, PORTLAND,OR"
        ],
        "to": "AMERICAN INN, PORTLAND,OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAKE GEORGE,NY",
          "[LAKE GEORGE, NY]"
        ],
        "to": "LAKE GEORGE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, MASS;",
          "PARKER HOUSE,[MASS]"
        ],
        "to": "PARKER HOUSE, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "156 SECOND AVENUE, NEW YORK, NY",
          "156 SECOND AVENUE,[NEW YORK,NY]"
        ],
        "to": "156 SECOND AVENUE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK ME?",
          "BRUNSWICK,ME."
        ],
        "to": "BRUNSWICK, ME"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVERE HOUSE,  BOSTON, MA",
          "REVERE HOUSE,BOSTON,MA"
        ],
        "to": "REVERE HOUSE,  BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, MELBOURNE, AUSTRALIA",
          "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)"
        ],
        "to": "GRAND HOTEL, MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BAKER CITY, OR",
          "BAKER CITY; OR"
        ],
        "to": "BAKER CITY, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME, BOSTON,MA"
        ],
        "to": "HOTEL VENDOME, BOSTON, MA"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place using expression grel:value.replace('\"','').replace('?','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "grel:value.replace('\"','').replace('?','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place using expression grel:value.split('[')[0].split(']')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "grel:value.split('[')[0].split(']')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place using expression grel:value.split('(')[0].split(')')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "grel:value.split('(')[0].split(')')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column notes using expression grel:value.replace('\"','').replace('?','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "notes",
          "type": "text",
          "columnName": "notes"
        }
      ]
    },
    "columnName": "notes",
    "expression": "grel:value.replace('\"','').replace('?','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression grel:cells[\"status\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "physical_description",
          "omitBlank": false,
          "type": "list",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "grel:cells[\"status\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column physical_description using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column physical_description",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": ",",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; COL; 5,5X8;"
        ],
        "to": "BOOKLET; COL; 5.5X8;"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column physical_description",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.5 X 8.25;",
          "CARD; COL; ILLUS; 5.5 X 8.25;",
          "CARD; ILLUS; COL; 5.5 X 8.25",
          "CARD ILLUS; COL; 5.5 X 8.25;",
          "CARD; COL; ILLUS; 5.5 X 8.25",
          "CARD; ILLUS COL; 5.5 X 8.25;"
        ],
        "to": "CARD; ILLUS; COL; 5.5 X 8.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; ILLUS; COL; 5.5 X 8;",
          "BROADSIDE; ILLUS; COL; 5.5. X 8;",
          "BROADSIDE; ILLUS ;COL; 5.5 X 8;",
          "BROADSIDE; ILLUS; COL; 5.5 X 8 ;"
        ],
        "to": "BROADSIDE; ILLUS; COL; 5.5 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 5.25 X 7.5;",
          "FOLDER; COL; ILLUS; 5.25 X 7.5;",
          "FOLDER; ILLUS; COL; 5.25 X 7.5",
          "FOLDER ILLUS; COL; 5.25 X 7.5;"
        ],
        "to": "FOLDER; ILLUS; COL; 5.25 X 7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; COL; ILLUS; 5.5 X 8;",
          "CARD; ILLUS; COL; 5.5 X 8;",
          "CARD; COL; ILLUS; 5.5 X 8",
          "CARD; ILLUS; COL; 5.5 X 8"
        ],
        "to": "CARD; ILLUS; COL; 5.5 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 4.5 X 6.75;",
          "FOLDER; COL; ILLUS; 4.5 X 6.75;",
          "FOLDER; ILLUS; COL; 4.5 X 6.75"
        ],
        "to": "FOLDER; ILLUS; COL; 4.5 X 6.75;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; 4.5 X 7;",
          "FOLDER; ILLUS; 4.5 X 7",
          "FOLDER; ILLUS; 4.5 X 7.;"
        ],
        "to": "FOLDER; ILLUS; 4.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; ILLUS BORDER; 5.25 X 7.75;",
          "BROADSIDE; ILLUS. BORDER; 5.25 X 7.75;",
          "BROADSIDE; ILLUS; BORDER; 5.25 X 7.75;"
        ],
        "to": "BROADSIDE; ILLUS. BORDER; 5.25 X 7.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ILLUS. FOLDER",
          "FOLDER ILLUS.",
          "FOLDER; ILLUS;"
        ],
        "to": "FOLDER; ILLUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.5 X 8.5",
          "CARD; COL; ILLUS; 5.5 X 8.5",
          "CARD; ILLUS; COL; 5.5 X 8.5;"
        ],
        "to": "CARD; ILLUS; COL; 5.5 X 8.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5X6.75;",
          "CARD; 4.5X6.75",
          "CARD; 4/5X6/75;"
        ],
        "to": "CARD; 4.5X6.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; EMBLEM; COL; 5.5 X 7;",
          "BROADSIDE; EMBLEM COL; 5.5 X 7;",
          "BROADSIDE EMBLEM COL; 5.5 X 7;"
        ],
        "to": "BROADSIDE; EMBLEM; COL; 5.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 4.5 X 7;",
          "FOLDER; COL; ILLUS; 4.5 X 7;",
          "FOLDER; COL. ILLUS. 4.5 X 7;"
        ],
        "to": "FOLDER; ILLUS; COL; 4.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.5X8.25;",
          "CARD; ILLUS; COL; 5.5X8.25",
          "CARD; 5.5X8.25; ILLUS; COL;"
        ],
        "to": "CARD; ILLUS; COL; 5.5X8.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4X6;",
          "CARD; ILLUS; 4X6; COL;"
        ],
        "to": "CARD; ILLUS; COL; 4X6"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.25 X 8.25;",
          "CARD; ILLUS; COL; 5.25 X 8.25"
        ],
        "to": "CARD; ILLUS; COL; 5.25 X 8.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER;ILL;COL;4.5X7;",
          "FOLDER;ILL;COL;4.5X7"
        ],
        "to": "FOLDER;ILL;COL;4.5X7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "18X14CM FOLDED; 18X28CM OPEN",
          "18X14CM FOLDED' 18X28CM OPEN"
        ],
        "to": "18X14CM FOLDED; 18X28CM OPEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4.5X6.75;",
          "CARD; 4.5X6.75; ILLUS; COL;"
        ],
        "to": "CARD; ILLUS; COL; 4.5X6.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.5X8.5;",
          "CARD; ILLUS; COL; 5.5X8;5;"
        ],
        "to": "CARD; ILLUS; COL; 5.5X8.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 3.5 X 5.5;",
          "CARD; 3.5 X 5.5"
        ],
        "to": "CARD; 3.5 X 5.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4X6;",
          "CARD; 4X6"
        ],
        "to": "CARD; 4X6"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; EMBLEM; 5.5 X 8.5;",
          "BROADSIDE EMBLEM; 5.5 X 8.5;"
        ],
        "to": "BROADSIDE; EMBLEM; 5.5 X 8.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; 5X8;",
          "FOLDER; 5X8; ILLUS;"
        ],
        "to": "FOLDER; ILLUS; 5X8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4X6.25;",
          "CARD; ILLUS; COL; 4.X6.25;"
        ],
        "to": "CARD; ILLUS; COL; 4X6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; ILLUS; 5.5 X 8;",
          "BROADSIDE; ILLUS; 5.5. X 8;"
        ],
        "to": "BROADSIDE; ILLUS; 5.5 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5X6.5;",
          "CARD; 4.5X6.5"
        ],
        "to": "CARD; 4.5X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER",
          "FOLDER;"
        ],
        "to": "FOLDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; 4.25 X 6.5;",
          "CARD' ILLUS; 4.25 X 6.5;"
        ],
        "to": "CARD; ILLUS; 4.25 X 6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 3.75 X 6;",
          "CARD; 3.75 X 6"
        ],
        "to": "CARD; 3.75 X 6"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5X7.25;",
          "CARD; 4;5X7.25;"
        ],
        "to": "CARD; 4.5X7.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; EMBLEM; 5.5 X 7;",
          "BROADSIDE; EMBLEM 5.5 X 7;"
        ],
        "to": "BROADSIDE; EMBLEM; 5.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; 5 X 8;",
          "CARD; 5 X 8; ILLUS;"
        ],
        "to": "CARD; ILLUS; 5 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5 X 7;",
          "CARD; COL; ILLUS; 5 X 7;"
        ],
        "to": "CARD; ILLUS; COL; 5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.5 X 7.75",
          "CARD; ILLUS; COL; 5.5 X 7.75;"
        ],
        "to": "CARD; ILLUS; COL; 5.5 X 7.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 6 X 8;",
          "CARD; COL; ILLUS; 6 X 8;"
        ],
        "to": "CARD; ILLUS; COL; 6 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS COVER; 3 X 7.75;",
          "FOLDER ILLUS COVER; 3 X 7.75;"
        ],
        "to": "FOLDER; ILLUS COVER; 3 X 7.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD;ILL;COL;4.5X7;",
          "CARD;ILL;COL;4;5X7"
        ],
        "to": "CARD;ILL;COL;4;5X7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.25X8;",
          "CARD; ILLUS; COL; 5;25X8;"
        ],
        "to": "CARD; ILLUS; COL; 5;25X8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.25 X 6.25;",
          "CARD; 4.25 X 6.25"
        ],
        "to": "CARD; 4.25 X 6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; 5.5X8.5;",
          "FOLDER; 5.5X8.5"
        ],
        "to": "FOLDER; 5.5X8.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 4.5X6.5;",
          "FOLDER; ILLUS; COL; 4.5X.6.5;"
        ],
        "to": "FOLDER; ILLUS; COL; 4.5X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; 5.75X8.75;",
          "BROADSIDE; 5.75X8.75"
        ],
        "to": "BROADSIDE; 5.75X8.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5 X 7;",
          "CARD 4.5 X 7;"
        ],
        "to": "CARD; 4.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD;ILL;COL;5X8;",
          "CARD;ILL;COL;5X8"
        ],
        "to": "CARD;ILL;COL;5X8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE",
          "BROADSIDE;"
        ],
        "to": "BROADSIDE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 4X6.5;",
          "FOLDER; ILLUS; COL; 4X6.5"
        ],
        "to": "FOLDER; ILLUS; COL; 4X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; 5.25X7.5;",
          "CARD; ILLUS 5.25X7.5;"
        ],
        "to": "CARD; ILLUS; 5.25X7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSHEET; ILLUS; COL; 5X8;",
          "BROADSHEET; ILLUS; COL; 5X8"
        ],
        "to": "BROADSHEET; ILLUS; COL; 5X8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; COL; 4.5 X 7;",
          "BROADSIDE; COL; 4.5 X 7 ;"
        ],
        "to": "BROADSIDE; COL; 4.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; 4.5X7.25;",
          "CARD; ILLUS; 4.5X7.25"
        ],
        "to": "CARD; ILLUS; 4.5X7.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 5.25 X 8;",
          "CARD; COL; ILLUS; 5.25 X 8;"
        ],
        "to": "CARD; ILLUS; COL; 5.25 X 8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 4X6;",
          "FOLDER; ILLUS; COL. 4X6;"
        ],
        "to": "FOLDER; ILLUS; COL. 4X6"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 5.5 X 7;",
          "FOLDER; COL; ILLUS; 5.5 X 7;"
        ],
        "to": "FOLDER; ILLUS; COL; 5.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5X7;",
          "CARD; 4.5X7"
        ],
        "to": "CARD; 4.5X7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "22X14.5CM FOLDED; 22X29CM OPEN",
          "22X29CM FOLDED; 22X14.5CM OPEN"
        ],
        "to": "22X14.5CM FOLDED; 22X29CM OPEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; 5.5 X 7;",
          "FOLDER;; ILLUS; 5.5 X 7;"
        ],
        "to": "FOLDER; ILLUS; 5.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 5.5X8;",
          "FOLDER; ILLUS; COL; 5.5X8"
        ],
        "to": "FOLDER; ILLUS; COL; 5.5X8"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD;",
          "CARD"
        ],
        "to": "CARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 5.25 X 7;",
          "CARD; 5;25 X 7;"
        ],
        "to": "CARD; 5.25 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD;ILL;COL;4.5X6.5;",
          "CARD;ILL;COL;4.5X6.5'"
        ],
        "to": "CARD;ILL;COL;4.5X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4.5X7.5;",
          "CARD; COL; ILLUS; 4.5X7.5;"
        ],
        "to": "CARD; ILLUS; COL; 4.5X7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.25 X 6.5;",
          "CARD; 4;25 X 6.5;"
        ],
        "to": "CARD; 4.25 X 6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; 4.5X7;",
          "FOLDER; 4.5X7"
        ],
        "to": "FOLDER; 4.5X7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 7;",
          "BOOKLET; COL; ILLUS; 5.5 X 7;"
        ],
        "to": "BOOKLET; ILLUS; COL; 5.5 X 7"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column physical_description",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4X6.5;",
          "CARD; 4X6.5",
          "CARD; 4X6/5;"
        ],
        "to": "CARD; 4X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; 6 X 9.5;",
          "FOLDER; ILLUS; 6 X 9.5",
          "FOLDER; ILLUS; 9.5 X 6;"
        ],
        "to": "FOLDER; ILLUS; 6 X 9.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 5X7.5;",
          "CARD 5X7.5",
          "CARD; 5X7.5"
        ],
        "to": "CARD; 5X7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; 8 X 11.75 INCHES",
          "BOOKLET 8 X 11.75 INCHES"
        ],
        "to": "BOOKLET; 8 X 11.75 INCHES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4X6.25;",
          "CARD, 4X6.25"
        ],
        "to": "CARD; 4X6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS.COVER; COL; 4 X 6.5;",
          "FOLDER ILLUS.COVER; COL; 4 X 6.5;"
        ],
        "to": "FOLDER; ILLUS.COVER; COL; 4 X 6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER;4.25X6.25",
          "FOLDER;4.25X6.25;"
        ],
        "to": "FOLDER;4.25X6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD, 6.75X10.5",
          "CARD; 6.75X10.5"
        ],
        "to": "CARD; 6.75X10.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.5 X 6.25;",
          "CARD; 4.5 X 6.25"
        ],
        "to": "CARD; 4.5 X 6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; 3.5X5",
          "FOLDER; 3.5X5;"
        ],
        "to": "FOLDER; 3.5X5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; 5.75X8.75",
          "FOLDER; 5.75X8.75;"
        ],
        "to": "FOLDER; 5.75X8.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.25X6.75;",
          "CARD; 4.25X6.75"
        ],
        "to": "CARD; 4.25X6.75"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; 4.25X6.25;",
          "CARD; ILLUS; 4.25X6.25"
        ],
        "to": "CARD; ILLUS; 4.25X6.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 4.25X6.5;",
          "CARD; 4.25X6.5"
        ],
        "to": "CARD; 4.25X6.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; ILLUS; COL; 6 X 7.5",
          "BOOKLET; ILLUS; COL; 6 X 7.5;"
        ],
        "to": "BOOKLET; ILLUS; COL; 6 X 7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; 9.5 X 13.5 INCHES",
          "FOLDER 9.5 X 13.5 INCHES"
        ],
        "to": "FOLDER; 9.5 X 13.5 INCHES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4.75X7.25;",
          "CARD; ILLUS; COL; 4/75X7.25;"
        ],
        "to": "CARD; ILLUS; COL; 4.75X7.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; ILLUS; COL; 4.5 X 7;",
          "CARD; COL; ILLUS; 4.5 X 7;"
        ],
        "to": "CARD; ILLUS; COL; 4.5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5;",
          "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5"
        ],
        "to": "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; ILLUS; COL; 5 X 7;",
          "FOLDER; COL; ILLUS; 5 X 7;"
        ],
        "to": "FOLDER; ILLUS; COL; 5 X 7"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARD; 5X7.25;",
          "CARD; 5X7.25"
        ],
        "to": "CARD; 5X7.25"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSHEET; ILLUS OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;",
          "BROADSHEET; ILLUS. OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;"
        ],
        "to": "BROADSHEET; ILLUS OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOLDER; COL; ILLUS; 5.5 X 7.5;",
          "FOLDER; ILLUS; COL; 5.5 X 7.5;"
        ],
        "to": "FOLDER; COL; ILLUS; 5.5 X 7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADSIDE; ILLUS; COL; 5.5 X 8.5;",
          "BROADSIDE; COL; ILLUS; 5.5 X 8.5;"
        ],
        "to": "BROADSIDE; ILLUS; COL; 5.5 X 8.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 7.5;",
          "BOOKLET; COL; ILLUS; 5.5 X 7.5;"
        ],
        "to": "BOOKLET; ILLUS; COL; 5.5 X 7.5"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOOKLET; ILLUS; COL; 5 X 7;",
          "BOOKLET; COL; ILLUS; 5 X 7;"
        ],
        "to": "BOOKLET; ILLUS; COL; 5 X 7"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "place",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column notes using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column notes",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "2ND CABIN MENU HANDWRITTEN;",
          "2ND CABIN MENU; HANDWRITTEN;",
          "MENU HANDWRITTEN; 2ND CABIN MENU;",
          "MENU HANDWRITTEN; 2ND CABIN;",
          "MENU HANDWRITTEN; 2ND CABIN"
        ],
        "to": "MENU HANDWRITTEN; 2ND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DIETER ZANDER COLLECTION.",
          "DIETER ZANDER COLLECTION",
          "DIETER ZANDER COLLECTION. ",
          "DIETER ZANDER COLLECTION;"
        ],
        "to": "DIETER ZANDER COLLECTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGLISH AND FRENCH ARE SECONDARY LANGUAGES",
          "FRENCH AND ENGLISH ARE SECONDARY LANGUAGES",
          "FRENCH AND ENGLISH ARE SECONDARY LANGUAGES."
        ],
        "to": "FRENCH AND ENGLISH ARE SECONDARY LANGUAGES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGLISH IS SECONDARY LANGUAGE",
          "ENGLISH IS SECONDARY LANGUAGE. ",
          "ENGLISH IS SECONDARY LANGUAGE."
        ],
        "to": "ENGLISH IS SECONDARY LANGUAGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TYPEWRITTEN AND MECHANICALLY  REPRODUCED;",
          "TYPEWRITTEN AND MECHANICALLY REPRODUCED",
          "TYPEWRITTEN AND MECHANICALLY REPRODUCED;"
        ],
        "to": "TYPEWRITTEN AND MECHANICALLY REPRODUCED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITTEN;",
          "HANDWRITTEN MENU;",
          "MENU HANDWRITTEN"
        ],
        "to": "HANDWRITTEN MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE EXPLORERS CLUB",
          "THE EXPLORERS' CLUB",
          "THE EXPLORER'S CLUB"
        ],
        "to": "THE EXPLORERS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITTEN IN FRENCH;",
          "MENU IN FRENCH; HANDWRITTEN;",
          "HANDWRITTEN MENU IN FRENCH;"
        ],
        "to": "HANDWRITTEN MENU IN FRENCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN, LOGO;",
          "LOGO; HANDWRITTEN;",
          "HANDWRITTEN;, LOGO;"
        ],
        "to": "HANDWRITTEN, LOGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN GERMAN AND ENGLISH",
          "MENU IN GERMAN AND IN ENGLISH",
          "MENU IN GERMAN AND ENGLISH;"
        ],
        "to": "MENU IN GERMAN AND ENGLISH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHIP AT SEA;  MENU IN GERMAN ;  MAY BE USED AS POSTCARD;",
          "SHIP AT SEA;  MENU IN GERMAN;  MAY BE USED AS POSTCARD;",
          "SHIP AT SEA; MENU IN GERMAN;  MAY BE USED AS POSTCARD;"
        ],
        "to": "SHIP AT SEA; MENU IN GERMAN ; MAY BE USED AS POSTCARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY",
          "THE TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY"
        ],
        "to": "THE TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN FRENCH;WINES SERVED;2 COPIES",
          "MENU IN FRENCH;WINES SERVED;2 COPIES;"
        ],
        "to": "MENU IN FRENCH; WINES SERVED; 2 COPIES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROGRAM INCLUDED",
          "PROGRAM INCLUDED;"
        ],
        "to": "PROGRAM INCLUDED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST & PRICES ON BACK;",
          "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST ON BACK;"
        ],
        "to": "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST & PRICES ON BACK;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS.",
          "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS. "
        ],
        "to": "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INCLUDES ALL WINES",
          "INCLUDES ALL WINES;"
        ],
        "to": "INCLUDES ALL WINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH COUNTER - LUNCHEON",
          "LUNCH COUNTER LUNCHEON"
        ],
        "to": "LUNCH COUNTER LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGO;",
          "LOGO"
        ],
        "to": "LOGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL OR INN",
          "HOTEL OR INN;"
        ],
        "to": "HOTEL OR INN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGO; BLUE STOCK;",
          "BLUE; STOCK; LOGO;"
        ],
        "to": "LOGO; BLUE STOCK"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column notes",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED MENU;",
          "PRICED MENU"
        ],
        "to": "PRICED MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGLISH IS THE SECONDARY LANGUAGE.",
          "ENGLISH IS THE SECONDARY LANGUAGE"
        ],
        "to": "ENGLISH IS THE SECONDARY LANGUAGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU;",
          "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU"
        ],
        "to": "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINE LIST",
          "WINE LIST;"
        ],
        "to": "WINE LIST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN;",
          "HAND-WRITTEN;"
        ],
        "to": "HAND-WRITTEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINES LISTED; MENU IN FRENCH;",
          "MENU IN FRENCH; WINES LISTED;"
        ],
        "to": "WINES LISTED; MENU IN FRENCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER ROOM SERVICE MENU",
          "ROOM SERVICE DINNER MENU"
        ],
        "to": "ROOM SERVICE DINNER MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DECORATIVE BORDER;",
          "DECORATIVE BORDER"
        ],
        "to": "DECORATIVE BORDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRENCH;",
          "FRENCH"
        ],
        "to": "FRENCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "2 COPIES;",
          "2 COPIES"
        ],
        "to": "2 COPIES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN BOTH GERMAN & ENGLISH;",
          "MENU IN BOTH GERMAN & ENGLISH"
        ],
        "to": "MENU IN BOTH GERMAN & ENGLISH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN FRENCH;",
          "MENU IN FRENCH"
        ],
        "to": "MENU IN FRENCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA;JAPAN;",
          "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA,JAPAN;"
        ],
        "to": "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA, JAPAN;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN GERMAN;",
          "MENU IN GERMAN"
        ],
        "to": "MENU IN GERMAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INCLUDES WINE LIST",
          "INCLUDES WINE LIST;"
        ],
        "to": "INCLUDES WINE LIST"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column notes",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLLEGE OF PHARMACY, COLUMBIA UNIVERSITY",
          "COLLEGE OF PHARMACY - COLUMBIA UNIVERSITY"
        ],
        "to": "COLLEGE OF PHARMACY, COLUMBIA UNIVERSITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SPEAKERS & OFFICERS LISTED;",
          "OFFICERS & SPEAKERS LISTED;"
        ],
        "to": "SPEAKERS & OFFICERS LISTED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GREEN STOCK; LOGO;",
          "LOGO; GREEN STOCK;"
        ],
        "to": "LOGO; GREEN STOCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN;RED BORDER;",
          "HANDWRITTEN;RED BORDER"
        ],
        "to": "HANDWRITTEN: RED BORDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED WINE LIST;",
          "PRICED WINE LIST"
        ],
        "to": "PRICED WINE LIST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICES LISTED FOR EACH ITEM;",
          "PRICES FOR EACH ITEM LISTED;"
        ],
        "to": "PRICES LISTED FOR EACH ITEM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATION CAFÃ© - DINNER",
          "STATION CAFÃ© DINNER"
        ],
        "to": "STATION CAFÃ© DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN GERMAN AND ENGLISH; GOLD BORDER",
          "MENU IN GERMAN AND ENGLISH;  GOLD BORDER"
        ],
        "to": "MENU IN GERMAN AND ENGLISH; GOLD BORDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT ON VERSO FOR THE LUXURY FLEET.",
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT FOR THE LUXURY FLEET ON VERSO."
        ],
        "to": "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT ON VERSO FOR THE LUXURY FLEET."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN FRENCH AND ENGLISH;",
          "MENU IN FRENCH AND IN ENGLISH;"
        ],
        "to": "MENU IN FRENCH AND ENGLISH;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITEN",
          "MENU HANDWRITEN;"
        ],
        "to": "MENU HANDWRITEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INCLUDES WINES;",
          "INCLUDES WINES"
        ],
        "to": "INCLUDES WINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROOM SERVICE BREAKFAST",
          "BREAKFAST ROOM SERVICE"
        ],
        "to": "ROOM SERVICE BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SEPARATE LISTING IN ENGLISH AND GERMAN;MUSICAL PROGRAM",
          "SEPARATE LISTING IN ENGLISH AND GERMAN;MUSICAL PROGRAM;"
        ],
        "to": "SEPARATE LISTING IN ENGLISH AND GERMAN; MUSICAL PROGRAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DATE HANDWRITTEN BY FB;",
          "DATE HANDWRITTEN BY FB"
        ],
        "to": "DATE HANDWRITTEN BY FB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DATE HANDWRITTEN;",
          "DATE HAND-WRITTEN;"
        ],
        "to": "DATE HAND-WRITTEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRENCH IS SECONDARY LANGUAGE",
          "FRENCH IS SECONDARY LANGUAGE."
        ],
        "to": "FRENCH IS SECONDARY LANGUAGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A LA CARTE MENU; HOTEL SEAL AT TOP OF MENU;",
          "A LA CARTE MENU; HOTEL SEAL AT TOP OF  MENU;"
        ],
        "to": "A LA CARTE MENU; HOTEL SEAL AT TOP OF MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOASTS LISTED;",
          "TOASTS LISTED"
        ],
        "to": "TOASTS LISTED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE BANKERS' CLUB OF CHICAGO",
          "THE BANKERS CLUB OF CHICAGO"
        ],
        "to": "THE BANKERS CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STATION CAFÃ© - LUNCHEON",
          "STATION CAFÃ© LUNCHEON"
        ],
        "to": "STATION CAFÃ© - LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB;",
          "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB"
        ],
        "to": "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED MENU AND WINE LIST;",
          "PRICED WINE LIST AND MENU;"
        ],
        "to": "PRICED MENU AND WINE LIST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST;  PHOTO OF HOTEL ON COVER;",
          "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST; PHOTO OF HOTEL ON COVER;"
        ],
        "to": "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST; PHOTO OF HOTEL ON COVER;]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED A LA CARTE MENU;",
          "A LA CARTE PRICED MENU"
        ],
        "to": "A LA CARTE PRICED MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROOM SERVICE (DINNER)",
          "ROOM SERVICE DINNER"
        ],
        "to": "ROOM SERVICE DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED;",
          "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED'"
        ],
        "to": "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED MENU; CREST;",
          "PRICED MENU;; CREST;"
        ],
        "to": "PRICED MENU; CREST;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED MENU; MENU HANDWRITTEN;",
          "PRICED MENU; HANDWRITTEN;"
        ],
        "to": "PRICED MENU; MENU HANDWRITTEN;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COAT OF ARMS;",
          "COAT OF ARMS"
        ],
        "to": "COAT OF ARMS;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INCLUDES PRICED WINE LIST;",
          "INCLUDES PRICED WINE LIST"
        ],
        "to": "INCLUDES PRICED WINE LIST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALL ITEMS PRICED;",
          "ALL ITEMS PRICED ;"
        ],
        "to": "ALL ITEMS PRICED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PASSENGERS ON DECK;  MENU IN GERMAN;  MAY BE USED AS POSTCARD;",
          "PASSENGERS ON DECK; MENU IN GERMAN;  MAY BE USED AS POSTCARD;"
        ],
        "to": "PASSENGERS ON DECK; MENU IN GERMAN;  MAY BE USED AS POSTCARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITTEN; MAP ON BACK SHOWING THE ROUTE;",
          "MENU HANDWRITTEN; MAP ON THE BACK SHOWING THE ROUTE;"
        ],
        "to": "MENU HANDWRITTEN; MAP ON BACK SHOWING THE ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN;FLAG;",
          "HAND-WRITTEN;FLAG;"
        ],
        "to": "HAND-WRITTEN; FLAG"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PRICED A LA CARTE MENU; PRICED WINE LIST;",
          "A LA CARTE MENU; PRICED WINE LIST;"
        ],
        "to": "A LA CARTE MENU; PRICED WINE LIST;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH COUNTER - DINNER",
          "LUNCH COUNTER DINNER"
        ],
        "to": "LUNCH COUNTER - DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST;",
          "A LA CARTE PRICED MENU; INCLUDES PRICED WINE & LIQUOR LIST;"
        ],
        "to": "A LA CARTE PRICED MENU; INCLUDES PRICED WINE & LIQUOR LIST;"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROOM SERVICE (LUNCHEON)",
          "ROOM SERVICE LUNCHEON"
        ],
        "to": "ROOM SERVICE LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TYPEWRITTEN ON FORM;2 COPIES;",
          "TYPEWRITTEN ON FORM;2 COPIES"
        ],
        "to": "TYPEWRITTEN ON FORM; 2 COPIES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHINESE RESTAURANT MENU. INCLUDES AMERICAN AND CHINESE MENUS.",
          "CHINESE RESTAURANT MENU. INCLUDES CHINESE AND AMERICAN MENUS. "
        ],
        "to": "CHINESE RESTAURANT MENU. INCLUDES CHINESE AND AMERICAN MENUS. "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA AND GOLDEN GATE;",
          "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA, AND GOLDEN GATE;"
        ],
        "to": "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA AND GOLDEN GATE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK",
          "SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK"
        ],
        "to": "THE SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DIETER ZANDER COLLECTION, COVER IS AN ANTIQUE PRINT FROM THE BERNARD GERARD COLLECTION.",
          "DIETER ZANDER COLLECTION, COVER IS AN ANTIQUE PRINT FROM THE BERNARD GERARD COLLECTION. "
        ],
        "to": "DIETER ZANDER COLLECTION, COVER IS AN ANTIQUE PRINT FROM THE BERNARD GERARD COLLECTION."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE PILGRIMS",
          "THE PILGRIMS  "
        ],
        "to": "THE PILGRIMS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EVACUATION DAY - OLD GUARD",
          "OLD GUARD - EVACUATION DAY"
        ],
        "to": "OLD GUARD - EVACUATION DAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "to": "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SPANISH IS SECONDARY LANGUAGE",
          "SPANISH IS SECONDARY LANGUAGE. "
        ],
        "to": "SPANISH IS SECONDARY LANGUAGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRENCH MENU",
          "FRENCH MENU;"
        ],
        "to": "FRENCH MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN.",
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. "
        ],
        "to": "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD",
          "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD;"
        ],
        "to": "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAGILE",
          "FRAGILE!!"
        ],
        "to": "FRAGILE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column notes",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN; RED BORDER;",
          "HANDWRITTEN: RED BORDER"
        ],
        "to": "HANDWRITTEN: RED BORDER"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column notes",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DATE: MAY, 1900 HAND-WRITTEN [FEB];",
          "HAND-WRITTEN DATE: MAY 1900 [FEB];"
        ],
        "to": "HAND-WRITTEN DATE: MAY 1900 [FEB]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITTEN IN ENGLISH;",
          "MENU HANDWRITTEN IN ENGLISH"
        ],
        "to": "MENU HANDWRITTEN IN ENGLISH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINES;",
          "WINES"
        ],
        "to": "WINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES",
          "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES;"
        ],
        "to": "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G., AND STEAMER;",
          "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G.; AND STEAMER;"
        ],
        "to": "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G., AND STEAMER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HANDWRITTEN IN LAVENDAR INK & THEN PRINTED; DECORATIVE BORDER;",
          "DECORATIVE BORDER; HANDWRITTEN IN LAVENDAR INK & THEN PRINTED;"
        ],
        "to": "HANDWRITTEN IN LAVENDAR INK & THEN PRINTED; DECORATIVE BORDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENU HANDWRITTEN; MAP ON BACK SHOWING ROUTE;",
          "HANDWRITTEN MENU; MAP ON BACK SHOWING ROUTE;"
        ],
        "to": "MENU HANDWRITTEN; MAP ON BACK SHOWING ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMPLETE WINE LIST ON BACK;",
          "COMPLETE WINE LIST ON BACK'"
        ],
        "to": "COMPLETE WINE LIST ON BACK"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Â¥",
                "l": "Â¥"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Â¥"
        ],
        "to": "¥"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression grel:value.replace('Â','')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "IÂ£",
                "l": "IÂ£"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "grel:value.replace('Â','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "S/.",
                "l": "S/."
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S/."
        ],
        "to": "S/"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "zÅ‚.",
                "l": "zÅ‚."
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "zÅ‚."
        ],
        "to": "zÅ"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "â‚¬",
                "l": "â‚¬"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "â‚¬"
        ],
        "to": "€"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Â£",
                "l": "Â£"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Â£"
        ],
        "to": "£"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "kr.",
                "l": "kr."
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "grel:value.split('.')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Kr.",
                "l": "Kr."
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "currency_symbol",
          "omitBlank": false,
          "type": "list",
          "columnName": "currency_symbol"
        }
      ]
    },
    "columnName": "currency_symbol",
    "expression": "grel:value.split('.')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column currency_symbol using expression grel:value.split('.')[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency_symbol",
    "expression": "grel:value.split('.')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column physical_description",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "COM",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMPLETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column status",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "COM",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "status",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMPLETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column physical_description",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "UNDER",
          "name": "physical_description",
          "type": "text",
          "columnName": "physical_description"
        }
      ]
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNDER REVIEW"
        ],
        "to": ""
      }
    ]
  }
]